
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftLTLEGTGEEQNEleftREMADDleftMULDIVMODleftPOWNUMBER ID SPLIT STRING TRUE FALSE PRINT AND OR IF ELSE FOR IN RANGE ADD REM MUL DIV MOD LT GT LPAREN RPAREN ASSIGN COMMA COLON GE LE EQ NE POWstart : function\n    function : function statement SPLIT\n             | function line_statement\n             | empty\n    line_statement : SPLITline_statement : expression SPLIT\n    statement : PRINT LPAREN expr_list RPAREN\n    range : RANGE LPAREN expr_list RPARENline_statement : FOR ID IN range COLON statement SPLITline_statement : statement IF condition_list ELSE statement SPLITif_assign : ID ASSIGN expressionline_statement : if_assign IF condition_list ELSE expression SPLIT\n    line_statement : IF condition_list COLON statement SPLIT\n                   | IF condition_list COLON SPLIT statement SPLIT\n    \n    line_statement : ID ASSIGN expression SPLIT\n                   | ID ASSIGN condition_list SPLIT\n    \n    expr_list : expression\n              | expr_list COMMA expression\n    \n    condition_list : expression\n                   | condition_list AND expression\n                   | condition_list OR expression\n    condition_list : LPAREN condition_list RPARENexpression : TRUEexpression : FALSEexpression : IDexpression : NUMBERexpression : STRING\n    expression : expression ADD expression\n               | expression REM expression\n               | expression MUL expression\n               | expression DIV expression\n               | expression MOD expression\n               | expression GT expression\n               | expression LT expression\n               | expression GE expression\n               | expression LE expression\n               | expression EQ expression\n               | expression NE expression\n               | expression POW expression\n    expression : LPAREN expression RPARENempty :'
    
_lr_action_items = {'PRINT':([0,2,3,5,6,18,23,62,68,73,74,77,84,86,89,92,93,94,],[-41,7,-4,-5,-3,-2,-6,7,7,-15,-16,7,7,-13,-10,-14,-12,-9,]),'SPLIT':([0,2,3,4,5,6,9,11,14,15,16,17,18,22,23,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,62,69,73,74,76,78,79,80,82,86,87,88,89,90,92,93,94,],[-41,5,-4,18,-5,-3,23,-25,-23,-24,-26,-27,-2,-25,-6,-40,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,73,74,77,-7,-15,-16,86,-20,-21,-22,89,-13,92,93,-10,94,-14,-12,-9,]),'FOR':([0,2,3,5,6,18,23,73,74,86,89,92,93,94,],[-41,10,-4,-5,-3,-2,-6,-15,-16,-13,-10,-14,-12,-9,]),'IF':([0,2,3,4,5,6,13,14,15,16,17,18,22,23,45,46,47,48,49,50,51,52,53,54,55,56,57,59,69,73,74,86,89,92,93,94,],[-41,12,-4,19,-5,-3,41,-23,-24,-26,-27,-2,-25,-6,-40,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-11,-7,-15,-16,-13,-10,-14,-12,-9,]),'ID':([0,2,3,5,6,8,10,12,18,19,20,23,24,25,26,27,28,29,30,31,32,33,34,35,37,40,41,61,63,64,70,73,74,81,85,86,89,92,93,94,],[-41,11,-4,-5,-3,22,36,22,-2,22,22,-6,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-15,-16,22,22,-13,-10,-14,-12,-9,]),'TRUE':([0,2,3,5,6,8,12,18,19,20,23,24,25,26,27,28,29,30,31,32,33,34,35,37,40,41,61,63,64,70,73,74,81,85,86,89,92,93,94,],[-41,14,-4,-5,-3,14,14,-2,14,14,-6,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-15,-16,14,14,-13,-10,-14,-12,-9,]),'FALSE':([0,2,3,5,6,8,12,18,19,20,23,24,25,26,27,28,29,30,31,32,33,34,35,37,40,41,61,63,64,70,73,74,81,85,86,89,92,93,94,],[-41,15,-4,-5,-3,15,15,-2,15,15,-6,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-15,-16,15,15,-13,-10,-14,-12,-9,]),'NUMBER':([0,2,3,5,6,8,12,18,19,20,23,24,25,26,27,28,29,30,31,32,33,34,35,37,40,41,61,63,64,70,73,74,81,85,86,89,92,93,94,],[-41,16,-4,-5,-3,16,16,-2,16,16,-6,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-15,-16,16,16,-13,-10,-14,-12,-9,]),'STRING':([0,2,3,5,6,8,12,18,19,20,23,24,25,26,27,28,29,30,31,32,33,34,35,37,40,41,61,63,64,70,73,74,81,85,86,89,92,93,94,],[-41,17,-4,-5,-3,17,17,-2,17,17,-6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-15,-16,17,17,-13,-10,-14,-12,-9,]),'LPAREN':([0,2,3,5,6,7,8,12,18,19,20,23,24,25,26,27,28,29,30,31,32,33,34,35,37,40,41,61,63,64,70,72,73,74,81,85,86,89,92,93,94,],[-41,8,-4,-5,-3,20,8,40,-2,40,8,-6,8,8,8,8,8,8,8,8,8,8,8,8,61,40,40,61,8,8,8,85,-15,-16,8,8,-13,-10,-14,-12,-9,]),'$end':([0,1,2,3,5,6,18,23,73,74,86,89,92,93,94,],[-41,0,-1,-4,-5,-3,-2,-6,-15,-16,-13,-10,-14,-12,-9,]),'ADD':([9,11,14,15,16,17,21,22,39,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,66,75,78,79,83,88,],[24,-25,-23,-24,-26,-27,24,-25,24,24,-40,-28,-29,-30,-31,-32,24,24,24,24,24,24,-39,24,24,24,24,24,24,24,]),'REM':([9,11,14,15,16,17,21,22,39,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,66,75,78,79,83,88,],[25,-25,-23,-24,-26,-27,25,-25,25,25,-40,-28,-29,-30,-31,-32,25,25,25,25,25,25,-39,25,25,25,25,25,25,25,]),'MUL':([9,11,14,15,16,17,21,22,39,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,66,75,78,79,83,88,],[26,-25,-23,-24,-26,-27,26,-25,26,26,-40,26,26,-30,-31,-32,26,26,26,26,26,26,-39,26,26,26,26,26,26,26,]),'DIV':([9,11,14,15,16,17,21,22,39,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,66,75,78,79,83,88,],[27,-25,-23,-24,-26,-27,27,-25,27,27,-40,27,27,-30,-31,-32,27,27,27,27,27,27,-39,27,27,27,27,27,27,27,]),'MOD':([9,11,14,15,16,17,21,22,39,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,66,75,78,79,83,88,],[28,-25,-23,-24,-26,-27,28,-25,28,28,-40,28,28,-30,-31,-32,28,28,28,28,28,28,-39,28,28,28,28,28,28,28,]),'GT':([9,11,14,15,16,17,21,22,39,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,66,75,78,79,83,88,],[29,-25,-23,-24,-26,-27,29,-25,29,29,-40,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,29,29,29,29,29,29,29,]),'LT':([9,11,14,15,16,17,21,22,39,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,66,75,78,79,83,88,],[30,-25,-23,-24,-26,-27,30,-25,30,30,-40,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,30,30,30,30,30,30,30,]),'GE':([9,11,14,15,16,17,21,22,39,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,66,75,78,79,83,88,],[31,-25,-23,-24,-26,-27,31,-25,31,31,-40,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,31,31,31,31,31,31,31,]),'LE':([9,11,14,15,16,17,21,22,39,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,66,75,78,79,83,88,],[32,-25,-23,-24,-26,-27,32,-25,32,32,-40,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,32,32,32,32,32,32,32,]),'EQ':([9,11,14,15,16,17,21,22,39,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,66,75,78,79,83,88,],[33,-25,-23,-24,-26,-27,33,-25,33,33,-40,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,33,33,33,33,33,33,33,]),'NE':([9,11,14,15,16,17,21,22,39,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,66,75,78,79,83,88,],[34,-25,-23,-24,-26,-27,34,-25,34,34,-40,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,34,34,34,34,34,34,34,]),'POW':([9,11,14,15,16,17,21,22,39,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,66,75,78,79,83,88,],[35,-25,-23,-24,-26,-27,35,-25,35,35,-40,35,35,35,35,35,35,35,35,35,35,35,-39,35,35,35,35,35,35,35,]),'ASSIGN':([11,],[37,]),'RPAREN':([14,15,16,17,21,22,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,65,66,75,78,79,80,83,91,],[-23,-24,-26,-27,45,-25,69,-17,-40,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,80,45,45,-20,-21,-22,-18,95,]),'COLON':([14,15,16,17,22,38,39,45,46,47,48,49,50,51,52,53,54,55,56,57,71,78,79,80,95,],[-23,-24,-26,-27,-25,62,-19,-40,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,84,-20,-21,-22,-8,]),'AND':([14,15,16,17,22,38,39,42,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,65,66,67,75,78,79,80,],[-23,-24,-26,-27,-25,63,-19,63,-40,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-19,63,63,-19,63,-19,-20,-21,-22,]),'OR':([14,15,16,17,22,38,39,42,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,65,66,67,75,78,79,80,],[-23,-24,-26,-27,-25,64,-19,64,-40,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-19,64,64,-19,64,-19,-20,-21,-22,]),'ELSE':([14,15,16,17,22,39,42,45,46,47,48,49,50,51,52,53,54,55,56,57,67,78,79,80,],[-23,-24,-26,-27,-25,-19,68,-40,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,81,-20,-21,-22,]),'COMMA':([14,15,16,17,22,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,83,91,],[-23,-24,-26,-27,-25,70,-17,-40,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-18,70,]),'IN':([36,],[58,]),'RANGE':([58,],[72,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'function':([0,],[2,]),'empty':([0,],[3,]),'statement':([2,62,68,77,84,],[4,76,82,87,90,]),'line_statement':([2,],[6,]),'expression':([2,8,12,19,20,24,25,26,27,28,29,30,31,32,33,34,35,37,40,41,61,63,64,70,81,85,],[9,21,39,39,44,46,47,48,49,50,51,52,53,54,55,56,57,59,66,39,75,78,79,83,88,44,]),'if_assign':([2,],[13,]),'condition_list':([12,19,37,40,41,61,],[38,42,60,65,67,65,]),'expr_list':([20,85,],[43,91,]),'range':([58,],[71,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> function','start',1,'p_start','dparser.py',18),
  ('function -> function statement SPLIT','function',3,'p_function','dparser.py',24),
  ('function -> function line_statement','function',2,'p_function','dparser.py',25),
  ('function -> empty','function',1,'p_function','dparser.py',26),
  ('line_statement -> SPLIT','line_statement',1,'p_statement_none','dparser.py',34),
  ('line_statement -> expression SPLIT','line_statement',2,'p_statement_expr','dparser.py',38),
  ('statement -> PRINT LPAREN expr_list RPAREN','statement',4,'p_statement_print','dparser.py',45),
  ('range -> RANGE LPAREN expr_list RPAREN','range',4,'p_range','dparser.py',52),
  ('line_statement -> FOR ID IN range COLON statement SPLIT','line_statement',7,'p_statement_for','dparser.py',57),
  ('line_statement -> statement IF condition_list ELSE statement SPLIT','line_statement',6,'p_statement_cond_postfix_else','dparser.py',62),
  ('if_assign -> ID ASSIGN expression','if_assign',3,'p_ifassign','dparser.py',67),
  ('line_statement -> if_assign IF condition_list ELSE expression SPLIT','line_statement',6,'p_statement_cond_postfix_assign','dparser.py',72),
  ('line_statement -> IF condition_list COLON statement SPLIT','line_statement',5,'p_statement_cond','dparser.py',81),
  ('line_statement -> IF condition_list COLON SPLIT statement SPLIT','line_statement',6,'p_statement_cond','dparser.py',82),
  ('line_statement -> ID ASSIGN expression SPLIT','line_statement',4,'p_statement_assign','dparser.py',94),
  ('line_statement -> ID ASSIGN condition_list SPLIT','line_statement',4,'p_statement_assign','dparser.py',95),
  ('expr_list -> expression','expr_list',1,'p_expression_list','dparser.py',103),
  ('expr_list -> expr_list COMMA expression','expr_list',3,'p_expression_list','dparser.py',104),
  ('condition_list -> expression','condition_list',1,'p_condition_list','dparser.py',115),
  ('condition_list -> condition_list AND expression','condition_list',3,'p_condition_list','dparser.py',116),
  ('condition_list -> condition_list OR expression','condition_list',3,'p_condition_list','dparser.py',117),
  ('condition_list -> LPAREN condition_list RPAREN','condition_list',3,'p_condition_parens','dparser.py',128),
  ('expression -> TRUE','expression',1,'p_expression_true','dparser.py',134),
  ('expression -> FALSE','expression',1,'p_expression_false','dparser.py',140),
  ('expression -> ID','expression',1,'p_expression_var','dparser.py',146),
  ('expression -> NUMBER','expression',1,'p_expression_num','dparser.py',152),
  ('expression -> STRING','expression',1,'p_expression_string','dparser.py',158),
  ('expression -> expression ADD expression','expression',3,'p_expression_two_operator','dparser.py',165),
  ('expression -> expression REM expression','expression',3,'p_expression_two_operator','dparser.py',166),
  ('expression -> expression MUL expression','expression',3,'p_expression_two_operator','dparser.py',167),
  ('expression -> expression DIV expression','expression',3,'p_expression_two_operator','dparser.py',168),
  ('expression -> expression MOD expression','expression',3,'p_expression_two_operator','dparser.py',169),
  ('expression -> expression GT expression','expression',3,'p_expression_two_operator','dparser.py',170),
  ('expression -> expression LT expression','expression',3,'p_expression_two_operator','dparser.py',171),
  ('expression -> expression GE expression','expression',3,'p_expression_two_operator','dparser.py',172),
  ('expression -> expression LE expression','expression',3,'p_expression_two_operator','dparser.py',173),
  ('expression -> expression EQ expression','expression',3,'p_expression_two_operator','dparser.py',174),
  ('expression -> expression NE expression','expression',3,'p_expression_two_operator','dparser.py',175),
  ('expression -> expression POW expression','expression',3,'p_expression_two_operator','dparser.py',176),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_parens','dparser.py',183),
  ('empty -> <empty>','empty',0,'p_empty','dparser.py',193),
]
