
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'NUMBER ID SPLIT STRING TRUE FALSE PRINT ADD REM MUL DIV MOD LT GT LPAREN RPAREN ASSIGN GE LE EQ NE POWstart : function\n    function : function statement SPLIT\n             | function line_statement\n             | empty\n    line_statement : SPLITline_statement : expression SPLIT\n    statement : PRINT LPAREN expression RPAREN\n    \n    line_statement : ID ASSIGN expression SPLIT\n    expression : TRUEexpression : FALSEexpression : IDexpression : NUMBERexpression : STRING\n    expression : expression ADD expression\n               | expression REM expression\n               | expression MUL expression\n               | expression DIV expression\n               | expression MOD expression\n               | expression GT expression\n               | expression LT expression\n               | expression GE expression\n               | expression LE expression\n               | expression EQ expression\n               | expression NE expression\n               | expression POW expression\n    expression : LPAREN expression RPARENempty :'
    
_lr_action_items = {'PRINT':([0,2,3,5,6,15,19,49,],[-27,7,-4,-5,-3,-2,-6,-8,]),'SPLIT':([0,2,3,4,5,6,9,10,11,12,13,14,15,18,19,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,],[-27,5,-4,15,-5,-3,19,-11,-9,-10,-12,-13,-2,-11,-6,-26,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,49,-7,-8,]),'ID':([0,2,3,5,6,8,15,16,19,20,21,22,23,24,25,26,27,28,29,30,31,32,49,],[-27,10,-4,-5,-3,18,-2,18,-6,18,18,18,18,18,18,18,18,18,18,18,18,18,-8,]),'TRUE':([0,2,3,5,6,8,15,16,19,20,21,22,23,24,25,26,27,28,29,30,31,32,49,],[-27,11,-4,-5,-3,11,-2,11,-6,11,11,11,11,11,11,11,11,11,11,11,11,11,-8,]),'FALSE':([0,2,3,5,6,8,15,16,19,20,21,22,23,24,25,26,27,28,29,30,31,32,49,],[-27,12,-4,-5,-3,12,-2,12,-6,12,12,12,12,12,12,12,12,12,12,12,12,12,-8,]),'NUMBER':([0,2,3,5,6,8,15,16,19,20,21,22,23,24,25,26,27,28,29,30,31,32,49,],[-27,13,-4,-5,-3,13,-2,13,-6,13,13,13,13,13,13,13,13,13,13,13,13,13,-8,]),'STRING':([0,2,3,5,6,8,15,16,19,20,21,22,23,24,25,26,27,28,29,30,31,32,49,],[-27,14,-4,-5,-3,14,-2,14,-6,14,14,14,14,14,14,14,14,14,14,14,14,14,-8,]),'LPAREN':([0,2,3,5,6,7,8,15,16,19,20,21,22,23,24,25,26,27,28,29,30,31,32,49,],[-27,8,-4,-5,-3,16,8,-2,8,-6,8,8,8,8,8,8,8,8,8,8,8,8,8,-8,]),'$end':([0,1,2,3,5,6,15,19,49,],[-27,0,-1,-4,-5,-3,-2,-6,-8,]),'ADD':([9,10,11,12,13,14,17,18,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,],[20,-11,-9,-10,-12,-13,20,-11,20,-26,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'REM':([9,10,11,12,13,14,17,18,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,],[21,-11,-9,-10,-12,-13,21,-11,21,-26,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'MUL':([9,10,11,12,13,14,17,18,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,],[22,-11,-9,-10,-12,-13,22,-11,22,-26,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'DIV':([9,10,11,12,13,14,17,18,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,],[23,-11,-9,-10,-12,-13,23,-11,23,-26,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'MOD':([9,10,11,12,13,14,17,18,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,],[24,-11,-9,-10,-12,-13,24,-11,24,-26,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'GT':([9,10,11,12,13,14,17,18,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,],[25,-11,-9,-10,-12,-13,25,-11,25,-26,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'LT':([9,10,11,12,13,14,17,18,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,],[26,-11,-9,-10,-12,-13,26,-11,26,-26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'GE':([9,10,11,12,13,14,17,18,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,],[27,-11,-9,-10,-12,-13,27,-11,27,-26,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'LE':([9,10,11,12,13,14,17,18,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,],[28,-11,-9,-10,-12,-13,28,-11,28,-26,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'EQ':([9,10,11,12,13,14,17,18,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,],[29,-11,-9,-10,-12,-13,29,-11,29,-26,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'NE':([9,10,11,12,13,14,17,18,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,],[30,-11,-9,-10,-12,-13,30,-11,30,-26,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'POW':([9,10,11,12,13,14,17,18,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,],[31,-11,-9,-10,-12,-13,31,-11,31,-26,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'ASSIGN':([10,],[32,]),'RPAREN':([11,12,13,14,17,18,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-9,-10,-12,-13,34,-11,48,-26,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'function':([0,],[2,]),'empty':([0,],[3,]),'statement':([2,],[4,]),'line_statement':([2,],[6,]),'expression':([2,8,16,20,21,22,23,24,25,26,27,28,29,30,31,32,],[9,17,33,35,36,37,38,39,40,41,42,43,44,45,46,47,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> function','start',1,'p_start','dparser.py',7),
  ('function -> function statement SPLIT','function',3,'p_function','dparser.py',12),
  ('function -> function line_statement','function',2,'p_function','dparser.py',13),
  ('function -> empty','function',1,'p_function','dparser.py',14),
  ('line_statement -> SPLIT','line_statement',1,'p_statement_none','dparser.py',19),
  ('line_statement -> expression SPLIT','line_statement',2,'p_statement_expr','dparser.py',23),
  ('statement -> PRINT LPAREN expression RPAREN','statement',4,'p_statement_print','dparser.py',30),
  ('line_statement -> ID ASSIGN expression SPLIT','line_statement',4,'p_statement_assign','dparser.py',37),
  ('expression -> TRUE','expression',1,'p_expression_true','dparser.py',44),
  ('expression -> FALSE','expression',1,'p_expression_false','dparser.py',50),
  ('expression -> ID','expression',1,'p_expression_var','dparser.py',56),
  ('expression -> NUMBER','expression',1,'p_expression_num','dparser.py',62),
  ('expression -> STRING','expression',1,'p_expression_string','dparser.py',68),
  ('expression -> expression ADD expression','expression',3,'p_expression_two_operator','dparser.py',75),
  ('expression -> expression REM expression','expression',3,'p_expression_two_operator','dparser.py',76),
  ('expression -> expression MUL expression','expression',3,'p_expression_two_operator','dparser.py',77),
  ('expression -> expression DIV expression','expression',3,'p_expression_two_operator','dparser.py',78),
  ('expression -> expression MOD expression','expression',3,'p_expression_two_operator','dparser.py',79),
  ('expression -> expression GT expression','expression',3,'p_expression_two_operator','dparser.py',80),
  ('expression -> expression LT expression','expression',3,'p_expression_two_operator','dparser.py',81),
  ('expression -> expression GE expression','expression',3,'p_expression_two_operator','dparser.py',82),
  ('expression -> expression LE expression','expression',3,'p_expression_two_operator','dparser.py',83),
  ('expression -> expression EQ expression','expression',3,'p_expression_two_operator','dparser.py',84),
  ('expression -> expression NE expression','expression',3,'p_expression_two_operator','dparser.py',85),
  ('expression -> expression POW expression','expression',3,'p_expression_two_operator','dparser.py',86),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_parens','dparser.py',106),
  ('empty -> <empty>','empty',0,'p_empty','dparser.py',116),
]
