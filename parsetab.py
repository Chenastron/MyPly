
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftLTLEGTGEEQNEleftREMADDleftMULDIVMODleftPOWNUMBER ID SPLIT STRING TRUE FALSE PRINT AND OR IF ELSE ADD REM MUL DIV MOD LT GT LPAREN RPAREN ASSIGN COMMA COLON GE LE EQ NE POWstart : function\n    function : function statement SPLIT\n             | function line_statement\n             | empty\n    line_statement : SPLITline_statement : expression SPLIT\n    statement : PRINT LPAREN expr_list RPAREN\n    line_statement : statement IF condition_list ELSE statement SPLITif_assign : ID ASSIGN expressionline_statement : if_assign IF condition_list ELSE expression SPLIT\n    line_statement : IF condition_list COLON statement SPLIT\n                   | IF condition_list COLON SPLIT statement SPLIT\n    \n    line_statement : ID ASSIGN expression SPLIT\n                   | ID ASSIGN condition_list SPLIT\n    \n    expr_list : expression\n              | expr_list COMMA expression\n    \n    condition_list : expression\n                   | condition_list AND expression\n                   | condition_list OR expression\n    condition_list : LPAREN condition_list RPARENexpression : TRUEexpression : FALSEexpression : IDexpression : NUMBERexpression : STRING\n    expression : expression ADD expression\n               | expression REM expression\n               | expression MUL expression\n               | expression DIV expression\n               | expression MOD expression\n               | expression GT expression\n               | expression LT expression\n               | expression GE expression\n               | expression LE expression\n               | expression EQ expression\n               | expression NE expression\n               | expression POW expression\n    expression : LPAREN expression RPARENempty :'
    
_lr_action_items = {'PRINT':([0,2,3,5,6,17,22,56,65,69,74,75,79,82,83,84,],[-39,7,-4,-5,-3,-2,-6,7,7,7,-13,-14,-11,-8,-12,-10,]),'SPLIT':([0,2,3,4,5,6,9,12,13,14,15,16,17,21,22,43,44,45,46,47,48,49,50,51,52,53,54,55,56,62,63,66,68,70,71,72,74,75,77,79,80,81,82,83,84,],[-39,5,-4,17,-5,-3,22,-23,-21,-22,-24,-25,-2,-23,-6,-38,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,69,74,75,-7,79,-18,-19,-20,-13,-14,82,-11,83,84,-8,-12,-10,]),'IF':([0,2,3,4,5,6,11,13,14,15,16,17,21,22,43,44,45,46,47,48,49,50,51,52,53,54,55,62,66,74,75,79,82,83,84,],[-39,10,-4,18,-5,-3,38,-21,-22,-24,-25,-2,-23,-6,-38,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-9,-7,-13,-14,-11,-8,-12,-10,]),'ID':([0,2,3,5,6,8,10,17,18,19,22,23,24,25,26,27,28,29,30,31,32,33,34,37,38,39,57,58,64,67,73,74,75,79,82,83,84,],[-39,12,-4,-5,-3,21,21,-2,21,21,-6,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-13,-14,-11,-8,-12,-10,]),'TRUE':([0,2,3,5,6,8,10,17,18,19,22,23,24,25,26,27,28,29,30,31,32,33,34,37,38,39,57,58,64,67,73,74,75,79,82,83,84,],[-39,13,-4,-5,-3,13,13,-2,13,13,-6,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-13,-14,-11,-8,-12,-10,]),'FALSE':([0,2,3,5,6,8,10,17,18,19,22,23,24,25,26,27,28,29,30,31,32,33,34,37,38,39,57,58,64,67,73,74,75,79,82,83,84,],[-39,14,-4,-5,-3,14,14,-2,14,14,-6,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-13,-14,-11,-8,-12,-10,]),'NUMBER':([0,2,3,5,6,8,10,17,18,19,22,23,24,25,26,27,28,29,30,31,32,33,34,37,38,39,57,58,64,67,73,74,75,79,82,83,84,],[-39,15,-4,-5,-3,15,15,-2,15,15,-6,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-13,-14,-11,-8,-12,-10,]),'STRING':([0,2,3,5,6,8,10,17,18,19,22,23,24,25,26,27,28,29,30,31,32,33,34,37,38,39,57,58,64,67,73,74,75,79,82,83,84,],[-39,16,-4,-5,-3,16,16,-2,16,16,-6,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-13,-14,-11,-8,-12,-10,]),'LPAREN':([0,2,3,5,6,7,8,10,17,18,19,22,23,24,25,26,27,28,29,30,31,32,33,34,37,38,39,57,58,64,67,73,74,75,79,82,83,84,],[-39,8,-4,-5,-3,19,8,37,-2,37,8,-6,8,8,8,8,8,8,8,8,8,8,8,8,37,37,64,8,8,64,8,8,-13,-14,-11,-8,-12,-10,]),'$end':([0,1,2,3,5,6,17,22,74,75,79,82,83,84,],[-39,0,-1,-4,-5,-3,-2,-6,-13,-14,-11,-8,-12,-10,]),'ADD':([9,12,13,14,15,16,20,21,36,42,43,44,45,46,47,48,49,50,51,52,53,54,55,60,62,70,71,76,78,81,],[23,-23,-21,-22,-24,-25,23,-23,23,23,-38,-26,-27,-28,-29,-30,23,23,23,23,23,23,-37,23,23,23,23,23,23,23,]),'REM':([9,12,13,14,15,16,20,21,36,42,43,44,45,46,47,48,49,50,51,52,53,54,55,60,62,70,71,76,78,81,],[24,-23,-21,-22,-24,-25,24,-23,24,24,-38,-26,-27,-28,-29,-30,24,24,24,24,24,24,-37,24,24,24,24,24,24,24,]),'MUL':([9,12,13,14,15,16,20,21,36,42,43,44,45,46,47,48,49,50,51,52,53,54,55,60,62,70,71,76,78,81,],[25,-23,-21,-22,-24,-25,25,-23,25,25,-38,25,25,-28,-29,-30,25,25,25,25,25,25,-37,25,25,25,25,25,25,25,]),'DIV':([9,12,13,14,15,16,20,21,36,42,43,44,45,46,47,48,49,50,51,52,53,54,55,60,62,70,71,76,78,81,],[26,-23,-21,-22,-24,-25,26,-23,26,26,-38,26,26,-28,-29,-30,26,26,26,26,26,26,-37,26,26,26,26,26,26,26,]),'MOD':([9,12,13,14,15,16,20,21,36,42,43,44,45,46,47,48,49,50,51,52,53,54,55,60,62,70,71,76,78,81,],[27,-23,-21,-22,-24,-25,27,-23,27,27,-38,27,27,-28,-29,-30,27,27,27,27,27,27,-37,27,27,27,27,27,27,27,]),'GT':([9,12,13,14,15,16,20,21,36,42,43,44,45,46,47,48,49,50,51,52,53,54,55,60,62,70,71,76,78,81,],[28,-23,-21,-22,-24,-25,28,-23,28,28,-38,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,28,28,28,28,28,28,28,]),'LT':([9,12,13,14,15,16,20,21,36,42,43,44,45,46,47,48,49,50,51,52,53,54,55,60,62,70,71,76,78,81,],[29,-23,-21,-22,-24,-25,29,-23,29,29,-38,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,29,29,29,29,29,29,29,]),'GE':([9,12,13,14,15,16,20,21,36,42,43,44,45,46,47,48,49,50,51,52,53,54,55,60,62,70,71,76,78,81,],[30,-23,-21,-22,-24,-25,30,-23,30,30,-38,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,30,30,30,30,30,30,30,]),'LE':([9,12,13,14,15,16,20,21,36,42,43,44,45,46,47,48,49,50,51,52,53,54,55,60,62,70,71,76,78,81,],[31,-23,-21,-22,-24,-25,31,-23,31,31,-38,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,31,31,31,31,31,31,31,]),'EQ':([9,12,13,14,15,16,20,21,36,42,43,44,45,46,47,48,49,50,51,52,53,54,55,60,62,70,71,76,78,81,],[32,-23,-21,-22,-24,-25,32,-23,32,32,-38,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,32,32,32,32,32,32,32,]),'NE':([9,12,13,14,15,16,20,21,36,42,43,44,45,46,47,48,49,50,51,52,53,54,55,60,62,70,71,76,78,81,],[33,-23,-21,-22,-24,-25,33,-23,33,33,-38,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,33,33,33,33,33,33,33,]),'POW':([9,12,13,14,15,16,20,21,36,42,43,44,45,46,47,48,49,50,51,52,53,54,55,60,62,70,71,76,78,81,],[34,-23,-21,-22,-24,-25,34,-23,34,34,-38,34,34,34,34,34,34,34,34,34,34,34,-37,34,34,34,34,34,34,34,]),'ASSIGN':([12,],[39,]),'RPAREN':([13,14,15,16,20,21,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,59,60,70,71,72,76,78,],[-21,-22,-24,-25,43,-23,66,-15,-38,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,72,43,-18,-19,-20,43,-16,]),'COLON':([13,14,15,16,21,35,36,43,44,45,46,47,48,49,50,51,52,53,54,55,70,71,72,],[-21,-22,-24,-25,-23,56,-17,-38,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-18,-19,-20,]),'AND':([13,14,15,16,21,35,36,40,43,44,45,46,47,48,49,50,51,52,53,54,55,59,60,61,62,63,70,71,72,76,],[-21,-22,-24,-25,-23,57,-17,57,-38,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,57,-17,57,-17,57,-18,-19,-20,-17,]),'OR':([13,14,15,16,21,35,36,40,43,44,45,46,47,48,49,50,51,52,53,54,55,59,60,61,62,63,70,71,72,76,],[-21,-22,-24,-25,-23,58,-17,58,-38,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,58,-17,58,-17,58,-18,-19,-20,-17,]),'ELSE':([13,14,15,16,21,36,40,43,44,45,46,47,48,49,50,51,52,53,54,55,61,70,71,72,],[-21,-22,-24,-25,-23,-17,65,-38,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,73,-18,-19,-20,]),'COMMA':([13,14,15,16,21,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,78,],[-21,-22,-24,-25,-23,67,-15,-38,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'function':([0,],[2,]),'empty':([0,],[3,]),'statement':([2,56,65,69,],[4,68,77,80,]),'line_statement':([2,],[6,]),'expression':([2,8,10,18,19,23,24,25,26,27,28,29,30,31,32,33,34,37,38,39,57,58,64,67,73,],[9,20,36,36,42,44,45,46,47,48,49,50,51,52,53,54,55,60,36,62,70,71,76,78,81,]),'if_assign':([2,],[11,]),'condition_list':([10,18,37,38,39,64,],[35,40,59,61,63,59,]),'expr_list':([19,],[41,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> function','start',1,'p_start','dparser.py',45),
  ('function -> function statement SPLIT','function',3,'p_function','dparser.py',51),
  ('function -> function line_statement','function',2,'p_function','dparser.py',52),
  ('function -> empty','function',1,'p_function','dparser.py',53),
  ('line_statement -> SPLIT','line_statement',1,'p_statement_none','dparser.py',61),
  ('line_statement -> expression SPLIT','line_statement',2,'p_statement_expr','dparser.py',65),
  ('statement -> PRINT LPAREN expr_list RPAREN','statement',4,'p_statement_print','dparser.py',72),
  ('line_statement -> statement IF condition_list ELSE statement SPLIT','line_statement',6,'p_statement_cond_postfix_else','dparser.py',78),
  ('if_assign -> ID ASSIGN expression','if_assign',3,'p_ifassign','dparser.py',83),
  ('line_statement -> if_assign IF condition_list ELSE expression SPLIT','line_statement',6,'p_statement_cond_postfix_assign','dparser.py',88),
  ('line_statement -> IF condition_list COLON statement SPLIT','line_statement',5,'p_statement_cond','dparser.py',97),
  ('line_statement -> IF condition_list COLON SPLIT statement SPLIT','line_statement',6,'p_statement_cond','dparser.py',98),
  ('line_statement -> ID ASSIGN expression SPLIT','line_statement',4,'p_statement_assign','dparser.py',110),
  ('line_statement -> ID ASSIGN condition_list SPLIT','line_statement',4,'p_statement_assign','dparser.py',111),
  ('expr_list -> expression','expr_list',1,'p_expression_list','dparser.py',119),
  ('expr_list -> expr_list COMMA expression','expr_list',3,'p_expression_list','dparser.py',120),
  ('condition_list -> expression','condition_list',1,'p_condition_list','dparser.py',131),
  ('condition_list -> condition_list AND expression','condition_list',3,'p_condition_list','dparser.py',132),
  ('condition_list -> condition_list OR expression','condition_list',3,'p_condition_list','dparser.py',133),
  ('condition_list -> LPAREN condition_list RPAREN','condition_list',3,'p_condition_parens','dparser.py',144),
  ('expression -> TRUE','expression',1,'p_expression_true','dparser.py',150),
  ('expression -> FALSE','expression',1,'p_expression_false','dparser.py',156),
  ('expression -> ID','expression',1,'p_expression_var','dparser.py',162),
  ('expression -> NUMBER','expression',1,'p_expression_num','dparser.py',168),
  ('expression -> STRING','expression',1,'p_expression_string','dparser.py',174),
  ('expression -> expression ADD expression','expression',3,'p_expression_two_operator','dparser.py',181),
  ('expression -> expression REM expression','expression',3,'p_expression_two_operator','dparser.py',182),
  ('expression -> expression MUL expression','expression',3,'p_expression_two_operator','dparser.py',183),
  ('expression -> expression DIV expression','expression',3,'p_expression_two_operator','dparser.py',184),
  ('expression -> expression MOD expression','expression',3,'p_expression_two_operator','dparser.py',185),
  ('expression -> expression GT expression','expression',3,'p_expression_two_operator','dparser.py',186),
  ('expression -> expression LT expression','expression',3,'p_expression_two_operator','dparser.py',187),
  ('expression -> expression GE expression','expression',3,'p_expression_two_operator','dparser.py',188),
  ('expression -> expression LE expression','expression',3,'p_expression_two_operator','dparser.py',189),
  ('expression -> expression EQ expression','expression',3,'p_expression_two_operator','dparser.py',190),
  ('expression -> expression NE expression','expression',3,'p_expression_two_operator','dparser.py',191),
  ('expression -> expression POW expression','expression',3,'p_expression_two_operator','dparser.py',192),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_parens','dparser.py',199),
  ('empty -> <empty>','empty',0,'p_empty','dparser.py',209),
]
