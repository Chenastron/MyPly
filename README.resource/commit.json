{"compress":true,"commitItems":[["073b7f79-57dc-4541-821a-86cd7db54f1c",1525959335803,"\n### 目录\n1. 项目介绍\n2. 项目结构介绍\n3. 使用方法\n4. 词法分析介绍\n5. 语法分析介绍\n\n#### 一. 项目介绍\npython版本为3.6。\n\n使用库为ply。\n\n模仿python语法完成一小部分功能，例如注释，二元运算符，逻辑运算符，print语句，for语句，if语句，if-else语句，基本数据类型有int，string，boolean，变量。\n\n#### 二. 项目结构介绍\n1. dlexer.py 实现了词法分析\n2. dparser.py 实现了语法分析\n3. dexecute.py 实现了执行语法的功能\n4. test_code.py 要进行测试的代码\n5. run.py 执行文件，从test_code中读入代码，可调整choice变量，执行1-3的功能\n\n#### 三. 使用方式\n1. 首先创建一个文件用于写测试代码(自带的测试文件为test_code.py)\n2. run.py中会加载1中创建的文件(默认加载为test_code.py)\n3. 更改choice变量的值，可更改值有1(词法),2(语法),3(执行)(默认choice的值为3)\n\n#### 四. 词法分析\n1. 标识符\n    1. NUMBER 整数类型\n    2. VAR 变量\n    3. STRING 字符串类型\n    4. SPLIT 语句间的分隔符\n2. 保留字\n    1. TRUE/FALSE bool类型\n    2. print/range 常用的函数\n    3. and/or 逻辑运算符\n    4. if/else 条件\n    5. for/in 循环\n3. 单字符操作符\n    1. ADD/REM/MUL/DIV/% 加减乘除除余\n    2. LT/GT/ASSIGN 大于小于赋值\n    3. LPAREN/RPAREN 左右括号\n    4. COMMA/COLON 逗号冒号\n4. 双字符操作符\n    1. GE/LE 大于等于/小于等于\n    2. EQ/NE 等于/不等于\n    3. ** 乘方\n5. 注释\n\n    \\# 由井号开头的一行将被忽略\n    \n#### 五. 语法分析\n\n\n```python\nRule 0     S' -> entry\n\nRule 1     entry -> start\n\nRule 2     start -> start stmt_print SPLIT\nRule 3     start -> start stmt\nRule 4     start -> empty\n\nRule 5     stmt -> SPLIT\nRule 6     stmt -> expression SPLIT\n# print\nRule 7     stmt_print -> PRINT LPAREN expr_list RPAREN\n# for\nRule 8     range -> RANGE LPAREN expr_list RPAREN\nRule 9     stmt -> FOR VAR IN range COLON stmt_print SPLIT\n# if-else\nRule 10    stmt -> stmt_print IF condition_list ELSE stmt_print SPLIT\nRule 11    if_assign -> VAR ASSIGN expression\nRule 12    stmt -> if_assign IF condition_list ELSE expression SPLIT\nRule 13    stmt -> IF condition_list COLON stmt_print SPLIT\nRule 14    stmt -> IF condition_list COLON SPLIT stmt_print SPLIT\n# 赋值\nRule 15    stmt -> VAR ASSIGN expression SPLIT\nRule 16    stmt -> VAR ASSIGN condition_list SPLIT\n# 一行多个表达式\nRule 17    expr_list -> expression\nRule 18    expr_list -> expr_list COMMA expression\n# 逻辑控制\nRule 19    condition_list -> expression\nRule 20    condition_list -> condition_list AND expression\nRule 21    condition_list -> condition_list OR expression\nRule 22    condition_list -> LPAREN condition_list RPAREN\n# 标识符\nRule 23    expression -> TRUE\nRule 24    expression -> FALSE\nRule 25    expression -> VAR\nRule 26    expression -> NUMBER\nRule 27    expression -> STRING\n# 二元运算\nRule 28    expression -> expression ADD expression\nRule 29    expression -> expression REM expression\nRule 30    expression -> expression MUL expression\nRule 31    expression -> expression DIV expression\nRule 32    expression -> expression MOD expression\nRule 33    expression -> expression GT expression\nRule 34    expression -> expression LT expression\nRule 35    expression -> expression GE expression\nRule 36    expression -> expression LE expression\nRule 37    expression -> expression EQ expression\nRule 38    expression -> expression NE expression\nRule 39    expression -> expression POW expression\nRule 40    expression -> LPAREN expression RPAREN\nRule 41    empty -> <empty>\n```\n",[[1525959279744,["dyq666@dyq",[[-1,204,"1. dlexer.py 实现了词法分析\n2. dparser.py 实现了语法分析\n3. dexecute.py 实现了执行语法的功能\n4. test_code.py 要进行测试的代码\n5. run.py 执行文件，从test_code中读入代码，可调整choice变量，执行1-3的功能"]],[204,349],[204,204]]]]]]}