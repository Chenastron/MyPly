Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    OR

Grammar

Rule 0     S' -> start
Rule 1     start -> function
Rule 2     function -> function statement SPLIT
Rule 3     function -> function line_statement
Rule 4     function -> empty
Rule 5     line_statement -> SPLIT
Rule 6     line_statement -> expression SPLIT
Rule 7     statement -> PRINT LPAREN expr_list RPAREN
Rule 8     line_statement -> ID ASSIGN expression SPLIT
Rule 9     expr_list -> expression
Rule 10    expr_list -> expr_list COMMA expression
Rule 11    expression -> TRUE
Rule 12    expression -> FALSE
Rule 13    expression -> ID
Rule 14    expression -> NUMBER
Rule 15    expression -> STRING
Rule 16    expression -> expression ADD expression
Rule 17    expression -> expression REM expression
Rule 18    expression -> expression MUL expression
Rule 19    expression -> expression DIV expression
Rule 20    expression -> expression MOD expression
Rule 21    expression -> expression GT expression
Rule 22    expression -> expression LT expression
Rule 23    expression -> expression GE expression
Rule 24    expression -> expression LE expression
Rule 25    expression -> expression EQ expression
Rule 26    expression -> expression NE expression
Rule 27    expression -> expression POW expression
Rule 28    expression -> LPAREN expression RPAREN
Rule 29    empty -> <empty>

Terminals, with rules where they appear

ADD                  : 16
AND                  : 
ASSIGN               : 8
COMMA                : 10
DIV                  : 19
EQ                   : 25
FALSE                : 12
GE                   : 23
GT                   : 21
ID                   : 8 13
LE                   : 24
LPAREN               : 7 28
LT                   : 22
MOD                  : 20
MUL                  : 18
NE                   : 26
NUMBER               : 14
OR                   : 
POW                  : 27
PRINT                : 7
REM                  : 17
RPAREN               : 7 28
SPLIT                : 2 5 6 8
STRING               : 15
TRUE                 : 11
error                : 

Nonterminals, with rules where they appear

empty                : 4
expr_list            : 7 10
expression           : 6 8 9 10 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28
function             : 1 2 3
line_statement       : 3
start                : 0
statement            : 2

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . function
    (2) function -> . function statement SPLIT
    (3) function -> . function line_statement
    (4) function -> . empty
    (29) empty -> .

    PRINT           reduce using rule 29 (empty -> .)
    SPLIT           reduce using rule 29 (empty -> .)
    ID              reduce using rule 29 (empty -> .)
    TRUE            reduce using rule 29 (empty -> .)
    FALSE           reduce using rule 29 (empty -> .)
    NUMBER          reduce using rule 29 (empty -> .)
    STRING          reduce using rule 29 (empty -> .)
    LPAREN          reduce using rule 29 (empty -> .)
    $end            reduce using rule 29 (empty -> .)

    start                          shift and go to state 1
    function                       shift and go to state 2
    empty                          shift and go to state 3

state 1

    (0) S' -> start .



state 2

    (1) start -> function .
    (2) function -> function . statement SPLIT
    (3) function -> function . line_statement
    (7) statement -> . PRINT LPAREN expr_list RPAREN
    (5) line_statement -> . SPLIT
    (6) line_statement -> . expression SPLIT
    (8) line_statement -> . ID ASSIGN expression SPLIT
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (13) expression -> . ID
    (14) expression -> . NUMBER
    (15) expression -> . STRING
    (16) expression -> . expression ADD expression
    (17) expression -> . expression REM expression
    (18) expression -> . expression MUL expression
    (19) expression -> . expression DIV expression
    (20) expression -> . expression MOD expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression LT expression
    (23) expression -> . expression GE expression
    (24) expression -> . expression LE expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NE expression
    (27) expression -> . expression POW expression
    (28) expression -> . LPAREN expression RPAREN

    $end            reduce using rule 1 (start -> function .)
    PRINT           shift and go to state 7
    SPLIT           shift and go to state 5
    ID              shift and go to state 10
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    LPAREN          shift and go to state 8

    statement                      shift and go to state 4
    line_statement                 shift and go to state 6
    expression                     shift and go to state 9

state 3

    (4) function -> empty .

    PRINT           reduce using rule 4 (function -> empty .)
    SPLIT           reduce using rule 4 (function -> empty .)
    ID              reduce using rule 4 (function -> empty .)
    TRUE            reduce using rule 4 (function -> empty .)
    FALSE           reduce using rule 4 (function -> empty .)
    NUMBER          reduce using rule 4 (function -> empty .)
    STRING          reduce using rule 4 (function -> empty .)
    LPAREN          reduce using rule 4 (function -> empty .)
    $end            reduce using rule 4 (function -> empty .)


state 4

    (2) function -> function statement . SPLIT

    SPLIT           shift and go to state 15


state 5

    (5) line_statement -> SPLIT .

    PRINT           reduce using rule 5 (line_statement -> SPLIT .)
    SPLIT           reduce using rule 5 (line_statement -> SPLIT .)
    ID              reduce using rule 5 (line_statement -> SPLIT .)
    TRUE            reduce using rule 5 (line_statement -> SPLIT .)
    FALSE           reduce using rule 5 (line_statement -> SPLIT .)
    NUMBER          reduce using rule 5 (line_statement -> SPLIT .)
    STRING          reduce using rule 5 (line_statement -> SPLIT .)
    LPAREN          reduce using rule 5 (line_statement -> SPLIT .)
    $end            reduce using rule 5 (line_statement -> SPLIT .)


state 6

    (3) function -> function line_statement .

    PRINT           reduce using rule 3 (function -> function line_statement .)
    SPLIT           reduce using rule 3 (function -> function line_statement .)
    ID              reduce using rule 3 (function -> function line_statement .)
    TRUE            reduce using rule 3 (function -> function line_statement .)
    FALSE           reduce using rule 3 (function -> function line_statement .)
    NUMBER          reduce using rule 3 (function -> function line_statement .)
    STRING          reduce using rule 3 (function -> function line_statement .)
    LPAREN          reduce using rule 3 (function -> function line_statement .)
    $end            reduce using rule 3 (function -> function line_statement .)


state 7

    (7) statement -> PRINT . LPAREN expr_list RPAREN

    LPAREN          shift and go to state 16


state 8

    (28) expression -> LPAREN . expression RPAREN
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (13) expression -> . ID
    (14) expression -> . NUMBER
    (15) expression -> . STRING
    (16) expression -> . expression ADD expression
    (17) expression -> . expression REM expression
    (18) expression -> . expression MUL expression
    (19) expression -> . expression DIV expression
    (20) expression -> . expression MOD expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression LT expression
    (23) expression -> . expression GE expression
    (24) expression -> . expression LE expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NE expression
    (27) expression -> . expression POW expression
    (28) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    ID              shift and go to state 18
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    LPAREN          shift and go to state 8

    expression                     shift and go to state 17

state 9

    (6) line_statement -> expression . SPLIT
    (16) expression -> expression . ADD expression
    (17) expression -> expression . REM expression
    (18) expression -> expression . MUL expression
    (19) expression -> expression . DIV expression
    (20) expression -> expression . MOD expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . LT expression
    (23) expression -> expression . GE expression
    (24) expression -> expression . LE expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NE expression
    (27) expression -> expression . POW expression

    SPLIT           shift and go to state 19
    ADD             shift and go to state 20
    REM             shift and go to state 21
    MUL             shift and go to state 22
    DIV             shift and go to state 23
    MOD             shift and go to state 24
    GT              shift and go to state 25
    LT              shift and go to state 26
    GE              shift and go to state 27
    LE              shift and go to state 28
    EQ              shift and go to state 29
    NE              shift and go to state 30
    POW             shift and go to state 31


state 10

    (8) line_statement -> ID . ASSIGN expression SPLIT
    (13) expression -> ID .

    ASSIGN          shift and go to state 32
    SPLIT           reduce using rule 13 (expression -> ID .)
    ADD             reduce using rule 13 (expression -> ID .)
    REM             reduce using rule 13 (expression -> ID .)
    MUL             reduce using rule 13 (expression -> ID .)
    DIV             reduce using rule 13 (expression -> ID .)
    MOD             reduce using rule 13 (expression -> ID .)
    GT              reduce using rule 13 (expression -> ID .)
    LT              reduce using rule 13 (expression -> ID .)
    GE              reduce using rule 13 (expression -> ID .)
    LE              reduce using rule 13 (expression -> ID .)
    EQ              reduce using rule 13 (expression -> ID .)
    NE              reduce using rule 13 (expression -> ID .)
    POW             reduce using rule 13 (expression -> ID .)


state 11

    (11) expression -> TRUE .

    SPLIT           reduce using rule 11 (expression -> TRUE .)
    ADD             reduce using rule 11 (expression -> TRUE .)
    REM             reduce using rule 11 (expression -> TRUE .)
    MUL             reduce using rule 11 (expression -> TRUE .)
    DIV             reduce using rule 11 (expression -> TRUE .)
    MOD             reduce using rule 11 (expression -> TRUE .)
    GT              reduce using rule 11 (expression -> TRUE .)
    LT              reduce using rule 11 (expression -> TRUE .)
    GE              reduce using rule 11 (expression -> TRUE .)
    LE              reduce using rule 11 (expression -> TRUE .)
    EQ              reduce using rule 11 (expression -> TRUE .)
    NE              reduce using rule 11 (expression -> TRUE .)
    POW             reduce using rule 11 (expression -> TRUE .)
    RPAREN          reduce using rule 11 (expression -> TRUE .)
    COMMA           reduce using rule 11 (expression -> TRUE .)


state 12

    (12) expression -> FALSE .

    SPLIT           reduce using rule 12 (expression -> FALSE .)
    ADD             reduce using rule 12 (expression -> FALSE .)
    REM             reduce using rule 12 (expression -> FALSE .)
    MUL             reduce using rule 12 (expression -> FALSE .)
    DIV             reduce using rule 12 (expression -> FALSE .)
    MOD             reduce using rule 12 (expression -> FALSE .)
    GT              reduce using rule 12 (expression -> FALSE .)
    LT              reduce using rule 12 (expression -> FALSE .)
    GE              reduce using rule 12 (expression -> FALSE .)
    LE              reduce using rule 12 (expression -> FALSE .)
    EQ              reduce using rule 12 (expression -> FALSE .)
    NE              reduce using rule 12 (expression -> FALSE .)
    POW             reduce using rule 12 (expression -> FALSE .)
    RPAREN          reduce using rule 12 (expression -> FALSE .)
    COMMA           reduce using rule 12 (expression -> FALSE .)


state 13

    (14) expression -> NUMBER .

    SPLIT           reduce using rule 14 (expression -> NUMBER .)
    ADD             reduce using rule 14 (expression -> NUMBER .)
    REM             reduce using rule 14 (expression -> NUMBER .)
    MUL             reduce using rule 14 (expression -> NUMBER .)
    DIV             reduce using rule 14 (expression -> NUMBER .)
    MOD             reduce using rule 14 (expression -> NUMBER .)
    GT              reduce using rule 14 (expression -> NUMBER .)
    LT              reduce using rule 14 (expression -> NUMBER .)
    GE              reduce using rule 14 (expression -> NUMBER .)
    LE              reduce using rule 14 (expression -> NUMBER .)
    EQ              reduce using rule 14 (expression -> NUMBER .)
    NE              reduce using rule 14 (expression -> NUMBER .)
    POW             reduce using rule 14 (expression -> NUMBER .)
    RPAREN          reduce using rule 14 (expression -> NUMBER .)
    COMMA           reduce using rule 14 (expression -> NUMBER .)


state 14

    (15) expression -> STRING .

    SPLIT           reduce using rule 15 (expression -> STRING .)
    ADD             reduce using rule 15 (expression -> STRING .)
    REM             reduce using rule 15 (expression -> STRING .)
    MUL             reduce using rule 15 (expression -> STRING .)
    DIV             reduce using rule 15 (expression -> STRING .)
    MOD             reduce using rule 15 (expression -> STRING .)
    GT              reduce using rule 15 (expression -> STRING .)
    LT              reduce using rule 15 (expression -> STRING .)
    GE              reduce using rule 15 (expression -> STRING .)
    LE              reduce using rule 15 (expression -> STRING .)
    EQ              reduce using rule 15 (expression -> STRING .)
    NE              reduce using rule 15 (expression -> STRING .)
    POW             reduce using rule 15 (expression -> STRING .)
    RPAREN          reduce using rule 15 (expression -> STRING .)
    COMMA           reduce using rule 15 (expression -> STRING .)


state 15

    (2) function -> function statement SPLIT .

    PRINT           reduce using rule 2 (function -> function statement SPLIT .)
    SPLIT           reduce using rule 2 (function -> function statement SPLIT .)
    ID              reduce using rule 2 (function -> function statement SPLIT .)
    TRUE            reduce using rule 2 (function -> function statement SPLIT .)
    FALSE           reduce using rule 2 (function -> function statement SPLIT .)
    NUMBER          reduce using rule 2 (function -> function statement SPLIT .)
    STRING          reduce using rule 2 (function -> function statement SPLIT .)
    LPAREN          reduce using rule 2 (function -> function statement SPLIT .)
    $end            reduce using rule 2 (function -> function statement SPLIT .)


state 16

    (7) statement -> PRINT LPAREN . expr_list RPAREN
    (9) expr_list -> . expression
    (10) expr_list -> . expr_list COMMA expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (13) expression -> . ID
    (14) expression -> . NUMBER
    (15) expression -> . STRING
    (16) expression -> . expression ADD expression
    (17) expression -> . expression REM expression
    (18) expression -> . expression MUL expression
    (19) expression -> . expression DIV expression
    (20) expression -> . expression MOD expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression LT expression
    (23) expression -> . expression GE expression
    (24) expression -> . expression LE expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NE expression
    (27) expression -> . expression POW expression
    (28) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    ID              shift and go to state 18
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    LPAREN          shift and go to state 8

    expr_list                      shift and go to state 33
    expression                     shift and go to state 34

state 17

    (28) expression -> LPAREN expression . RPAREN
    (16) expression -> expression . ADD expression
    (17) expression -> expression . REM expression
    (18) expression -> expression . MUL expression
    (19) expression -> expression . DIV expression
    (20) expression -> expression . MOD expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . LT expression
    (23) expression -> expression . GE expression
    (24) expression -> expression . LE expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NE expression
    (27) expression -> expression . POW expression

    RPAREN          shift and go to state 35
    ADD             shift and go to state 20
    REM             shift and go to state 21
    MUL             shift and go to state 22
    DIV             shift and go to state 23
    MOD             shift and go to state 24
    GT              shift and go to state 25
    LT              shift and go to state 26
    GE              shift and go to state 27
    LE              shift and go to state 28
    EQ              shift and go to state 29
    NE              shift and go to state 30
    POW             shift and go to state 31


state 18

    (13) expression -> ID .

    RPAREN          reduce using rule 13 (expression -> ID .)
    ADD             reduce using rule 13 (expression -> ID .)
    REM             reduce using rule 13 (expression -> ID .)
    MUL             reduce using rule 13 (expression -> ID .)
    DIV             reduce using rule 13 (expression -> ID .)
    MOD             reduce using rule 13 (expression -> ID .)
    GT              reduce using rule 13 (expression -> ID .)
    LT              reduce using rule 13 (expression -> ID .)
    GE              reduce using rule 13 (expression -> ID .)
    LE              reduce using rule 13 (expression -> ID .)
    EQ              reduce using rule 13 (expression -> ID .)
    NE              reduce using rule 13 (expression -> ID .)
    POW             reduce using rule 13 (expression -> ID .)
    COMMA           reduce using rule 13 (expression -> ID .)
    SPLIT           reduce using rule 13 (expression -> ID .)


state 19

    (6) line_statement -> expression SPLIT .

    PRINT           reduce using rule 6 (line_statement -> expression SPLIT .)
    SPLIT           reduce using rule 6 (line_statement -> expression SPLIT .)
    ID              reduce using rule 6 (line_statement -> expression SPLIT .)
    TRUE            reduce using rule 6 (line_statement -> expression SPLIT .)
    FALSE           reduce using rule 6 (line_statement -> expression SPLIT .)
    NUMBER          reduce using rule 6 (line_statement -> expression SPLIT .)
    STRING          reduce using rule 6 (line_statement -> expression SPLIT .)
    LPAREN          reduce using rule 6 (line_statement -> expression SPLIT .)
    $end            reduce using rule 6 (line_statement -> expression SPLIT .)


state 20

    (16) expression -> expression ADD . expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (13) expression -> . ID
    (14) expression -> . NUMBER
    (15) expression -> . STRING
    (16) expression -> . expression ADD expression
    (17) expression -> . expression REM expression
    (18) expression -> . expression MUL expression
    (19) expression -> . expression DIV expression
    (20) expression -> . expression MOD expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression LT expression
    (23) expression -> . expression GE expression
    (24) expression -> . expression LE expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NE expression
    (27) expression -> . expression POW expression
    (28) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    ID              shift and go to state 18
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    LPAREN          shift and go to state 8

    expression                     shift and go to state 36

state 21

    (17) expression -> expression REM . expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (13) expression -> . ID
    (14) expression -> . NUMBER
    (15) expression -> . STRING
    (16) expression -> . expression ADD expression
    (17) expression -> . expression REM expression
    (18) expression -> . expression MUL expression
    (19) expression -> . expression DIV expression
    (20) expression -> . expression MOD expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression LT expression
    (23) expression -> . expression GE expression
    (24) expression -> . expression LE expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NE expression
    (27) expression -> . expression POW expression
    (28) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    ID              shift and go to state 18
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    LPAREN          shift and go to state 8

    expression                     shift and go to state 37

state 22

    (18) expression -> expression MUL . expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (13) expression -> . ID
    (14) expression -> . NUMBER
    (15) expression -> . STRING
    (16) expression -> . expression ADD expression
    (17) expression -> . expression REM expression
    (18) expression -> . expression MUL expression
    (19) expression -> . expression DIV expression
    (20) expression -> . expression MOD expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression LT expression
    (23) expression -> . expression GE expression
    (24) expression -> . expression LE expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NE expression
    (27) expression -> . expression POW expression
    (28) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    ID              shift and go to state 18
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    LPAREN          shift and go to state 8

    expression                     shift and go to state 38

state 23

    (19) expression -> expression DIV . expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (13) expression -> . ID
    (14) expression -> . NUMBER
    (15) expression -> . STRING
    (16) expression -> . expression ADD expression
    (17) expression -> . expression REM expression
    (18) expression -> . expression MUL expression
    (19) expression -> . expression DIV expression
    (20) expression -> . expression MOD expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression LT expression
    (23) expression -> . expression GE expression
    (24) expression -> . expression LE expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NE expression
    (27) expression -> . expression POW expression
    (28) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    ID              shift and go to state 18
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    LPAREN          shift and go to state 8

    expression                     shift and go to state 39

state 24

    (20) expression -> expression MOD . expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (13) expression -> . ID
    (14) expression -> . NUMBER
    (15) expression -> . STRING
    (16) expression -> . expression ADD expression
    (17) expression -> . expression REM expression
    (18) expression -> . expression MUL expression
    (19) expression -> . expression DIV expression
    (20) expression -> . expression MOD expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression LT expression
    (23) expression -> . expression GE expression
    (24) expression -> . expression LE expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NE expression
    (27) expression -> . expression POW expression
    (28) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    ID              shift and go to state 18
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    LPAREN          shift and go to state 8

    expression                     shift and go to state 40

state 25

    (21) expression -> expression GT . expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (13) expression -> . ID
    (14) expression -> . NUMBER
    (15) expression -> . STRING
    (16) expression -> . expression ADD expression
    (17) expression -> . expression REM expression
    (18) expression -> . expression MUL expression
    (19) expression -> . expression DIV expression
    (20) expression -> . expression MOD expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression LT expression
    (23) expression -> . expression GE expression
    (24) expression -> . expression LE expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NE expression
    (27) expression -> . expression POW expression
    (28) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    ID              shift and go to state 18
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    LPAREN          shift and go to state 8

    expression                     shift and go to state 41

state 26

    (22) expression -> expression LT . expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (13) expression -> . ID
    (14) expression -> . NUMBER
    (15) expression -> . STRING
    (16) expression -> . expression ADD expression
    (17) expression -> . expression REM expression
    (18) expression -> . expression MUL expression
    (19) expression -> . expression DIV expression
    (20) expression -> . expression MOD expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression LT expression
    (23) expression -> . expression GE expression
    (24) expression -> . expression LE expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NE expression
    (27) expression -> . expression POW expression
    (28) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    ID              shift and go to state 18
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    LPAREN          shift and go to state 8

    expression                     shift and go to state 42

state 27

    (23) expression -> expression GE . expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (13) expression -> . ID
    (14) expression -> . NUMBER
    (15) expression -> . STRING
    (16) expression -> . expression ADD expression
    (17) expression -> . expression REM expression
    (18) expression -> . expression MUL expression
    (19) expression -> . expression DIV expression
    (20) expression -> . expression MOD expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression LT expression
    (23) expression -> . expression GE expression
    (24) expression -> . expression LE expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NE expression
    (27) expression -> . expression POW expression
    (28) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    ID              shift and go to state 18
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    LPAREN          shift and go to state 8

    expression                     shift and go to state 43

state 28

    (24) expression -> expression LE . expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (13) expression -> . ID
    (14) expression -> . NUMBER
    (15) expression -> . STRING
    (16) expression -> . expression ADD expression
    (17) expression -> . expression REM expression
    (18) expression -> . expression MUL expression
    (19) expression -> . expression DIV expression
    (20) expression -> . expression MOD expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression LT expression
    (23) expression -> . expression GE expression
    (24) expression -> . expression LE expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NE expression
    (27) expression -> . expression POW expression
    (28) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    ID              shift and go to state 18
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    LPAREN          shift and go to state 8

    expression                     shift and go to state 44

state 29

    (25) expression -> expression EQ . expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (13) expression -> . ID
    (14) expression -> . NUMBER
    (15) expression -> . STRING
    (16) expression -> . expression ADD expression
    (17) expression -> . expression REM expression
    (18) expression -> . expression MUL expression
    (19) expression -> . expression DIV expression
    (20) expression -> . expression MOD expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression LT expression
    (23) expression -> . expression GE expression
    (24) expression -> . expression LE expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NE expression
    (27) expression -> . expression POW expression
    (28) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    ID              shift and go to state 18
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    LPAREN          shift and go to state 8

    expression                     shift and go to state 45

state 30

    (26) expression -> expression NE . expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (13) expression -> . ID
    (14) expression -> . NUMBER
    (15) expression -> . STRING
    (16) expression -> . expression ADD expression
    (17) expression -> . expression REM expression
    (18) expression -> . expression MUL expression
    (19) expression -> . expression DIV expression
    (20) expression -> . expression MOD expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression LT expression
    (23) expression -> . expression GE expression
    (24) expression -> . expression LE expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NE expression
    (27) expression -> . expression POW expression
    (28) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    ID              shift and go to state 18
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    LPAREN          shift and go to state 8

    expression                     shift and go to state 46

state 31

    (27) expression -> expression POW . expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (13) expression -> . ID
    (14) expression -> . NUMBER
    (15) expression -> . STRING
    (16) expression -> . expression ADD expression
    (17) expression -> . expression REM expression
    (18) expression -> . expression MUL expression
    (19) expression -> . expression DIV expression
    (20) expression -> . expression MOD expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression LT expression
    (23) expression -> . expression GE expression
    (24) expression -> . expression LE expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NE expression
    (27) expression -> . expression POW expression
    (28) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    ID              shift and go to state 18
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    LPAREN          shift and go to state 8

    expression                     shift and go to state 47

state 32

    (8) line_statement -> ID ASSIGN . expression SPLIT
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (13) expression -> . ID
    (14) expression -> . NUMBER
    (15) expression -> . STRING
    (16) expression -> . expression ADD expression
    (17) expression -> . expression REM expression
    (18) expression -> . expression MUL expression
    (19) expression -> . expression DIV expression
    (20) expression -> . expression MOD expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression LT expression
    (23) expression -> . expression GE expression
    (24) expression -> . expression LE expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NE expression
    (27) expression -> . expression POW expression
    (28) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    ID              shift and go to state 18
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    LPAREN          shift and go to state 8

    expression                     shift and go to state 48

state 33

    (7) statement -> PRINT LPAREN expr_list . RPAREN
    (10) expr_list -> expr_list . COMMA expression

    RPAREN          shift and go to state 49
    COMMA           shift and go to state 50


state 34

    (9) expr_list -> expression .
    (16) expression -> expression . ADD expression
    (17) expression -> expression . REM expression
    (18) expression -> expression . MUL expression
    (19) expression -> expression . DIV expression
    (20) expression -> expression . MOD expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . LT expression
    (23) expression -> expression . GE expression
    (24) expression -> expression . LE expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NE expression
    (27) expression -> expression . POW expression

    RPAREN          reduce using rule 9 (expr_list -> expression .)
    COMMA           reduce using rule 9 (expr_list -> expression .)
    ADD             shift and go to state 20
    REM             shift and go to state 21
    MUL             shift and go to state 22
    DIV             shift and go to state 23
    MOD             shift and go to state 24
    GT              shift and go to state 25
    LT              shift and go to state 26
    GE              shift and go to state 27
    LE              shift and go to state 28
    EQ              shift and go to state 29
    NE              shift and go to state 30
    POW             shift and go to state 31


state 35

    (28) expression -> LPAREN expression RPAREN .

    SPLIT           reduce using rule 28 (expression -> LPAREN expression RPAREN .)
    ADD             reduce using rule 28 (expression -> LPAREN expression RPAREN .)
    REM             reduce using rule 28 (expression -> LPAREN expression RPAREN .)
    MUL             reduce using rule 28 (expression -> LPAREN expression RPAREN .)
    DIV             reduce using rule 28 (expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 28 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 28 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 28 (expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 28 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 28 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 28 (expression -> LPAREN expression RPAREN .)
    NE              reduce using rule 28 (expression -> LPAREN expression RPAREN .)
    POW             reduce using rule 28 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 28 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 28 (expression -> LPAREN expression RPAREN .)


state 36

    (16) expression -> expression ADD expression .
    (16) expression -> expression . ADD expression
    (17) expression -> expression . REM expression
    (18) expression -> expression . MUL expression
    (19) expression -> expression . DIV expression
    (20) expression -> expression . MOD expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . LT expression
    (23) expression -> expression . GE expression
    (24) expression -> expression . LE expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NE expression
    (27) expression -> expression . POW expression

    SPLIT           reduce using rule 16 (expression -> expression ADD expression .)
    ADD             reduce using rule 16 (expression -> expression ADD expression .)
    REM             reduce using rule 16 (expression -> expression ADD expression .)
    GT              reduce using rule 16 (expression -> expression ADD expression .)
    LT              reduce using rule 16 (expression -> expression ADD expression .)
    GE              reduce using rule 16 (expression -> expression ADD expression .)
    LE              reduce using rule 16 (expression -> expression ADD expression .)
    EQ              reduce using rule 16 (expression -> expression ADD expression .)
    NE              reduce using rule 16 (expression -> expression ADD expression .)
    RPAREN          reduce using rule 16 (expression -> expression ADD expression .)
    COMMA           reduce using rule 16 (expression -> expression ADD expression .)
    MUL             shift and go to state 22
    DIV             shift and go to state 23
    MOD             shift and go to state 24
    POW             shift and go to state 31

  ! MUL             [ reduce using rule 16 (expression -> expression ADD expression .) ]
  ! DIV             [ reduce using rule 16 (expression -> expression ADD expression .) ]
  ! MOD             [ reduce using rule 16 (expression -> expression ADD expression .) ]
  ! POW             [ reduce using rule 16 (expression -> expression ADD expression .) ]
  ! ADD             [ shift and go to state 20 ]
  ! REM             [ shift and go to state 21 ]
  ! GT              [ shift and go to state 25 ]
  ! LT              [ shift and go to state 26 ]
  ! GE              [ shift and go to state 27 ]
  ! LE              [ shift and go to state 28 ]
  ! EQ              [ shift and go to state 29 ]
  ! NE              [ shift and go to state 30 ]


state 37

    (17) expression -> expression REM expression .
    (16) expression -> expression . ADD expression
    (17) expression -> expression . REM expression
    (18) expression -> expression . MUL expression
    (19) expression -> expression . DIV expression
    (20) expression -> expression . MOD expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . LT expression
    (23) expression -> expression . GE expression
    (24) expression -> expression . LE expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NE expression
    (27) expression -> expression . POW expression

    SPLIT           reduce using rule 17 (expression -> expression REM expression .)
    ADD             reduce using rule 17 (expression -> expression REM expression .)
    REM             reduce using rule 17 (expression -> expression REM expression .)
    GT              reduce using rule 17 (expression -> expression REM expression .)
    LT              reduce using rule 17 (expression -> expression REM expression .)
    GE              reduce using rule 17 (expression -> expression REM expression .)
    LE              reduce using rule 17 (expression -> expression REM expression .)
    EQ              reduce using rule 17 (expression -> expression REM expression .)
    NE              reduce using rule 17 (expression -> expression REM expression .)
    RPAREN          reduce using rule 17 (expression -> expression REM expression .)
    COMMA           reduce using rule 17 (expression -> expression REM expression .)
    MUL             shift and go to state 22
    DIV             shift and go to state 23
    MOD             shift and go to state 24
    POW             shift and go to state 31

  ! MUL             [ reduce using rule 17 (expression -> expression REM expression .) ]
  ! DIV             [ reduce using rule 17 (expression -> expression REM expression .) ]
  ! MOD             [ reduce using rule 17 (expression -> expression REM expression .) ]
  ! POW             [ reduce using rule 17 (expression -> expression REM expression .) ]
  ! ADD             [ shift and go to state 20 ]
  ! REM             [ shift and go to state 21 ]
  ! GT              [ shift and go to state 25 ]
  ! LT              [ shift and go to state 26 ]
  ! GE              [ shift and go to state 27 ]
  ! LE              [ shift and go to state 28 ]
  ! EQ              [ shift and go to state 29 ]
  ! NE              [ shift and go to state 30 ]


state 38

    (18) expression -> expression MUL expression .
    (16) expression -> expression . ADD expression
    (17) expression -> expression . REM expression
    (18) expression -> expression . MUL expression
    (19) expression -> expression . DIV expression
    (20) expression -> expression . MOD expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . LT expression
    (23) expression -> expression . GE expression
    (24) expression -> expression . LE expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NE expression
    (27) expression -> expression . POW expression

    SPLIT           reduce using rule 18 (expression -> expression MUL expression .)
    ADD             reduce using rule 18 (expression -> expression MUL expression .)
    REM             reduce using rule 18 (expression -> expression MUL expression .)
    MUL             reduce using rule 18 (expression -> expression MUL expression .)
    DIV             reduce using rule 18 (expression -> expression MUL expression .)
    MOD             reduce using rule 18 (expression -> expression MUL expression .)
    GT              reduce using rule 18 (expression -> expression MUL expression .)
    LT              reduce using rule 18 (expression -> expression MUL expression .)
    GE              reduce using rule 18 (expression -> expression MUL expression .)
    LE              reduce using rule 18 (expression -> expression MUL expression .)
    EQ              reduce using rule 18 (expression -> expression MUL expression .)
    NE              reduce using rule 18 (expression -> expression MUL expression .)
    RPAREN          reduce using rule 18 (expression -> expression MUL expression .)
    COMMA           reduce using rule 18 (expression -> expression MUL expression .)
    POW             shift and go to state 31

  ! POW             [ reduce using rule 18 (expression -> expression MUL expression .) ]
  ! ADD             [ shift and go to state 20 ]
  ! REM             [ shift and go to state 21 ]
  ! MUL             [ shift and go to state 22 ]
  ! DIV             [ shift and go to state 23 ]
  ! MOD             [ shift and go to state 24 ]
  ! GT              [ shift and go to state 25 ]
  ! LT              [ shift and go to state 26 ]
  ! GE              [ shift and go to state 27 ]
  ! LE              [ shift and go to state 28 ]
  ! EQ              [ shift and go to state 29 ]
  ! NE              [ shift and go to state 30 ]


state 39

    (19) expression -> expression DIV expression .
    (16) expression -> expression . ADD expression
    (17) expression -> expression . REM expression
    (18) expression -> expression . MUL expression
    (19) expression -> expression . DIV expression
    (20) expression -> expression . MOD expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . LT expression
    (23) expression -> expression . GE expression
    (24) expression -> expression . LE expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NE expression
    (27) expression -> expression . POW expression

    SPLIT           reduce using rule 19 (expression -> expression DIV expression .)
    ADD             reduce using rule 19 (expression -> expression DIV expression .)
    REM             reduce using rule 19 (expression -> expression DIV expression .)
    MUL             reduce using rule 19 (expression -> expression DIV expression .)
    DIV             reduce using rule 19 (expression -> expression DIV expression .)
    MOD             reduce using rule 19 (expression -> expression DIV expression .)
    GT              reduce using rule 19 (expression -> expression DIV expression .)
    LT              reduce using rule 19 (expression -> expression DIV expression .)
    GE              reduce using rule 19 (expression -> expression DIV expression .)
    LE              reduce using rule 19 (expression -> expression DIV expression .)
    EQ              reduce using rule 19 (expression -> expression DIV expression .)
    NE              reduce using rule 19 (expression -> expression DIV expression .)
    RPAREN          reduce using rule 19 (expression -> expression DIV expression .)
    COMMA           reduce using rule 19 (expression -> expression DIV expression .)
    POW             shift and go to state 31

  ! POW             [ reduce using rule 19 (expression -> expression DIV expression .) ]
  ! ADD             [ shift and go to state 20 ]
  ! REM             [ shift and go to state 21 ]
  ! MUL             [ shift and go to state 22 ]
  ! DIV             [ shift and go to state 23 ]
  ! MOD             [ shift and go to state 24 ]
  ! GT              [ shift and go to state 25 ]
  ! LT              [ shift and go to state 26 ]
  ! GE              [ shift and go to state 27 ]
  ! LE              [ shift and go to state 28 ]
  ! EQ              [ shift and go to state 29 ]
  ! NE              [ shift and go to state 30 ]


state 40

    (20) expression -> expression MOD expression .
    (16) expression -> expression . ADD expression
    (17) expression -> expression . REM expression
    (18) expression -> expression . MUL expression
    (19) expression -> expression . DIV expression
    (20) expression -> expression . MOD expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . LT expression
    (23) expression -> expression . GE expression
    (24) expression -> expression . LE expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NE expression
    (27) expression -> expression . POW expression

    SPLIT           reduce using rule 20 (expression -> expression MOD expression .)
    ADD             reduce using rule 20 (expression -> expression MOD expression .)
    REM             reduce using rule 20 (expression -> expression MOD expression .)
    MUL             reduce using rule 20 (expression -> expression MOD expression .)
    DIV             reduce using rule 20 (expression -> expression MOD expression .)
    MOD             reduce using rule 20 (expression -> expression MOD expression .)
    GT              reduce using rule 20 (expression -> expression MOD expression .)
    LT              reduce using rule 20 (expression -> expression MOD expression .)
    GE              reduce using rule 20 (expression -> expression MOD expression .)
    LE              reduce using rule 20 (expression -> expression MOD expression .)
    EQ              reduce using rule 20 (expression -> expression MOD expression .)
    NE              reduce using rule 20 (expression -> expression MOD expression .)
    RPAREN          reduce using rule 20 (expression -> expression MOD expression .)
    COMMA           reduce using rule 20 (expression -> expression MOD expression .)
    POW             shift and go to state 31

  ! POW             [ reduce using rule 20 (expression -> expression MOD expression .) ]
  ! ADD             [ shift and go to state 20 ]
  ! REM             [ shift and go to state 21 ]
  ! MUL             [ shift and go to state 22 ]
  ! DIV             [ shift and go to state 23 ]
  ! MOD             [ shift and go to state 24 ]
  ! GT              [ shift and go to state 25 ]
  ! LT              [ shift and go to state 26 ]
  ! GE              [ shift and go to state 27 ]
  ! LE              [ shift and go to state 28 ]
  ! EQ              [ shift and go to state 29 ]
  ! NE              [ shift and go to state 30 ]


state 41

    (21) expression -> expression GT expression .
    (16) expression -> expression . ADD expression
    (17) expression -> expression . REM expression
    (18) expression -> expression . MUL expression
    (19) expression -> expression . DIV expression
    (20) expression -> expression . MOD expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . LT expression
    (23) expression -> expression . GE expression
    (24) expression -> expression . LE expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NE expression
    (27) expression -> expression . POW expression

    SPLIT           reduce using rule 21 (expression -> expression GT expression .)
    GT              reduce using rule 21 (expression -> expression GT expression .)
    LT              reduce using rule 21 (expression -> expression GT expression .)
    GE              reduce using rule 21 (expression -> expression GT expression .)
    LE              reduce using rule 21 (expression -> expression GT expression .)
    EQ              reduce using rule 21 (expression -> expression GT expression .)
    NE              reduce using rule 21 (expression -> expression GT expression .)
    RPAREN          reduce using rule 21 (expression -> expression GT expression .)
    COMMA           reduce using rule 21 (expression -> expression GT expression .)
    ADD             shift and go to state 20
    REM             shift and go to state 21
    MUL             shift and go to state 22
    DIV             shift and go to state 23
    MOD             shift and go to state 24
    POW             shift and go to state 31

  ! ADD             [ reduce using rule 21 (expression -> expression GT expression .) ]
  ! REM             [ reduce using rule 21 (expression -> expression GT expression .) ]
  ! MUL             [ reduce using rule 21 (expression -> expression GT expression .) ]
  ! DIV             [ reduce using rule 21 (expression -> expression GT expression .) ]
  ! MOD             [ reduce using rule 21 (expression -> expression GT expression .) ]
  ! POW             [ reduce using rule 21 (expression -> expression GT expression .) ]
  ! GT              [ shift and go to state 25 ]
  ! LT              [ shift and go to state 26 ]
  ! GE              [ shift and go to state 27 ]
  ! LE              [ shift and go to state 28 ]
  ! EQ              [ shift and go to state 29 ]
  ! NE              [ shift and go to state 30 ]


state 42

    (22) expression -> expression LT expression .
    (16) expression -> expression . ADD expression
    (17) expression -> expression . REM expression
    (18) expression -> expression . MUL expression
    (19) expression -> expression . DIV expression
    (20) expression -> expression . MOD expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . LT expression
    (23) expression -> expression . GE expression
    (24) expression -> expression . LE expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NE expression
    (27) expression -> expression . POW expression

    SPLIT           reduce using rule 22 (expression -> expression LT expression .)
    GT              reduce using rule 22 (expression -> expression LT expression .)
    LT              reduce using rule 22 (expression -> expression LT expression .)
    GE              reduce using rule 22 (expression -> expression LT expression .)
    LE              reduce using rule 22 (expression -> expression LT expression .)
    EQ              reduce using rule 22 (expression -> expression LT expression .)
    NE              reduce using rule 22 (expression -> expression LT expression .)
    RPAREN          reduce using rule 22 (expression -> expression LT expression .)
    COMMA           reduce using rule 22 (expression -> expression LT expression .)
    ADD             shift and go to state 20
    REM             shift and go to state 21
    MUL             shift and go to state 22
    DIV             shift and go to state 23
    MOD             shift and go to state 24
    POW             shift and go to state 31

  ! ADD             [ reduce using rule 22 (expression -> expression LT expression .) ]
  ! REM             [ reduce using rule 22 (expression -> expression LT expression .) ]
  ! MUL             [ reduce using rule 22 (expression -> expression LT expression .) ]
  ! DIV             [ reduce using rule 22 (expression -> expression LT expression .) ]
  ! MOD             [ reduce using rule 22 (expression -> expression LT expression .) ]
  ! POW             [ reduce using rule 22 (expression -> expression LT expression .) ]
  ! GT              [ shift and go to state 25 ]
  ! LT              [ shift and go to state 26 ]
  ! GE              [ shift and go to state 27 ]
  ! LE              [ shift and go to state 28 ]
  ! EQ              [ shift and go to state 29 ]
  ! NE              [ shift and go to state 30 ]


state 43

    (23) expression -> expression GE expression .
    (16) expression -> expression . ADD expression
    (17) expression -> expression . REM expression
    (18) expression -> expression . MUL expression
    (19) expression -> expression . DIV expression
    (20) expression -> expression . MOD expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . LT expression
    (23) expression -> expression . GE expression
    (24) expression -> expression . LE expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NE expression
    (27) expression -> expression . POW expression

    SPLIT           reduce using rule 23 (expression -> expression GE expression .)
    GT              reduce using rule 23 (expression -> expression GE expression .)
    LT              reduce using rule 23 (expression -> expression GE expression .)
    GE              reduce using rule 23 (expression -> expression GE expression .)
    LE              reduce using rule 23 (expression -> expression GE expression .)
    EQ              reduce using rule 23 (expression -> expression GE expression .)
    NE              reduce using rule 23 (expression -> expression GE expression .)
    RPAREN          reduce using rule 23 (expression -> expression GE expression .)
    COMMA           reduce using rule 23 (expression -> expression GE expression .)
    ADD             shift and go to state 20
    REM             shift and go to state 21
    MUL             shift and go to state 22
    DIV             shift and go to state 23
    MOD             shift and go to state 24
    POW             shift and go to state 31

  ! ADD             [ reduce using rule 23 (expression -> expression GE expression .) ]
  ! REM             [ reduce using rule 23 (expression -> expression GE expression .) ]
  ! MUL             [ reduce using rule 23 (expression -> expression GE expression .) ]
  ! DIV             [ reduce using rule 23 (expression -> expression GE expression .) ]
  ! MOD             [ reduce using rule 23 (expression -> expression GE expression .) ]
  ! POW             [ reduce using rule 23 (expression -> expression GE expression .) ]
  ! GT              [ shift and go to state 25 ]
  ! LT              [ shift and go to state 26 ]
  ! GE              [ shift and go to state 27 ]
  ! LE              [ shift and go to state 28 ]
  ! EQ              [ shift and go to state 29 ]
  ! NE              [ shift and go to state 30 ]


state 44

    (24) expression -> expression LE expression .
    (16) expression -> expression . ADD expression
    (17) expression -> expression . REM expression
    (18) expression -> expression . MUL expression
    (19) expression -> expression . DIV expression
    (20) expression -> expression . MOD expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . LT expression
    (23) expression -> expression . GE expression
    (24) expression -> expression . LE expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NE expression
    (27) expression -> expression . POW expression

    SPLIT           reduce using rule 24 (expression -> expression LE expression .)
    GT              reduce using rule 24 (expression -> expression LE expression .)
    LT              reduce using rule 24 (expression -> expression LE expression .)
    GE              reduce using rule 24 (expression -> expression LE expression .)
    LE              reduce using rule 24 (expression -> expression LE expression .)
    EQ              reduce using rule 24 (expression -> expression LE expression .)
    NE              reduce using rule 24 (expression -> expression LE expression .)
    RPAREN          reduce using rule 24 (expression -> expression LE expression .)
    COMMA           reduce using rule 24 (expression -> expression LE expression .)
    ADD             shift and go to state 20
    REM             shift and go to state 21
    MUL             shift and go to state 22
    DIV             shift and go to state 23
    MOD             shift and go to state 24
    POW             shift and go to state 31

  ! ADD             [ reduce using rule 24 (expression -> expression LE expression .) ]
  ! REM             [ reduce using rule 24 (expression -> expression LE expression .) ]
  ! MUL             [ reduce using rule 24 (expression -> expression LE expression .) ]
  ! DIV             [ reduce using rule 24 (expression -> expression LE expression .) ]
  ! MOD             [ reduce using rule 24 (expression -> expression LE expression .) ]
  ! POW             [ reduce using rule 24 (expression -> expression LE expression .) ]
  ! GT              [ shift and go to state 25 ]
  ! LT              [ shift and go to state 26 ]
  ! GE              [ shift and go to state 27 ]
  ! LE              [ shift and go to state 28 ]
  ! EQ              [ shift and go to state 29 ]
  ! NE              [ shift and go to state 30 ]


state 45

    (25) expression -> expression EQ expression .
    (16) expression -> expression . ADD expression
    (17) expression -> expression . REM expression
    (18) expression -> expression . MUL expression
    (19) expression -> expression . DIV expression
    (20) expression -> expression . MOD expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . LT expression
    (23) expression -> expression . GE expression
    (24) expression -> expression . LE expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NE expression
    (27) expression -> expression . POW expression

    SPLIT           reduce using rule 25 (expression -> expression EQ expression .)
    GT              reduce using rule 25 (expression -> expression EQ expression .)
    LT              reduce using rule 25 (expression -> expression EQ expression .)
    GE              reduce using rule 25 (expression -> expression EQ expression .)
    LE              reduce using rule 25 (expression -> expression EQ expression .)
    EQ              reduce using rule 25 (expression -> expression EQ expression .)
    NE              reduce using rule 25 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 25 (expression -> expression EQ expression .)
    COMMA           reduce using rule 25 (expression -> expression EQ expression .)
    ADD             shift and go to state 20
    REM             shift and go to state 21
    MUL             shift and go to state 22
    DIV             shift and go to state 23
    MOD             shift and go to state 24
    POW             shift and go to state 31

  ! ADD             [ reduce using rule 25 (expression -> expression EQ expression .) ]
  ! REM             [ reduce using rule 25 (expression -> expression EQ expression .) ]
  ! MUL             [ reduce using rule 25 (expression -> expression EQ expression .) ]
  ! DIV             [ reduce using rule 25 (expression -> expression EQ expression .) ]
  ! MOD             [ reduce using rule 25 (expression -> expression EQ expression .) ]
  ! POW             [ reduce using rule 25 (expression -> expression EQ expression .) ]
  ! GT              [ shift and go to state 25 ]
  ! LT              [ shift and go to state 26 ]
  ! GE              [ shift and go to state 27 ]
  ! LE              [ shift and go to state 28 ]
  ! EQ              [ shift and go to state 29 ]
  ! NE              [ shift and go to state 30 ]


state 46

    (26) expression -> expression NE expression .
    (16) expression -> expression . ADD expression
    (17) expression -> expression . REM expression
    (18) expression -> expression . MUL expression
    (19) expression -> expression . DIV expression
    (20) expression -> expression . MOD expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . LT expression
    (23) expression -> expression . GE expression
    (24) expression -> expression . LE expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NE expression
    (27) expression -> expression . POW expression

    SPLIT           reduce using rule 26 (expression -> expression NE expression .)
    GT              reduce using rule 26 (expression -> expression NE expression .)
    LT              reduce using rule 26 (expression -> expression NE expression .)
    GE              reduce using rule 26 (expression -> expression NE expression .)
    LE              reduce using rule 26 (expression -> expression NE expression .)
    EQ              reduce using rule 26 (expression -> expression NE expression .)
    NE              reduce using rule 26 (expression -> expression NE expression .)
    RPAREN          reduce using rule 26 (expression -> expression NE expression .)
    COMMA           reduce using rule 26 (expression -> expression NE expression .)
    ADD             shift and go to state 20
    REM             shift and go to state 21
    MUL             shift and go to state 22
    DIV             shift and go to state 23
    MOD             shift and go to state 24
    POW             shift and go to state 31

  ! ADD             [ reduce using rule 26 (expression -> expression NE expression .) ]
  ! REM             [ reduce using rule 26 (expression -> expression NE expression .) ]
  ! MUL             [ reduce using rule 26 (expression -> expression NE expression .) ]
  ! DIV             [ reduce using rule 26 (expression -> expression NE expression .) ]
  ! MOD             [ reduce using rule 26 (expression -> expression NE expression .) ]
  ! POW             [ reduce using rule 26 (expression -> expression NE expression .) ]
  ! GT              [ shift and go to state 25 ]
  ! LT              [ shift and go to state 26 ]
  ! GE              [ shift and go to state 27 ]
  ! LE              [ shift and go to state 28 ]
  ! EQ              [ shift and go to state 29 ]
  ! NE              [ shift and go to state 30 ]


state 47

    (27) expression -> expression POW expression .
    (16) expression -> expression . ADD expression
    (17) expression -> expression . REM expression
    (18) expression -> expression . MUL expression
    (19) expression -> expression . DIV expression
    (20) expression -> expression . MOD expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . LT expression
    (23) expression -> expression . GE expression
    (24) expression -> expression . LE expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NE expression
    (27) expression -> expression . POW expression

    SPLIT           reduce using rule 27 (expression -> expression POW expression .)
    ADD             reduce using rule 27 (expression -> expression POW expression .)
    REM             reduce using rule 27 (expression -> expression POW expression .)
    MUL             reduce using rule 27 (expression -> expression POW expression .)
    DIV             reduce using rule 27 (expression -> expression POW expression .)
    MOD             reduce using rule 27 (expression -> expression POW expression .)
    GT              reduce using rule 27 (expression -> expression POW expression .)
    LT              reduce using rule 27 (expression -> expression POW expression .)
    GE              reduce using rule 27 (expression -> expression POW expression .)
    LE              reduce using rule 27 (expression -> expression POW expression .)
    EQ              reduce using rule 27 (expression -> expression POW expression .)
    NE              reduce using rule 27 (expression -> expression POW expression .)
    POW             reduce using rule 27 (expression -> expression POW expression .)
    RPAREN          reduce using rule 27 (expression -> expression POW expression .)
    COMMA           reduce using rule 27 (expression -> expression POW expression .)

  ! ADD             [ shift and go to state 20 ]
  ! REM             [ shift and go to state 21 ]
  ! MUL             [ shift and go to state 22 ]
  ! DIV             [ shift and go to state 23 ]
  ! MOD             [ shift and go to state 24 ]
  ! GT              [ shift and go to state 25 ]
  ! LT              [ shift and go to state 26 ]
  ! GE              [ shift and go to state 27 ]
  ! LE              [ shift and go to state 28 ]
  ! EQ              [ shift and go to state 29 ]
  ! NE              [ shift and go to state 30 ]
  ! POW             [ shift and go to state 31 ]


state 48

    (8) line_statement -> ID ASSIGN expression . SPLIT
    (16) expression -> expression . ADD expression
    (17) expression -> expression . REM expression
    (18) expression -> expression . MUL expression
    (19) expression -> expression . DIV expression
    (20) expression -> expression . MOD expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . LT expression
    (23) expression -> expression . GE expression
    (24) expression -> expression . LE expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NE expression
    (27) expression -> expression . POW expression

    SPLIT           shift and go to state 51
    ADD             shift and go to state 20
    REM             shift and go to state 21
    MUL             shift and go to state 22
    DIV             shift and go to state 23
    MOD             shift and go to state 24
    GT              shift and go to state 25
    LT              shift and go to state 26
    GE              shift and go to state 27
    LE              shift and go to state 28
    EQ              shift and go to state 29
    NE              shift and go to state 30
    POW             shift and go to state 31


state 49

    (7) statement -> PRINT LPAREN expr_list RPAREN .

    SPLIT           reduce using rule 7 (statement -> PRINT LPAREN expr_list RPAREN .)


state 50

    (10) expr_list -> expr_list COMMA . expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (13) expression -> . ID
    (14) expression -> . NUMBER
    (15) expression -> . STRING
    (16) expression -> . expression ADD expression
    (17) expression -> . expression REM expression
    (18) expression -> . expression MUL expression
    (19) expression -> . expression DIV expression
    (20) expression -> . expression MOD expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression LT expression
    (23) expression -> . expression GE expression
    (24) expression -> . expression LE expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NE expression
    (27) expression -> . expression POW expression
    (28) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    ID              shift and go to state 18
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    LPAREN          shift and go to state 8

    expression                     shift and go to state 52

state 51

    (8) line_statement -> ID ASSIGN expression SPLIT .

    PRINT           reduce using rule 8 (line_statement -> ID ASSIGN expression SPLIT .)
    SPLIT           reduce using rule 8 (line_statement -> ID ASSIGN expression SPLIT .)
    ID              reduce using rule 8 (line_statement -> ID ASSIGN expression SPLIT .)
    TRUE            reduce using rule 8 (line_statement -> ID ASSIGN expression SPLIT .)
    FALSE           reduce using rule 8 (line_statement -> ID ASSIGN expression SPLIT .)
    NUMBER          reduce using rule 8 (line_statement -> ID ASSIGN expression SPLIT .)
    STRING          reduce using rule 8 (line_statement -> ID ASSIGN expression SPLIT .)
    LPAREN          reduce using rule 8 (line_statement -> ID ASSIGN expression SPLIT .)
    $end            reduce using rule 8 (line_statement -> ID ASSIGN expression SPLIT .)


state 52

    (10) expr_list -> expr_list COMMA expression .
    (16) expression -> expression . ADD expression
    (17) expression -> expression . REM expression
    (18) expression -> expression . MUL expression
    (19) expression -> expression . DIV expression
    (20) expression -> expression . MOD expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . LT expression
    (23) expression -> expression . GE expression
    (24) expression -> expression . LE expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NE expression
    (27) expression -> expression . POW expression

    RPAREN          reduce using rule 10 (expr_list -> expr_list COMMA expression .)
    COMMA           reduce using rule 10 (expr_list -> expr_list COMMA expression .)
    ADD             shift and go to state 20
    REM             shift and go to state 21
    MUL             shift and go to state 22
    DIV             shift and go to state 23
    MOD             shift and go to state 24
    GT              shift and go to state 25
    LT              shift and go to state 26
    GE              shift and go to state 27
    LE              shift and go to state 28
    EQ              shift and go to state 29
    NE              shift and go to state 30
    POW             shift and go to state 31

