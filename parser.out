Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> function
Rule 2     function -> function statement SPLIT
Rule 3     function -> function line_statement
Rule 4     function -> empty
Rule 5     line_statement -> SPLIT
Rule 6     line_statement -> expression SPLIT
Rule 7     statement -> PRINT LPAREN expr_list RPAREN
Rule 8     range -> RANGE LPAREN expr_list RPAREN
Rule 9     line_statement -> FOR ID IN range COLON statement SPLIT
Rule 10    line_statement -> statement IF condition_list ELSE statement SPLIT
Rule 11    if_assign -> ID ASSIGN expression
Rule 12    line_statement -> if_assign IF condition_list ELSE expression SPLIT
Rule 13    line_statement -> IF condition_list COLON statement SPLIT
Rule 14    line_statement -> IF condition_list COLON SPLIT statement SPLIT
Rule 15    line_statement -> ID ASSIGN expression SPLIT
Rule 16    line_statement -> ID ASSIGN condition_list SPLIT
Rule 17    expr_list -> expression
Rule 18    expr_list -> expr_list COMMA expression
Rule 19    condition_list -> expression
Rule 20    condition_list -> condition_list AND expression
Rule 21    condition_list -> condition_list OR expression
Rule 22    condition_list -> LPAREN condition_list RPAREN
Rule 23    expression -> TRUE
Rule 24    expression -> FALSE
Rule 25    expression -> ID
Rule 26    expression -> NUMBER
Rule 27    expression -> STRING
Rule 28    expression -> expression ADD expression
Rule 29    expression -> expression REM expression
Rule 30    expression -> expression MUL expression
Rule 31    expression -> expression DIV expression
Rule 32    expression -> expression MOD expression
Rule 33    expression -> expression GT expression
Rule 34    expression -> expression LT expression
Rule 35    expression -> expression GE expression
Rule 36    expression -> expression LE expression
Rule 37    expression -> expression EQ expression
Rule 38    expression -> expression NE expression
Rule 39    expression -> expression POW expression
Rule 40    expression -> LPAREN expression RPAREN
Rule 41    empty -> <empty>

Terminals, with rules where they appear

ADD                  : 28
AND                  : 20
ASSIGN               : 11 15 16
COLON                : 9 13 14
COMMA                : 18
DIV                  : 31
ELSE                 : 10 12
EQ                   : 37
FALSE                : 24
FOR                  : 9
GE                   : 35
GT                   : 33
ID                   : 9 11 15 16 25
IF                   : 10 12 13 14
IN                   : 9
LE                   : 36
LPAREN               : 7 8 22 40
LT                   : 34
MOD                  : 32
MUL                  : 30
NE                   : 38
NUMBER               : 26
OR                   : 21
POW                  : 39
PRINT                : 7
RANGE                : 8
REM                  : 29
RPAREN               : 7 8 22 40
SPLIT                : 2 5 6 9 10 12 13 14 14 15 16
STRING               : 27
TRUE                 : 23
error                : 

Nonterminals, with rules where they appear

condition_list       : 10 12 13 14 16 20 21 22
empty                : 4
expr_list            : 7 8 18
expression           : 6 11 12 15 17 18 19 20 21 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40
function             : 1 2 3
if_assign            : 12
line_statement       : 3
range                : 9
start                : 0
statement            : 2 9 10 10 13 14

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . function
    (2) function -> . function statement SPLIT
    (3) function -> . function line_statement
    (4) function -> . empty
    (41) empty -> .

    PRINT           reduce using rule 41 (empty -> .)
    SPLIT           reduce using rule 41 (empty -> .)
    FOR             reduce using rule 41 (empty -> .)
    IF              reduce using rule 41 (empty -> .)
    ID              reduce using rule 41 (empty -> .)
    TRUE            reduce using rule 41 (empty -> .)
    FALSE           reduce using rule 41 (empty -> .)
    NUMBER          reduce using rule 41 (empty -> .)
    STRING          reduce using rule 41 (empty -> .)
    LPAREN          reduce using rule 41 (empty -> .)
    $end            reduce using rule 41 (empty -> .)

    start                          shift and go to state 1
    function                       shift and go to state 2
    empty                          shift and go to state 3

state 1

    (0) S' -> start .



state 2

    (1) start -> function .
    (2) function -> function . statement SPLIT
    (3) function -> function . line_statement
    (7) statement -> . PRINT LPAREN expr_list RPAREN
    (5) line_statement -> . SPLIT
    (6) line_statement -> . expression SPLIT
    (9) line_statement -> . FOR ID IN range COLON statement SPLIT
    (10) line_statement -> . statement IF condition_list ELSE statement SPLIT
    (12) line_statement -> . if_assign IF condition_list ELSE expression SPLIT
    (13) line_statement -> . IF condition_list COLON statement SPLIT
    (14) line_statement -> . IF condition_list COLON SPLIT statement SPLIT
    (15) line_statement -> . ID ASSIGN expression SPLIT
    (16) line_statement -> . ID ASSIGN condition_list SPLIT
    (23) expression -> . TRUE
    (24) expression -> . FALSE
    (25) expression -> . ID
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . expression ADD expression
    (29) expression -> . expression REM expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression MOD expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression LT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression LE expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression POW expression
    (40) expression -> . LPAREN expression RPAREN
    (11) if_assign -> . ID ASSIGN expression

    $end            reduce using rule 1 (start -> function .)
    PRINT           shift and go to state 7
    SPLIT           shift and go to state 5
    FOR             shift and go to state 10
    IF              shift and go to state 12
    ID              shift and go to state 11
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    NUMBER          shift and go to state 16
    STRING          shift and go to state 17
    LPAREN          shift and go to state 8

    statement                      shift and go to state 4
    line_statement                 shift and go to state 6
    expression                     shift and go to state 9
    if_assign                      shift and go to state 13

state 3

    (4) function -> empty .

    PRINT           reduce using rule 4 (function -> empty .)
    SPLIT           reduce using rule 4 (function -> empty .)
    FOR             reduce using rule 4 (function -> empty .)
    IF              reduce using rule 4 (function -> empty .)
    ID              reduce using rule 4 (function -> empty .)
    TRUE            reduce using rule 4 (function -> empty .)
    FALSE           reduce using rule 4 (function -> empty .)
    NUMBER          reduce using rule 4 (function -> empty .)
    STRING          reduce using rule 4 (function -> empty .)
    LPAREN          reduce using rule 4 (function -> empty .)
    $end            reduce using rule 4 (function -> empty .)


state 4

    (2) function -> function statement . SPLIT
    (10) line_statement -> statement . IF condition_list ELSE statement SPLIT

    SPLIT           shift and go to state 18
    IF              shift and go to state 19


state 5

    (5) line_statement -> SPLIT .

    PRINT           reduce using rule 5 (line_statement -> SPLIT .)
    SPLIT           reduce using rule 5 (line_statement -> SPLIT .)
    FOR             reduce using rule 5 (line_statement -> SPLIT .)
    IF              reduce using rule 5 (line_statement -> SPLIT .)
    ID              reduce using rule 5 (line_statement -> SPLIT .)
    TRUE            reduce using rule 5 (line_statement -> SPLIT .)
    FALSE           reduce using rule 5 (line_statement -> SPLIT .)
    NUMBER          reduce using rule 5 (line_statement -> SPLIT .)
    STRING          reduce using rule 5 (line_statement -> SPLIT .)
    LPAREN          reduce using rule 5 (line_statement -> SPLIT .)
    $end            reduce using rule 5 (line_statement -> SPLIT .)


state 6

    (3) function -> function line_statement .

    PRINT           reduce using rule 3 (function -> function line_statement .)
    SPLIT           reduce using rule 3 (function -> function line_statement .)
    FOR             reduce using rule 3 (function -> function line_statement .)
    IF              reduce using rule 3 (function -> function line_statement .)
    ID              reduce using rule 3 (function -> function line_statement .)
    TRUE            reduce using rule 3 (function -> function line_statement .)
    FALSE           reduce using rule 3 (function -> function line_statement .)
    NUMBER          reduce using rule 3 (function -> function line_statement .)
    STRING          reduce using rule 3 (function -> function line_statement .)
    LPAREN          reduce using rule 3 (function -> function line_statement .)
    $end            reduce using rule 3 (function -> function line_statement .)


state 7

    (7) statement -> PRINT . LPAREN expr_list RPAREN

    LPAREN          shift and go to state 20


state 8

    (40) expression -> LPAREN . expression RPAREN
    (23) expression -> . TRUE
    (24) expression -> . FALSE
    (25) expression -> . ID
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . expression ADD expression
    (29) expression -> . expression REM expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression MOD expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression LT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression LE expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression POW expression
    (40) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    ID              shift and go to state 22
    NUMBER          shift and go to state 16
    STRING          shift and go to state 17
    LPAREN          shift and go to state 8

    expression                     shift and go to state 21

state 9

    (6) line_statement -> expression . SPLIT
    (28) expression -> expression . ADD expression
    (29) expression -> expression . REM expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . MOD expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . LT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . LE expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NE expression
    (39) expression -> expression . POW expression

    SPLIT           shift and go to state 23
    ADD             shift and go to state 24
    REM             shift and go to state 25
    MUL             shift and go to state 26
    DIV             shift and go to state 27
    MOD             shift and go to state 28
    GT              shift and go to state 29
    LT              shift and go to state 30
    GE              shift and go to state 31
    LE              shift and go to state 32
    EQ              shift and go to state 33
    NE              shift and go to state 34
    POW             shift and go to state 35


state 10

    (9) line_statement -> FOR . ID IN range COLON statement SPLIT

    ID              shift and go to state 36


state 11

    (15) line_statement -> ID . ASSIGN expression SPLIT
    (16) line_statement -> ID . ASSIGN condition_list SPLIT
    (25) expression -> ID .
    (11) if_assign -> ID . ASSIGN expression

    ASSIGN          shift and go to state 37
    SPLIT           reduce using rule 25 (expression -> ID .)
    ADD             reduce using rule 25 (expression -> ID .)
    REM             reduce using rule 25 (expression -> ID .)
    MUL             reduce using rule 25 (expression -> ID .)
    DIV             reduce using rule 25 (expression -> ID .)
    MOD             reduce using rule 25 (expression -> ID .)
    GT              reduce using rule 25 (expression -> ID .)
    LT              reduce using rule 25 (expression -> ID .)
    GE              reduce using rule 25 (expression -> ID .)
    LE              reduce using rule 25 (expression -> ID .)
    EQ              reduce using rule 25 (expression -> ID .)
    NE              reduce using rule 25 (expression -> ID .)
    POW             reduce using rule 25 (expression -> ID .)


state 12

    (13) line_statement -> IF . condition_list COLON statement SPLIT
    (14) line_statement -> IF . condition_list COLON SPLIT statement SPLIT
    (19) condition_list -> . expression
    (20) condition_list -> . condition_list AND expression
    (21) condition_list -> . condition_list OR expression
    (22) condition_list -> . LPAREN condition_list RPAREN
    (23) expression -> . TRUE
    (24) expression -> . FALSE
    (25) expression -> . ID
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . expression ADD expression
    (29) expression -> . expression REM expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression MOD expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression LT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression LE expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression POW expression
    (40) expression -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 40
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    ID              shift and go to state 22
    NUMBER          shift and go to state 16
    STRING          shift and go to state 17

    condition_list                 shift and go to state 38
    expression                     shift and go to state 39

state 13

    (12) line_statement -> if_assign . IF condition_list ELSE expression SPLIT

    IF              shift and go to state 41


state 14

    (23) expression -> TRUE .

    SPLIT           reduce using rule 23 (expression -> TRUE .)
    ADD             reduce using rule 23 (expression -> TRUE .)
    REM             reduce using rule 23 (expression -> TRUE .)
    MUL             reduce using rule 23 (expression -> TRUE .)
    DIV             reduce using rule 23 (expression -> TRUE .)
    MOD             reduce using rule 23 (expression -> TRUE .)
    GT              reduce using rule 23 (expression -> TRUE .)
    LT              reduce using rule 23 (expression -> TRUE .)
    GE              reduce using rule 23 (expression -> TRUE .)
    LE              reduce using rule 23 (expression -> TRUE .)
    EQ              reduce using rule 23 (expression -> TRUE .)
    NE              reduce using rule 23 (expression -> TRUE .)
    POW             reduce using rule 23 (expression -> TRUE .)
    RPAREN          reduce using rule 23 (expression -> TRUE .)
    COLON           reduce using rule 23 (expression -> TRUE .)
    AND             reduce using rule 23 (expression -> TRUE .)
    OR              reduce using rule 23 (expression -> TRUE .)
    ELSE            reduce using rule 23 (expression -> TRUE .)
    COMMA           reduce using rule 23 (expression -> TRUE .)
    IF              reduce using rule 23 (expression -> TRUE .)


state 15

    (24) expression -> FALSE .

    SPLIT           reduce using rule 24 (expression -> FALSE .)
    ADD             reduce using rule 24 (expression -> FALSE .)
    REM             reduce using rule 24 (expression -> FALSE .)
    MUL             reduce using rule 24 (expression -> FALSE .)
    DIV             reduce using rule 24 (expression -> FALSE .)
    MOD             reduce using rule 24 (expression -> FALSE .)
    GT              reduce using rule 24 (expression -> FALSE .)
    LT              reduce using rule 24 (expression -> FALSE .)
    GE              reduce using rule 24 (expression -> FALSE .)
    LE              reduce using rule 24 (expression -> FALSE .)
    EQ              reduce using rule 24 (expression -> FALSE .)
    NE              reduce using rule 24 (expression -> FALSE .)
    POW             reduce using rule 24 (expression -> FALSE .)
    RPAREN          reduce using rule 24 (expression -> FALSE .)
    COLON           reduce using rule 24 (expression -> FALSE .)
    AND             reduce using rule 24 (expression -> FALSE .)
    OR              reduce using rule 24 (expression -> FALSE .)
    ELSE            reduce using rule 24 (expression -> FALSE .)
    COMMA           reduce using rule 24 (expression -> FALSE .)
    IF              reduce using rule 24 (expression -> FALSE .)


state 16

    (26) expression -> NUMBER .

    SPLIT           reduce using rule 26 (expression -> NUMBER .)
    ADD             reduce using rule 26 (expression -> NUMBER .)
    REM             reduce using rule 26 (expression -> NUMBER .)
    MUL             reduce using rule 26 (expression -> NUMBER .)
    DIV             reduce using rule 26 (expression -> NUMBER .)
    MOD             reduce using rule 26 (expression -> NUMBER .)
    GT              reduce using rule 26 (expression -> NUMBER .)
    LT              reduce using rule 26 (expression -> NUMBER .)
    GE              reduce using rule 26 (expression -> NUMBER .)
    LE              reduce using rule 26 (expression -> NUMBER .)
    EQ              reduce using rule 26 (expression -> NUMBER .)
    NE              reduce using rule 26 (expression -> NUMBER .)
    POW             reduce using rule 26 (expression -> NUMBER .)
    RPAREN          reduce using rule 26 (expression -> NUMBER .)
    COLON           reduce using rule 26 (expression -> NUMBER .)
    AND             reduce using rule 26 (expression -> NUMBER .)
    OR              reduce using rule 26 (expression -> NUMBER .)
    ELSE            reduce using rule 26 (expression -> NUMBER .)
    COMMA           reduce using rule 26 (expression -> NUMBER .)
    IF              reduce using rule 26 (expression -> NUMBER .)


state 17

    (27) expression -> STRING .

    SPLIT           reduce using rule 27 (expression -> STRING .)
    ADD             reduce using rule 27 (expression -> STRING .)
    REM             reduce using rule 27 (expression -> STRING .)
    MUL             reduce using rule 27 (expression -> STRING .)
    DIV             reduce using rule 27 (expression -> STRING .)
    MOD             reduce using rule 27 (expression -> STRING .)
    GT              reduce using rule 27 (expression -> STRING .)
    LT              reduce using rule 27 (expression -> STRING .)
    GE              reduce using rule 27 (expression -> STRING .)
    LE              reduce using rule 27 (expression -> STRING .)
    EQ              reduce using rule 27 (expression -> STRING .)
    NE              reduce using rule 27 (expression -> STRING .)
    POW             reduce using rule 27 (expression -> STRING .)
    RPAREN          reduce using rule 27 (expression -> STRING .)
    COLON           reduce using rule 27 (expression -> STRING .)
    AND             reduce using rule 27 (expression -> STRING .)
    OR              reduce using rule 27 (expression -> STRING .)
    ELSE            reduce using rule 27 (expression -> STRING .)
    COMMA           reduce using rule 27 (expression -> STRING .)
    IF              reduce using rule 27 (expression -> STRING .)


state 18

    (2) function -> function statement SPLIT .

    PRINT           reduce using rule 2 (function -> function statement SPLIT .)
    SPLIT           reduce using rule 2 (function -> function statement SPLIT .)
    FOR             reduce using rule 2 (function -> function statement SPLIT .)
    IF              reduce using rule 2 (function -> function statement SPLIT .)
    ID              reduce using rule 2 (function -> function statement SPLIT .)
    TRUE            reduce using rule 2 (function -> function statement SPLIT .)
    FALSE           reduce using rule 2 (function -> function statement SPLIT .)
    NUMBER          reduce using rule 2 (function -> function statement SPLIT .)
    STRING          reduce using rule 2 (function -> function statement SPLIT .)
    LPAREN          reduce using rule 2 (function -> function statement SPLIT .)
    $end            reduce using rule 2 (function -> function statement SPLIT .)


state 19

    (10) line_statement -> statement IF . condition_list ELSE statement SPLIT
    (19) condition_list -> . expression
    (20) condition_list -> . condition_list AND expression
    (21) condition_list -> . condition_list OR expression
    (22) condition_list -> . LPAREN condition_list RPAREN
    (23) expression -> . TRUE
    (24) expression -> . FALSE
    (25) expression -> . ID
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . expression ADD expression
    (29) expression -> . expression REM expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression MOD expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression LT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression LE expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression POW expression
    (40) expression -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 40
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    ID              shift and go to state 22
    NUMBER          shift and go to state 16
    STRING          shift and go to state 17

    condition_list                 shift and go to state 42
    expression                     shift and go to state 39

state 20

    (7) statement -> PRINT LPAREN . expr_list RPAREN
    (17) expr_list -> . expression
    (18) expr_list -> . expr_list COMMA expression
    (23) expression -> . TRUE
    (24) expression -> . FALSE
    (25) expression -> . ID
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . expression ADD expression
    (29) expression -> . expression REM expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression MOD expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression LT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression LE expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression POW expression
    (40) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    ID              shift and go to state 22
    NUMBER          shift and go to state 16
    STRING          shift and go to state 17
    LPAREN          shift and go to state 8

    expr_list                      shift and go to state 43
    expression                     shift and go to state 44

state 21

    (40) expression -> LPAREN expression . RPAREN
    (28) expression -> expression . ADD expression
    (29) expression -> expression . REM expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . MOD expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . LT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . LE expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NE expression
    (39) expression -> expression . POW expression

    RPAREN          shift and go to state 45
    ADD             shift and go to state 24
    REM             shift and go to state 25
    MUL             shift and go to state 26
    DIV             shift and go to state 27
    MOD             shift and go to state 28
    GT              shift and go to state 29
    LT              shift and go to state 30
    GE              shift and go to state 31
    LE              shift and go to state 32
    EQ              shift and go to state 33
    NE              shift and go to state 34
    POW             shift and go to state 35


state 22

    (25) expression -> ID .

    RPAREN          reduce using rule 25 (expression -> ID .)
    ADD             reduce using rule 25 (expression -> ID .)
    REM             reduce using rule 25 (expression -> ID .)
    MUL             reduce using rule 25 (expression -> ID .)
    DIV             reduce using rule 25 (expression -> ID .)
    MOD             reduce using rule 25 (expression -> ID .)
    GT              reduce using rule 25 (expression -> ID .)
    LT              reduce using rule 25 (expression -> ID .)
    GE              reduce using rule 25 (expression -> ID .)
    LE              reduce using rule 25 (expression -> ID .)
    EQ              reduce using rule 25 (expression -> ID .)
    NE              reduce using rule 25 (expression -> ID .)
    POW             reduce using rule 25 (expression -> ID .)
    COLON           reduce using rule 25 (expression -> ID .)
    AND             reduce using rule 25 (expression -> ID .)
    OR              reduce using rule 25 (expression -> ID .)
    ELSE            reduce using rule 25 (expression -> ID .)
    COMMA           reduce using rule 25 (expression -> ID .)
    SPLIT           reduce using rule 25 (expression -> ID .)
    IF              reduce using rule 25 (expression -> ID .)


state 23

    (6) line_statement -> expression SPLIT .

    PRINT           reduce using rule 6 (line_statement -> expression SPLIT .)
    SPLIT           reduce using rule 6 (line_statement -> expression SPLIT .)
    FOR             reduce using rule 6 (line_statement -> expression SPLIT .)
    IF              reduce using rule 6 (line_statement -> expression SPLIT .)
    ID              reduce using rule 6 (line_statement -> expression SPLIT .)
    TRUE            reduce using rule 6 (line_statement -> expression SPLIT .)
    FALSE           reduce using rule 6 (line_statement -> expression SPLIT .)
    NUMBER          reduce using rule 6 (line_statement -> expression SPLIT .)
    STRING          reduce using rule 6 (line_statement -> expression SPLIT .)
    LPAREN          reduce using rule 6 (line_statement -> expression SPLIT .)
    $end            reduce using rule 6 (line_statement -> expression SPLIT .)


state 24

    (28) expression -> expression ADD . expression
    (23) expression -> . TRUE
    (24) expression -> . FALSE
    (25) expression -> . ID
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . expression ADD expression
    (29) expression -> . expression REM expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression MOD expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression LT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression LE expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression POW expression
    (40) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    ID              shift and go to state 22
    NUMBER          shift and go to state 16
    STRING          shift and go to state 17
    LPAREN          shift and go to state 8

    expression                     shift and go to state 46

state 25

    (29) expression -> expression REM . expression
    (23) expression -> . TRUE
    (24) expression -> . FALSE
    (25) expression -> . ID
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . expression ADD expression
    (29) expression -> . expression REM expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression MOD expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression LT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression LE expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression POW expression
    (40) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    ID              shift and go to state 22
    NUMBER          shift and go to state 16
    STRING          shift and go to state 17
    LPAREN          shift and go to state 8

    expression                     shift and go to state 47

state 26

    (30) expression -> expression MUL . expression
    (23) expression -> . TRUE
    (24) expression -> . FALSE
    (25) expression -> . ID
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . expression ADD expression
    (29) expression -> . expression REM expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression MOD expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression LT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression LE expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression POW expression
    (40) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    ID              shift and go to state 22
    NUMBER          shift and go to state 16
    STRING          shift and go to state 17
    LPAREN          shift and go to state 8

    expression                     shift and go to state 48

state 27

    (31) expression -> expression DIV . expression
    (23) expression -> . TRUE
    (24) expression -> . FALSE
    (25) expression -> . ID
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . expression ADD expression
    (29) expression -> . expression REM expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression MOD expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression LT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression LE expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression POW expression
    (40) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    ID              shift and go to state 22
    NUMBER          shift and go to state 16
    STRING          shift and go to state 17
    LPAREN          shift and go to state 8

    expression                     shift and go to state 49

state 28

    (32) expression -> expression MOD . expression
    (23) expression -> . TRUE
    (24) expression -> . FALSE
    (25) expression -> . ID
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . expression ADD expression
    (29) expression -> . expression REM expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression MOD expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression LT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression LE expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression POW expression
    (40) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    ID              shift and go to state 22
    NUMBER          shift and go to state 16
    STRING          shift and go to state 17
    LPAREN          shift and go to state 8

    expression                     shift and go to state 50

state 29

    (33) expression -> expression GT . expression
    (23) expression -> . TRUE
    (24) expression -> . FALSE
    (25) expression -> . ID
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . expression ADD expression
    (29) expression -> . expression REM expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression MOD expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression LT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression LE expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression POW expression
    (40) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    ID              shift and go to state 22
    NUMBER          shift and go to state 16
    STRING          shift and go to state 17
    LPAREN          shift and go to state 8

    expression                     shift and go to state 51

state 30

    (34) expression -> expression LT . expression
    (23) expression -> . TRUE
    (24) expression -> . FALSE
    (25) expression -> . ID
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . expression ADD expression
    (29) expression -> . expression REM expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression MOD expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression LT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression LE expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression POW expression
    (40) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    ID              shift and go to state 22
    NUMBER          shift and go to state 16
    STRING          shift and go to state 17
    LPAREN          shift and go to state 8

    expression                     shift and go to state 52

state 31

    (35) expression -> expression GE . expression
    (23) expression -> . TRUE
    (24) expression -> . FALSE
    (25) expression -> . ID
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . expression ADD expression
    (29) expression -> . expression REM expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression MOD expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression LT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression LE expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression POW expression
    (40) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    ID              shift and go to state 22
    NUMBER          shift and go to state 16
    STRING          shift and go to state 17
    LPAREN          shift and go to state 8

    expression                     shift and go to state 53

state 32

    (36) expression -> expression LE . expression
    (23) expression -> . TRUE
    (24) expression -> . FALSE
    (25) expression -> . ID
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . expression ADD expression
    (29) expression -> . expression REM expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression MOD expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression LT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression LE expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression POW expression
    (40) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    ID              shift and go to state 22
    NUMBER          shift and go to state 16
    STRING          shift and go to state 17
    LPAREN          shift and go to state 8

    expression                     shift and go to state 54

state 33

    (37) expression -> expression EQ . expression
    (23) expression -> . TRUE
    (24) expression -> . FALSE
    (25) expression -> . ID
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . expression ADD expression
    (29) expression -> . expression REM expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression MOD expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression LT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression LE expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression POW expression
    (40) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    ID              shift and go to state 22
    NUMBER          shift and go to state 16
    STRING          shift and go to state 17
    LPAREN          shift and go to state 8

    expression                     shift and go to state 55

state 34

    (38) expression -> expression NE . expression
    (23) expression -> . TRUE
    (24) expression -> . FALSE
    (25) expression -> . ID
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . expression ADD expression
    (29) expression -> . expression REM expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression MOD expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression LT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression LE expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression POW expression
    (40) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    ID              shift and go to state 22
    NUMBER          shift and go to state 16
    STRING          shift and go to state 17
    LPAREN          shift and go to state 8

    expression                     shift and go to state 56

state 35

    (39) expression -> expression POW . expression
    (23) expression -> . TRUE
    (24) expression -> . FALSE
    (25) expression -> . ID
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . expression ADD expression
    (29) expression -> . expression REM expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression MOD expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression LT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression LE expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression POW expression
    (40) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    ID              shift and go to state 22
    NUMBER          shift and go to state 16
    STRING          shift and go to state 17
    LPAREN          shift and go to state 8

    expression                     shift and go to state 57

state 36

    (9) line_statement -> FOR ID . IN range COLON statement SPLIT

    IN              shift and go to state 58


state 37

    (15) line_statement -> ID ASSIGN . expression SPLIT
    (16) line_statement -> ID ASSIGN . condition_list SPLIT
    (11) if_assign -> ID ASSIGN . expression
    (23) expression -> . TRUE
    (24) expression -> . FALSE
    (25) expression -> . ID
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . expression ADD expression
    (29) expression -> . expression REM expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression MOD expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression LT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression LE expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression POW expression
    (40) expression -> . LPAREN expression RPAREN
    (19) condition_list -> . expression
    (20) condition_list -> . condition_list AND expression
    (21) condition_list -> . condition_list OR expression
    (22) condition_list -> . LPAREN condition_list RPAREN

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    ID              shift and go to state 22
    NUMBER          shift and go to state 16
    STRING          shift and go to state 17
    LPAREN          shift and go to state 61

    expression                     shift and go to state 59
    condition_list                 shift and go to state 60

state 38

    (13) line_statement -> IF condition_list . COLON statement SPLIT
    (14) line_statement -> IF condition_list . COLON SPLIT statement SPLIT
    (20) condition_list -> condition_list . AND expression
    (21) condition_list -> condition_list . OR expression

    COLON           shift and go to state 62
    AND             shift and go to state 63
    OR              shift and go to state 64


state 39

    (19) condition_list -> expression .
    (28) expression -> expression . ADD expression
    (29) expression -> expression . REM expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . MOD expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . LT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . LE expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NE expression
    (39) expression -> expression . POW expression

    COLON           reduce using rule 19 (condition_list -> expression .)
    AND             reduce using rule 19 (condition_list -> expression .)
    OR              reduce using rule 19 (condition_list -> expression .)
    ELSE            reduce using rule 19 (condition_list -> expression .)
    ADD             shift and go to state 24
    REM             shift and go to state 25
    MUL             shift and go to state 26
    DIV             shift and go to state 27
    MOD             shift and go to state 28
    GT              shift and go to state 29
    LT              shift and go to state 30
    GE              shift and go to state 31
    LE              shift and go to state 32
    EQ              shift and go to state 33
    NE              shift and go to state 34
    POW             shift and go to state 35


state 40

    (22) condition_list -> LPAREN . condition_list RPAREN
    (40) expression -> LPAREN . expression RPAREN
    (19) condition_list -> . expression
    (20) condition_list -> . condition_list AND expression
    (21) condition_list -> . condition_list OR expression
    (22) condition_list -> . LPAREN condition_list RPAREN
    (23) expression -> . TRUE
    (24) expression -> . FALSE
    (25) expression -> . ID
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . expression ADD expression
    (29) expression -> . expression REM expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression MOD expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression LT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression LE expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression POW expression
    (40) expression -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 40
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    ID              shift and go to state 22
    NUMBER          shift and go to state 16
    STRING          shift and go to state 17

    condition_list                 shift and go to state 65
    expression                     shift and go to state 66

state 41

    (12) line_statement -> if_assign IF . condition_list ELSE expression SPLIT
    (19) condition_list -> . expression
    (20) condition_list -> . condition_list AND expression
    (21) condition_list -> . condition_list OR expression
    (22) condition_list -> . LPAREN condition_list RPAREN
    (23) expression -> . TRUE
    (24) expression -> . FALSE
    (25) expression -> . ID
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . expression ADD expression
    (29) expression -> . expression REM expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression MOD expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression LT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression LE expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression POW expression
    (40) expression -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 40
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    ID              shift and go to state 22
    NUMBER          shift and go to state 16
    STRING          shift and go to state 17

    condition_list                 shift and go to state 67
    expression                     shift and go to state 39

state 42

    (10) line_statement -> statement IF condition_list . ELSE statement SPLIT
    (20) condition_list -> condition_list . AND expression
    (21) condition_list -> condition_list . OR expression

    ELSE            shift and go to state 68
    AND             shift and go to state 63
    OR              shift and go to state 64


state 43

    (7) statement -> PRINT LPAREN expr_list . RPAREN
    (18) expr_list -> expr_list . COMMA expression

    RPAREN          shift and go to state 69
    COMMA           shift and go to state 70


state 44

    (17) expr_list -> expression .
    (28) expression -> expression . ADD expression
    (29) expression -> expression . REM expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . MOD expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . LT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . LE expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NE expression
    (39) expression -> expression . POW expression

    RPAREN          reduce using rule 17 (expr_list -> expression .)
    COMMA           reduce using rule 17 (expr_list -> expression .)
    ADD             shift and go to state 24
    REM             shift and go to state 25
    MUL             shift and go to state 26
    DIV             shift and go to state 27
    MOD             shift and go to state 28
    GT              shift and go to state 29
    LT              shift and go to state 30
    GE              shift and go to state 31
    LE              shift and go to state 32
    EQ              shift and go to state 33
    NE              shift and go to state 34
    POW             shift and go to state 35


state 45

    (40) expression -> LPAREN expression RPAREN .

    SPLIT           reduce using rule 40 (expression -> LPAREN expression RPAREN .)
    ADD             reduce using rule 40 (expression -> LPAREN expression RPAREN .)
    REM             reduce using rule 40 (expression -> LPAREN expression RPAREN .)
    MUL             reduce using rule 40 (expression -> LPAREN expression RPAREN .)
    DIV             reduce using rule 40 (expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 40 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 40 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 40 (expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 40 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 40 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 40 (expression -> LPAREN expression RPAREN .)
    NE              reduce using rule 40 (expression -> LPAREN expression RPAREN .)
    POW             reduce using rule 40 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 40 (expression -> LPAREN expression RPAREN .)
    COLON           reduce using rule 40 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 40 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 40 (expression -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 40 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 40 (expression -> LPAREN expression RPAREN .)
    IF              reduce using rule 40 (expression -> LPAREN expression RPAREN .)


state 46

    (28) expression -> expression ADD expression .
    (28) expression -> expression . ADD expression
    (29) expression -> expression . REM expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . MOD expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . LT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . LE expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NE expression
    (39) expression -> expression . POW expression

    SPLIT           reduce using rule 28 (expression -> expression ADD expression .)
    ADD             reduce using rule 28 (expression -> expression ADD expression .)
    REM             reduce using rule 28 (expression -> expression ADD expression .)
    GT              reduce using rule 28 (expression -> expression ADD expression .)
    LT              reduce using rule 28 (expression -> expression ADD expression .)
    GE              reduce using rule 28 (expression -> expression ADD expression .)
    LE              reduce using rule 28 (expression -> expression ADD expression .)
    EQ              reduce using rule 28 (expression -> expression ADD expression .)
    NE              reduce using rule 28 (expression -> expression ADD expression .)
    RPAREN          reduce using rule 28 (expression -> expression ADD expression .)
    COLON           reduce using rule 28 (expression -> expression ADD expression .)
    AND             reduce using rule 28 (expression -> expression ADD expression .)
    OR              reduce using rule 28 (expression -> expression ADD expression .)
    ELSE            reduce using rule 28 (expression -> expression ADD expression .)
    COMMA           reduce using rule 28 (expression -> expression ADD expression .)
    IF              reduce using rule 28 (expression -> expression ADD expression .)
    MUL             shift and go to state 26
    DIV             shift and go to state 27
    MOD             shift and go to state 28
    POW             shift and go to state 35

  ! MUL             [ reduce using rule 28 (expression -> expression ADD expression .) ]
  ! DIV             [ reduce using rule 28 (expression -> expression ADD expression .) ]
  ! MOD             [ reduce using rule 28 (expression -> expression ADD expression .) ]
  ! POW             [ reduce using rule 28 (expression -> expression ADD expression .) ]
  ! ADD             [ shift and go to state 24 ]
  ! REM             [ shift and go to state 25 ]
  ! GT              [ shift and go to state 29 ]
  ! LT              [ shift and go to state 30 ]
  ! GE              [ shift and go to state 31 ]
  ! LE              [ shift and go to state 32 ]
  ! EQ              [ shift and go to state 33 ]
  ! NE              [ shift and go to state 34 ]


state 47

    (29) expression -> expression REM expression .
    (28) expression -> expression . ADD expression
    (29) expression -> expression . REM expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . MOD expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . LT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . LE expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NE expression
    (39) expression -> expression . POW expression

    SPLIT           reduce using rule 29 (expression -> expression REM expression .)
    ADD             reduce using rule 29 (expression -> expression REM expression .)
    REM             reduce using rule 29 (expression -> expression REM expression .)
    GT              reduce using rule 29 (expression -> expression REM expression .)
    LT              reduce using rule 29 (expression -> expression REM expression .)
    GE              reduce using rule 29 (expression -> expression REM expression .)
    LE              reduce using rule 29 (expression -> expression REM expression .)
    EQ              reduce using rule 29 (expression -> expression REM expression .)
    NE              reduce using rule 29 (expression -> expression REM expression .)
    RPAREN          reduce using rule 29 (expression -> expression REM expression .)
    COLON           reduce using rule 29 (expression -> expression REM expression .)
    AND             reduce using rule 29 (expression -> expression REM expression .)
    OR              reduce using rule 29 (expression -> expression REM expression .)
    ELSE            reduce using rule 29 (expression -> expression REM expression .)
    COMMA           reduce using rule 29 (expression -> expression REM expression .)
    IF              reduce using rule 29 (expression -> expression REM expression .)
    MUL             shift and go to state 26
    DIV             shift and go to state 27
    MOD             shift and go to state 28
    POW             shift and go to state 35

  ! MUL             [ reduce using rule 29 (expression -> expression REM expression .) ]
  ! DIV             [ reduce using rule 29 (expression -> expression REM expression .) ]
  ! MOD             [ reduce using rule 29 (expression -> expression REM expression .) ]
  ! POW             [ reduce using rule 29 (expression -> expression REM expression .) ]
  ! ADD             [ shift and go to state 24 ]
  ! REM             [ shift and go to state 25 ]
  ! GT              [ shift and go to state 29 ]
  ! LT              [ shift and go to state 30 ]
  ! GE              [ shift and go to state 31 ]
  ! LE              [ shift and go to state 32 ]
  ! EQ              [ shift and go to state 33 ]
  ! NE              [ shift and go to state 34 ]


state 48

    (30) expression -> expression MUL expression .
    (28) expression -> expression . ADD expression
    (29) expression -> expression . REM expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . MOD expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . LT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . LE expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NE expression
    (39) expression -> expression . POW expression

    SPLIT           reduce using rule 30 (expression -> expression MUL expression .)
    ADD             reduce using rule 30 (expression -> expression MUL expression .)
    REM             reduce using rule 30 (expression -> expression MUL expression .)
    MUL             reduce using rule 30 (expression -> expression MUL expression .)
    DIV             reduce using rule 30 (expression -> expression MUL expression .)
    MOD             reduce using rule 30 (expression -> expression MUL expression .)
    GT              reduce using rule 30 (expression -> expression MUL expression .)
    LT              reduce using rule 30 (expression -> expression MUL expression .)
    GE              reduce using rule 30 (expression -> expression MUL expression .)
    LE              reduce using rule 30 (expression -> expression MUL expression .)
    EQ              reduce using rule 30 (expression -> expression MUL expression .)
    NE              reduce using rule 30 (expression -> expression MUL expression .)
    RPAREN          reduce using rule 30 (expression -> expression MUL expression .)
    COLON           reduce using rule 30 (expression -> expression MUL expression .)
    AND             reduce using rule 30 (expression -> expression MUL expression .)
    OR              reduce using rule 30 (expression -> expression MUL expression .)
    ELSE            reduce using rule 30 (expression -> expression MUL expression .)
    COMMA           reduce using rule 30 (expression -> expression MUL expression .)
    IF              reduce using rule 30 (expression -> expression MUL expression .)
    POW             shift and go to state 35

  ! POW             [ reduce using rule 30 (expression -> expression MUL expression .) ]
  ! ADD             [ shift and go to state 24 ]
  ! REM             [ shift and go to state 25 ]
  ! MUL             [ shift and go to state 26 ]
  ! DIV             [ shift and go to state 27 ]
  ! MOD             [ shift and go to state 28 ]
  ! GT              [ shift and go to state 29 ]
  ! LT              [ shift and go to state 30 ]
  ! GE              [ shift and go to state 31 ]
  ! LE              [ shift and go to state 32 ]
  ! EQ              [ shift and go to state 33 ]
  ! NE              [ shift and go to state 34 ]


state 49

    (31) expression -> expression DIV expression .
    (28) expression -> expression . ADD expression
    (29) expression -> expression . REM expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . MOD expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . LT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . LE expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NE expression
    (39) expression -> expression . POW expression

    SPLIT           reduce using rule 31 (expression -> expression DIV expression .)
    ADD             reduce using rule 31 (expression -> expression DIV expression .)
    REM             reduce using rule 31 (expression -> expression DIV expression .)
    MUL             reduce using rule 31 (expression -> expression DIV expression .)
    DIV             reduce using rule 31 (expression -> expression DIV expression .)
    MOD             reduce using rule 31 (expression -> expression DIV expression .)
    GT              reduce using rule 31 (expression -> expression DIV expression .)
    LT              reduce using rule 31 (expression -> expression DIV expression .)
    GE              reduce using rule 31 (expression -> expression DIV expression .)
    LE              reduce using rule 31 (expression -> expression DIV expression .)
    EQ              reduce using rule 31 (expression -> expression DIV expression .)
    NE              reduce using rule 31 (expression -> expression DIV expression .)
    RPAREN          reduce using rule 31 (expression -> expression DIV expression .)
    COLON           reduce using rule 31 (expression -> expression DIV expression .)
    AND             reduce using rule 31 (expression -> expression DIV expression .)
    OR              reduce using rule 31 (expression -> expression DIV expression .)
    ELSE            reduce using rule 31 (expression -> expression DIV expression .)
    COMMA           reduce using rule 31 (expression -> expression DIV expression .)
    IF              reduce using rule 31 (expression -> expression DIV expression .)
    POW             shift and go to state 35

  ! POW             [ reduce using rule 31 (expression -> expression DIV expression .) ]
  ! ADD             [ shift and go to state 24 ]
  ! REM             [ shift and go to state 25 ]
  ! MUL             [ shift and go to state 26 ]
  ! DIV             [ shift and go to state 27 ]
  ! MOD             [ shift and go to state 28 ]
  ! GT              [ shift and go to state 29 ]
  ! LT              [ shift and go to state 30 ]
  ! GE              [ shift and go to state 31 ]
  ! LE              [ shift and go to state 32 ]
  ! EQ              [ shift and go to state 33 ]
  ! NE              [ shift and go to state 34 ]


state 50

    (32) expression -> expression MOD expression .
    (28) expression -> expression . ADD expression
    (29) expression -> expression . REM expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . MOD expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . LT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . LE expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NE expression
    (39) expression -> expression . POW expression

    SPLIT           reduce using rule 32 (expression -> expression MOD expression .)
    ADD             reduce using rule 32 (expression -> expression MOD expression .)
    REM             reduce using rule 32 (expression -> expression MOD expression .)
    MUL             reduce using rule 32 (expression -> expression MOD expression .)
    DIV             reduce using rule 32 (expression -> expression MOD expression .)
    MOD             reduce using rule 32 (expression -> expression MOD expression .)
    GT              reduce using rule 32 (expression -> expression MOD expression .)
    LT              reduce using rule 32 (expression -> expression MOD expression .)
    GE              reduce using rule 32 (expression -> expression MOD expression .)
    LE              reduce using rule 32 (expression -> expression MOD expression .)
    EQ              reduce using rule 32 (expression -> expression MOD expression .)
    NE              reduce using rule 32 (expression -> expression MOD expression .)
    RPAREN          reduce using rule 32 (expression -> expression MOD expression .)
    COLON           reduce using rule 32 (expression -> expression MOD expression .)
    AND             reduce using rule 32 (expression -> expression MOD expression .)
    OR              reduce using rule 32 (expression -> expression MOD expression .)
    ELSE            reduce using rule 32 (expression -> expression MOD expression .)
    COMMA           reduce using rule 32 (expression -> expression MOD expression .)
    IF              reduce using rule 32 (expression -> expression MOD expression .)
    POW             shift and go to state 35

  ! POW             [ reduce using rule 32 (expression -> expression MOD expression .) ]
  ! ADD             [ shift and go to state 24 ]
  ! REM             [ shift and go to state 25 ]
  ! MUL             [ shift and go to state 26 ]
  ! DIV             [ shift and go to state 27 ]
  ! MOD             [ shift and go to state 28 ]
  ! GT              [ shift and go to state 29 ]
  ! LT              [ shift and go to state 30 ]
  ! GE              [ shift and go to state 31 ]
  ! LE              [ shift and go to state 32 ]
  ! EQ              [ shift and go to state 33 ]
  ! NE              [ shift and go to state 34 ]


state 51

    (33) expression -> expression GT expression .
    (28) expression -> expression . ADD expression
    (29) expression -> expression . REM expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . MOD expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . LT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . LE expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NE expression
    (39) expression -> expression . POW expression

    SPLIT           reduce using rule 33 (expression -> expression GT expression .)
    GT              reduce using rule 33 (expression -> expression GT expression .)
    LT              reduce using rule 33 (expression -> expression GT expression .)
    GE              reduce using rule 33 (expression -> expression GT expression .)
    LE              reduce using rule 33 (expression -> expression GT expression .)
    EQ              reduce using rule 33 (expression -> expression GT expression .)
    NE              reduce using rule 33 (expression -> expression GT expression .)
    RPAREN          reduce using rule 33 (expression -> expression GT expression .)
    COLON           reduce using rule 33 (expression -> expression GT expression .)
    AND             reduce using rule 33 (expression -> expression GT expression .)
    OR              reduce using rule 33 (expression -> expression GT expression .)
    ELSE            reduce using rule 33 (expression -> expression GT expression .)
    COMMA           reduce using rule 33 (expression -> expression GT expression .)
    IF              reduce using rule 33 (expression -> expression GT expression .)
    ADD             shift and go to state 24
    REM             shift and go to state 25
    MUL             shift and go to state 26
    DIV             shift and go to state 27
    MOD             shift and go to state 28
    POW             shift and go to state 35

  ! ADD             [ reduce using rule 33 (expression -> expression GT expression .) ]
  ! REM             [ reduce using rule 33 (expression -> expression GT expression .) ]
  ! MUL             [ reduce using rule 33 (expression -> expression GT expression .) ]
  ! DIV             [ reduce using rule 33 (expression -> expression GT expression .) ]
  ! MOD             [ reduce using rule 33 (expression -> expression GT expression .) ]
  ! POW             [ reduce using rule 33 (expression -> expression GT expression .) ]
  ! GT              [ shift and go to state 29 ]
  ! LT              [ shift and go to state 30 ]
  ! GE              [ shift and go to state 31 ]
  ! LE              [ shift and go to state 32 ]
  ! EQ              [ shift and go to state 33 ]
  ! NE              [ shift and go to state 34 ]


state 52

    (34) expression -> expression LT expression .
    (28) expression -> expression . ADD expression
    (29) expression -> expression . REM expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . MOD expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . LT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . LE expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NE expression
    (39) expression -> expression . POW expression

    SPLIT           reduce using rule 34 (expression -> expression LT expression .)
    GT              reduce using rule 34 (expression -> expression LT expression .)
    LT              reduce using rule 34 (expression -> expression LT expression .)
    GE              reduce using rule 34 (expression -> expression LT expression .)
    LE              reduce using rule 34 (expression -> expression LT expression .)
    EQ              reduce using rule 34 (expression -> expression LT expression .)
    NE              reduce using rule 34 (expression -> expression LT expression .)
    RPAREN          reduce using rule 34 (expression -> expression LT expression .)
    COLON           reduce using rule 34 (expression -> expression LT expression .)
    AND             reduce using rule 34 (expression -> expression LT expression .)
    OR              reduce using rule 34 (expression -> expression LT expression .)
    ELSE            reduce using rule 34 (expression -> expression LT expression .)
    COMMA           reduce using rule 34 (expression -> expression LT expression .)
    IF              reduce using rule 34 (expression -> expression LT expression .)
    ADD             shift and go to state 24
    REM             shift and go to state 25
    MUL             shift and go to state 26
    DIV             shift and go to state 27
    MOD             shift and go to state 28
    POW             shift and go to state 35

  ! ADD             [ reduce using rule 34 (expression -> expression LT expression .) ]
  ! REM             [ reduce using rule 34 (expression -> expression LT expression .) ]
  ! MUL             [ reduce using rule 34 (expression -> expression LT expression .) ]
  ! DIV             [ reduce using rule 34 (expression -> expression LT expression .) ]
  ! MOD             [ reduce using rule 34 (expression -> expression LT expression .) ]
  ! POW             [ reduce using rule 34 (expression -> expression LT expression .) ]
  ! GT              [ shift and go to state 29 ]
  ! LT              [ shift and go to state 30 ]
  ! GE              [ shift and go to state 31 ]
  ! LE              [ shift and go to state 32 ]
  ! EQ              [ shift and go to state 33 ]
  ! NE              [ shift and go to state 34 ]


state 53

    (35) expression -> expression GE expression .
    (28) expression -> expression . ADD expression
    (29) expression -> expression . REM expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . MOD expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . LT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . LE expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NE expression
    (39) expression -> expression . POW expression

    SPLIT           reduce using rule 35 (expression -> expression GE expression .)
    GT              reduce using rule 35 (expression -> expression GE expression .)
    LT              reduce using rule 35 (expression -> expression GE expression .)
    GE              reduce using rule 35 (expression -> expression GE expression .)
    LE              reduce using rule 35 (expression -> expression GE expression .)
    EQ              reduce using rule 35 (expression -> expression GE expression .)
    NE              reduce using rule 35 (expression -> expression GE expression .)
    RPAREN          reduce using rule 35 (expression -> expression GE expression .)
    COLON           reduce using rule 35 (expression -> expression GE expression .)
    AND             reduce using rule 35 (expression -> expression GE expression .)
    OR              reduce using rule 35 (expression -> expression GE expression .)
    ELSE            reduce using rule 35 (expression -> expression GE expression .)
    COMMA           reduce using rule 35 (expression -> expression GE expression .)
    IF              reduce using rule 35 (expression -> expression GE expression .)
    ADD             shift and go to state 24
    REM             shift and go to state 25
    MUL             shift and go to state 26
    DIV             shift and go to state 27
    MOD             shift and go to state 28
    POW             shift and go to state 35

  ! ADD             [ reduce using rule 35 (expression -> expression GE expression .) ]
  ! REM             [ reduce using rule 35 (expression -> expression GE expression .) ]
  ! MUL             [ reduce using rule 35 (expression -> expression GE expression .) ]
  ! DIV             [ reduce using rule 35 (expression -> expression GE expression .) ]
  ! MOD             [ reduce using rule 35 (expression -> expression GE expression .) ]
  ! POW             [ reduce using rule 35 (expression -> expression GE expression .) ]
  ! GT              [ shift and go to state 29 ]
  ! LT              [ shift and go to state 30 ]
  ! GE              [ shift and go to state 31 ]
  ! LE              [ shift and go to state 32 ]
  ! EQ              [ shift and go to state 33 ]
  ! NE              [ shift and go to state 34 ]


state 54

    (36) expression -> expression LE expression .
    (28) expression -> expression . ADD expression
    (29) expression -> expression . REM expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . MOD expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . LT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . LE expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NE expression
    (39) expression -> expression . POW expression

    SPLIT           reduce using rule 36 (expression -> expression LE expression .)
    GT              reduce using rule 36 (expression -> expression LE expression .)
    LT              reduce using rule 36 (expression -> expression LE expression .)
    GE              reduce using rule 36 (expression -> expression LE expression .)
    LE              reduce using rule 36 (expression -> expression LE expression .)
    EQ              reduce using rule 36 (expression -> expression LE expression .)
    NE              reduce using rule 36 (expression -> expression LE expression .)
    RPAREN          reduce using rule 36 (expression -> expression LE expression .)
    COLON           reduce using rule 36 (expression -> expression LE expression .)
    AND             reduce using rule 36 (expression -> expression LE expression .)
    OR              reduce using rule 36 (expression -> expression LE expression .)
    ELSE            reduce using rule 36 (expression -> expression LE expression .)
    COMMA           reduce using rule 36 (expression -> expression LE expression .)
    IF              reduce using rule 36 (expression -> expression LE expression .)
    ADD             shift and go to state 24
    REM             shift and go to state 25
    MUL             shift and go to state 26
    DIV             shift and go to state 27
    MOD             shift and go to state 28
    POW             shift and go to state 35

  ! ADD             [ reduce using rule 36 (expression -> expression LE expression .) ]
  ! REM             [ reduce using rule 36 (expression -> expression LE expression .) ]
  ! MUL             [ reduce using rule 36 (expression -> expression LE expression .) ]
  ! DIV             [ reduce using rule 36 (expression -> expression LE expression .) ]
  ! MOD             [ reduce using rule 36 (expression -> expression LE expression .) ]
  ! POW             [ reduce using rule 36 (expression -> expression LE expression .) ]
  ! GT              [ shift and go to state 29 ]
  ! LT              [ shift and go to state 30 ]
  ! GE              [ shift and go to state 31 ]
  ! LE              [ shift and go to state 32 ]
  ! EQ              [ shift and go to state 33 ]
  ! NE              [ shift and go to state 34 ]


state 55

    (37) expression -> expression EQ expression .
    (28) expression -> expression . ADD expression
    (29) expression -> expression . REM expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . MOD expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . LT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . LE expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NE expression
    (39) expression -> expression . POW expression

    SPLIT           reduce using rule 37 (expression -> expression EQ expression .)
    GT              reduce using rule 37 (expression -> expression EQ expression .)
    LT              reduce using rule 37 (expression -> expression EQ expression .)
    GE              reduce using rule 37 (expression -> expression EQ expression .)
    LE              reduce using rule 37 (expression -> expression EQ expression .)
    EQ              reduce using rule 37 (expression -> expression EQ expression .)
    NE              reduce using rule 37 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 37 (expression -> expression EQ expression .)
    COLON           reduce using rule 37 (expression -> expression EQ expression .)
    AND             reduce using rule 37 (expression -> expression EQ expression .)
    OR              reduce using rule 37 (expression -> expression EQ expression .)
    ELSE            reduce using rule 37 (expression -> expression EQ expression .)
    COMMA           reduce using rule 37 (expression -> expression EQ expression .)
    IF              reduce using rule 37 (expression -> expression EQ expression .)
    ADD             shift and go to state 24
    REM             shift and go to state 25
    MUL             shift and go to state 26
    DIV             shift and go to state 27
    MOD             shift and go to state 28
    POW             shift and go to state 35

  ! ADD             [ reduce using rule 37 (expression -> expression EQ expression .) ]
  ! REM             [ reduce using rule 37 (expression -> expression EQ expression .) ]
  ! MUL             [ reduce using rule 37 (expression -> expression EQ expression .) ]
  ! DIV             [ reduce using rule 37 (expression -> expression EQ expression .) ]
  ! MOD             [ reduce using rule 37 (expression -> expression EQ expression .) ]
  ! POW             [ reduce using rule 37 (expression -> expression EQ expression .) ]
  ! GT              [ shift and go to state 29 ]
  ! LT              [ shift and go to state 30 ]
  ! GE              [ shift and go to state 31 ]
  ! LE              [ shift and go to state 32 ]
  ! EQ              [ shift and go to state 33 ]
  ! NE              [ shift and go to state 34 ]


state 56

    (38) expression -> expression NE expression .
    (28) expression -> expression . ADD expression
    (29) expression -> expression . REM expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . MOD expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . LT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . LE expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NE expression
    (39) expression -> expression . POW expression

    SPLIT           reduce using rule 38 (expression -> expression NE expression .)
    GT              reduce using rule 38 (expression -> expression NE expression .)
    LT              reduce using rule 38 (expression -> expression NE expression .)
    GE              reduce using rule 38 (expression -> expression NE expression .)
    LE              reduce using rule 38 (expression -> expression NE expression .)
    EQ              reduce using rule 38 (expression -> expression NE expression .)
    NE              reduce using rule 38 (expression -> expression NE expression .)
    RPAREN          reduce using rule 38 (expression -> expression NE expression .)
    COLON           reduce using rule 38 (expression -> expression NE expression .)
    AND             reduce using rule 38 (expression -> expression NE expression .)
    OR              reduce using rule 38 (expression -> expression NE expression .)
    ELSE            reduce using rule 38 (expression -> expression NE expression .)
    COMMA           reduce using rule 38 (expression -> expression NE expression .)
    IF              reduce using rule 38 (expression -> expression NE expression .)
    ADD             shift and go to state 24
    REM             shift and go to state 25
    MUL             shift and go to state 26
    DIV             shift and go to state 27
    MOD             shift and go to state 28
    POW             shift and go to state 35

  ! ADD             [ reduce using rule 38 (expression -> expression NE expression .) ]
  ! REM             [ reduce using rule 38 (expression -> expression NE expression .) ]
  ! MUL             [ reduce using rule 38 (expression -> expression NE expression .) ]
  ! DIV             [ reduce using rule 38 (expression -> expression NE expression .) ]
  ! MOD             [ reduce using rule 38 (expression -> expression NE expression .) ]
  ! POW             [ reduce using rule 38 (expression -> expression NE expression .) ]
  ! GT              [ shift and go to state 29 ]
  ! LT              [ shift and go to state 30 ]
  ! GE              [ shift and go to state 31 ]
  ! LE              [ shift and go to state 32 ]
  ! EQ              [ shift and go to state 33 ]
  ! NE              [ shift and go to state 34 ]


state 57

    (39) expression -> expression POW expression .
    (28) expression -> expression . ADD expression
    (29) expression -> expression . REM expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . MOD expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . LT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . LE expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NE expression
    (39) expression -> expression . POW expression

    SPLIT           reduce using rule 39 (expression -> expression POW expression .)
    ADD             reduce using rule 39 (expression -> expression POW expression .)
    REM             reduce using rule 39 (expression -> expression POW expression .)
    MUL             reduce using rule 39 (expression -> expression POW expression .)
    DIV             reduce using rule 39 (expression -> expression POW expression .)
    MOD             reduce using rule 39 (expression -> expression POW expression .)
    GT              reduce using rule 39 (expression -> expression POW expression .)
    LT              reduce using rule 39 (expression -> expression POW expression .)
    GE              reduce using rule 39 (expression -> expression POW expression .)
    LE              reduce using rule 39 (expression -> expression POW expression .)
    EQ              reduce using rule 39 (expression -> expression POW expression .)
    NE              reduce using rule 39 (expression -> expression POW expression .)
    POW             reduce using rule 39 (expression -> expression POW expression .)
    RPAREN          reduce using rule 39 (expression -> expression POW expression .)
    COLON           reduce using rule 39 (expression -> expression POW expression .)
    AND             reduce using rule 39 (expression -> expression POW expression .)
    OR              reduce using rule 39 (expression -> expression POW expression .)
    ELSE            reduce using rule 39 (expression -> expression POW expression .)
    COMMA           reduce using rule 39 (expression -> expression POW expression .)
    IF              reduce using rule 39 (expression -> expression POW expression .)

  ! ADD             [ shift and go to state 24 ]
  ! REM             [ shift and go to state 25 ]
  ! MUL             [ shift and go to state 26 ]
  ! DIV             [ shift and go to state 27 ]
  ! MOD             [ shift and go to state 28 ]
  ! GT              [ shift and go to state 29 ]
  ! LT              [ shift and go to state 30 ]
  ! GE              [ shift and go to state 31 ]
  ! LE              [ shift and go to state 32 ]
  ! EQ              [ shift and go to state 33 ]
  ! NE              [ shift and go to state 34 ]
  ! POW             [ shift and go to state 35 ]


state 58

    (9) line_statement -> FOR ID IN . range COLON statement SPLIT
    (8) range -> . RANGE LPAREN expr_list RPAREN

    RANGE           shift and go to state 72

    range                          shift and go to state 71

state 59

    (15) line_statement -> ID ASSIGN expression . SPLIT
    (11) if_assign -> ID ASSIGN expression .
    (28) expression -> expression . ADD expression
    (29) expression -> expression . REM expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . MOD expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . LT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . LE expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NE expression
    (39) expression -> expression . POW expression
    (19) condition_list -> expression .

  ! shift/reduce conflict for SPLIT resolved as shift
    SPLIT           shift and go to state 73
    IF              reduce using rule 11 (if_assign -> ID ASSIGN expression .)
    ADD             shift and go to state 24
    REM             shift and go to state 25
    MUL             shift and go to state 26
    DIV             shift and go to state 27
    MOD             shift and go to state 28
    GT              shift and go to state 29
    LT              shift and go to state 30
    GE              shift and go to state 31
    LE              shift and go to state 32
    EQ              shift and go to state 33
    NE              shift and go to state 34
    POW             shift and go to state 35
    AND             reduce using rule 19 (condition_list -> expression .)
    OR              reduce using rule 19 (condition_list -> expression .)

  ! SPLIT           [ reduce using rule 19 (condition_list -> expression .) ]


state 60

    (16) line_statement -> ID ASSIGN condition_list . SPLIT
    (20) condition_list -> condition_list . AND expression
    (21) condition_list -> condition_list . OR expression

    SPLIT           shift and go to state 74
    AND             shift and go to state 63
    OR              shift and go to state 64


state 61

    (40) expression -> LPAREN . expression RPAREN
    (22) condition_list -> LPAREN . condition_list RPAREN
    (23) expression -> . TRUE
    (24) expression -> . FALSE
    (25) expression -> . ID
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . expression ADD expression
    (29) expression -> . expression REM expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression MOD expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression LT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression LE expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression POW expression
    (40) expression -> . LPAREN expression RPAREN
    (19) condition_list -> . expression
    (20) condition_list -> . condition_list AND expression
    (21) condition_list -> . condition_list OR expression
    (22) condition_list -> . LPAREN condition_list RPAREN

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    ID              shift and go to state 22
    NUMBER          shift and go to state 16
    STRING          shift and go to state 17
    LPAREN          shift and go to state 61

    expression                     shift and go to state 75
    condition_list                 shift and go to state 65

state 62

    (13) line_statement -> IF condition_list COLON . statement SPLIT
    (14) line_statement -> IF condition_list COLON . SPLIT statement SPLIT
    (7) statement -> . PRINT LPAREN expr_list RPAREN

    SPLIT           shift and go to state 77
    PRINT           shift and go to state 7

    statement                      shift and go to state 76

state 63

    (20) condition_list -> condition_list AND . expression
    (23) expression -> . TRUE
    (24) expression -> . FALSE
    (25) expression -> . ID
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . expression ADD expression
    (29) expression -> . expression REM expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression MOD expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression LT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression LE expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression POW expression
    (40) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    ID              shift and go to state 22
    NUMBER          shift and go to state 16
    STRING          shift and go to state 17
    LPAREN          shift and go to state 8

    expression                     shift and go to state 78

state 64

    (21) condition_list -> condition_list OR . expression
    (23) expression -> . TRUE
    (24) expression -> . FALSE
    (25) expression -> . ID
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . expression ADD expression
    (29) expression -> . expression REM expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression MOD expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression LT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression LE expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression POW expression
    (40) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    ID              shift and go to state 22
    NUMBER          shift and go to state 16
    STRING          shift and go to state 17
    LPAREN          shift and go to state 8

    expression                     shift and go to state 79

state 65

    (22) condition_list -> LPAREN condition_list . RPAREN
    (20) condition_list -> condition_list . AND expression
    (21) condition_list -> condition_list . OR expression

    RPAREN          shift and go to state 80
    AND             shift and go to state 63
    OR              shift and go to state 64


state 66

    (40) expression -> LPAREN expression . RPAREN
    (19) condition_list -> expression .
    (28) expression -> expression . ADD expression
    (29) expression -> expression . REM expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . MOD expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . LT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . LE expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NE expression
    (39) expression -> expression . POW expression

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 45
    AND             reduce using rule 19 (condition_list -> expression .)
    OR              reduce using rule 19 (condition_list -> expression .)
    ADD             shift and go to state 24
    REM             shift and go to state 25
    MUL             shift and go to state 26
    DIV             shift and go to state 27
    MOD             shift and go to state 28
    GT              shift and go to state 29
    LT              shift and go to state 30
    GE              shift and go to state 31
    LE              shift and go to state 32
    EQ              shift and go to state 33
    NE              shift and go to state 34
    POW             shift and go to state 35

  ! RPAREN          [ reduce using rule 19 (condition_list -> expression .) ]


state 67

    (12) line_statement -> if_assign IF condition_list . ELSE expression SPLIT
    (20) condition_list -> condition_list . AND expression
    (21) condition_list -> condition_list . OR expression

    ELSE            shift and go to state 81
    AND             shift and go to state 63
    OR              shift and go to state 64


state 68

    (10) line_statement -> statement IF condition_list ELSE . statement SPLIT
    (7) statement -> . PRINT LPAREN expr_list RPAREN

    PRINT           shift and go to state 7

    statement                      shift and go to state 82

state 69

    (7) statement -> PRINT LPAREN expr_list RPAREN .

    SPLIT           reduce using rule 7 (statement -> PRINT LPAREN expr_list RPAREN .)
    IF              reduce using rule 7 (statement -> PRINT LPAREN expr_list RPAREN .)


state 70

    (18) expr_list -> expr_list COMMA . expression
    (23) expression -> . TRUE
    (24) expression -> . FALSE
    (25) expression -> . ID
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . expression ADD expression
    (29) expression -> . expression REM expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression MOD expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression LT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression LE expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression POW expression
    (40) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    ID              shift and go to state 22
    NUMBER          shift and go to state 16
    STRING          shift and go to state 17
    LPAREN          shift and go to state 8

    expression                     shift and go to state 83

state 71

    (9) line_statement -> FOR ID IN range . COLON statement SPLIT

    COLON           shift and go to state 84


state 72

    (8) range -> RANGE . LPAREN expr_list RPAREN

    LPAREN          shift and go to state 85


state 73

    (15) line_statement -> ID ASSIGN expression SPLIT .

    PRINT           reduce using rule 15 (line_statement -> ID ASSIGN expression SPLIT .)
    SPLIT           reduce using rule 15 (line_statement -> ID ASSIGN expression SPLIT .)
    FOR             reduce using rule 15 (line_statement -> ID ASSIGN expression SPLIT .)
    IF              reduce using rule 15 (line_statement -> ID ASSIGN expression SPLIT .)
    ID              reduce using rule 15 (line_statement -> ID ASSIGN expression SPLIT .)
    TRUE            reduce using rule 15 (line_statement -> ID ASSIGN expression SPLIT .)
    FALSE           reduce using rule 15 (line_statement -> ID ASSIGN expression SPLIT .)
    NUMBER          reduce using rule 15 (line_statement -> ID ASSIGN expression SPLIT .)
    STRING          reduce using rule 15 (line_statement -> ID ASSIGN expression SPLIT .)
    LPAREN          reduce using rule 15 (line_statement -> ID ASSIGN expression SPLIT .)
    $end            reduce using rule 15 (line_statement -> ID ASSIGN expression SPLIT .)


state 74

    (16) line_statement -> ID ASSIGN condition_list SPLIT .

    PRINT           reduce using rule 16 (line_statement -> ID ASSIGN condition_list SPLIT .)
    SPLIT           reduce using rule 16 (line_statement -> ID ASSIGN condition_list SPLIT .)
    FOR             reduce using rule 16 (line_statement -> ID ASSIGN condition_list SPLIT .)
    IF              reduce using rule 16 (line_statement -> ID ASSIGN condition_list SPLIT .)
    ID              reduce using rule 16 (line_statement -> ID ASSIGN condition_list SPLIT .)
    TRUE            reduce using rule 16 (line_statement -> ID ASSIGN condition_list SPLIT .)
    FALSE           reduce using rule 16 (line_statement -> ID ASSIGN condition_list SPLIT .)
    NUMBER          reduce using rule 16 (line_statement -> ID ASSIGN condition_list SPLIT .)
    STRING          reduce using rule 16 (line_statement -> ID ASSIGN condition_list SPLIT .)
    LPAREN          reduce using rule 16 (line_statement -> ID ASSIGN condition_list SPLIT .)
    $end            reduce using rule 16 (line_statement -> ID ASSIGN condition_list SPLIT .)


state 75

    (40) expression -> LPAREN expression . RPAREN
    (28) expression -> expression . ADD expression
    (29) expression -> expression . REM expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . MOD expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . LT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . LE expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NE expression
    (39) expression -> expression . POW expression
    (19) condition_list -> expression .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 45
    ADD             shift and go to state 24
    REM             shift and go to state 25
    MUL             shift and go to state 26
    DIV             shift and go to state 27
    MOD             shift and go to state 28
    GT              shift and go to state 29
    LT              shift and go to state 30
    GE              shift and go to state 31
    LE              shift and go to state 32
    EQ              shift and go to state 33
    NE              shift and go to state 34
    POW             shift and go to state 35
    AND             reduce using rule 19 (condition_list -> expression .)
    OR              reduce using rule 19 (condition_list -> expression .)

  ! RPAREN          [ reduce using rule 19 (condition_list -> expression .) ]


state 76

    (13) line_statement -> IF condition_list COLON statement . SPLIT

    SPLIT           shift and go to state 86


state 77

    (14) line_statement -> IF condition_list COLON SPLIT . statement SPLIT
    (7) statement -> . PRINT LPAREN expr_list RPAREN

    PRINT           shift and go to state 7

    statement                      shift and go to state 87

state 78

    (20) condition_list -> condition_list AND expression .
    (28) expression -> expression . ADD expression
    (29) expression -> expression . REM expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . MOD expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . LT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . LE expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NE expression
    (39) expression -> expression . POW expression

    COLON           reduce using rule 20 (condition_list -> condition_list AND expression .)
    AND             reduce using rule 20 (condition_list -> condition_list AND expression .)
    OR              reduce using rule 20 (condition_list -> condition_list AND expression .)
    ELSE            reduce using rule 20 (condition_list -> condition_list AND expression .)
    SPLIT           reduce using rule 20 (condition_list -> condition_list AND expression .)
    RPAREN          reduce using rule 20 (condition_list -> condition_list AND expression .)
    ADD             shift and go to state 24
    REM             shift and go to state 25
    MUL             shift and go to state 26
    DIV             shift and go to state 27
    MOD             shift and go to state 28
    GT              shift and go to state 29
    LT              shift and go to state 30
    GE              shift and go to state 31
    LE              shift and go to state 32
    EQ              shift and go to state 33
    NE              shift and go to state 34
    POW             shift and go to state 35


state 79

    (21) condition_list -> condition_list OR expression .
    (28) expression -> expression . ADD expression
    (29) expression -> expression . REM expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . MOD expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . LT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . LE expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NE expression
    (39) expression -> expression . POW expression

    COLON           reduce using rule 21 (condition_list -> condition_list OR expression .)
    AND             reduce using rule 21 (condition_list -> condition_list OR expression .)
    OR              reduce using rule 21 (condition_list -> condition_list OR expression .)
    ELSE            reduce using rule 21 (condition_list -> condition_list OR expression .)
    SPLIT           reduce using rule 21 (condition_list -> condition_list OR expression .)
    RPAREN          reduce using rule 21 (condition_list -> condition_list OR expression .)
    ADD             shift and go to state 24
    REM             shift and go to state 25
    MUL             shift and go to state 26
    DIV             shift and go to state 27
    MOD             shift and go to state 28
    GT              shift and go to state 29
    LT              shift and go to state 30
    GE              shift and go to state 31
    LE              shift and go to state 32
    EQ              shift and go to state 33
    NE              shift and go to state 34
    POW             shift and go to state 35


state 80

    (22) condition_list -> LPAREN condition_list RPAREN .

    COLON           reduce using rule 22 (condition_list -> LPAREN condition_list RPAREN .)
    AND             reduce using rule 22 (condition_list -> LPAREN condition_list RPAREN .)
    OR              reduce using rule 22 (condition_list -> LPAREN condition_list RPAREN .)
    ELSE            reduce using rule 22 (condition_list -> LPAREN condition_list RPAREN .)
    SPLIT           reduce using rule 22 (condition_list -> LPAREN condition_list RPAREN .)
    RPAREN          reduce using rule 22 (condition_list -> LPAREN condition_list RPAREN .)


state 81

    (12) line_statement -> if_assign IF condition_list ELSE . expression SPLIT
    (23) expression -> . TRUE
    (24) expression -> . FALSE
    (25) expression -> . ID
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . expression ADD expression
    (29) expression -> . expression REM expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression MOD expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression LT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression LE expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression POW expression
    (40) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    ID              shift and go to state 22
    NUMBER          shift and go to state 16
    STRING          shift and go to state 17
    LPAREN          shift and go to state 8

    expression                     shift and go to state 88

state 82

    (10) line_statement -> statement IF condition_list ELSE statement . SPLIT

    SPLIT           shift and go to state 89


state 83

    (18) expr_list -> expr_list COMMA expression .
    (28) expression -> expression . ADD expression
    (29) expression -> expression . REM expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . MOD expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . LT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . LE expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NE expression
    (39) expression -> expression . POW expression

    RPAREN          reduce using rule 18 (expr_list -> expr_list COMMA expression .)
    COMMA           reduce using rule 18 (expr_list -> expr_list COMMA expression .)
    ADD             shift and go to state 24
    REM             shift and go to state 25
    MUL             shift and go to state 26
    DIV             shift and go to state 27
    MOD             shift and go to state 28
    GT              shift and go to state 29
    LT              shift and go to state 30
    GE              shift and go to state 31
    LE              shift and go to state 32
    EQ              shift and go to state 33
    NE              shift and go to state 34
    POW             shift and go to state 35


state 84

    (9) line_statement -> FOR ID IN range COLON . statement SPLIT
    (7) statement -> . PRINT LPAREN expr_list RPAREN

    PRINT           shift and go to state 7

    statement                      shift and go to state 90

state 85

    (8) range -> RANGE LPAREN . expr_list RPAREN
    (17) expr_list -> . expression
    (18) expr_list -> . expr_list COMMA expression
    (23) expression -> . TRUE
    (24) expression -> . FALSE
    (25) expression -> . ID
    (26) expression -> . NUMBER
    (27) expression -> . STRING
    (28) expression -> . expression ADD expression
    (29) expression -> . expression REM expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression MOD expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression LT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression LE expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression POW expression
    (40) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    ID              shift and go to state 22
    NUMBER          shift and go to state 16
    STRING          shift and go to state 17
    LPAREN          shift and go to state 8

    expr_list                      shift and go to state 91
    expression                     shift and go to state 44

state 86

    (13) line_statement -> IF condition_list COLON statement SPLIT .

    PRINT           reduce using rule 13 (line_statement -> IF condition_list COLON statement SPLIT .)
    SPLIT           reduce using rule 13 (line_statement -> IF condition_list COLON statement SPLIT .)
    FOR             reduce using rule 13 (line_statement -> IF condition_list COLON statement SPLIT .)
    IF              reduce using rule 13 (line_statement -> IF condition_list COLON statement SPLIT .)
    ID              reduce using rule 13 (line_statement -> IF condition_list COLON statement SPLIT .)
    TRUE            reduce using rule 13 (line_statement -> IF condition_list COLON statement SPLIT .)
    FALSE           reduce using rule 13 (line_statement -> IF condition_list COLON statement SPLIT .)
    NUMBER          reduce using rule 13 (line_statement -> IF condition_list COLON statement SPLIT .)
    STRING          reduce using rule 13 (line_statement -> IF condition_list COLON statement SPLIT .)
    LPAREN          reduce using rule 13 (line_statement -> IF condition_list COLON statement SPLIT .)
    $end            reduce using rule 13 (line_statement -> IF condition_list COLON statement SPLIT .)


state 87

    (14) line_statement -> IF condition_list COLON SPLIT statement . SPLIT

    SPLIT           shift and go to state 92


state 88

    (12) line_statement -> if_assign IF condition_list ELSE expression . SPLIT
    (28) expression -> expression . ADD expression
    (29) expression -> expression . REM expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . MOD expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . LT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . LE expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NE expression
    (39) expression -> expression . POW expression

    SPLIT           shift and go to state 93
    ADD             shift and go to state 24
    REM             shift and go to state 25
    MUL             shift and go to state 26
    DIV             shift and go to state 27
    MOD             shift and go to state 28
    GT              shift and go to state 29
    LT              shift and go to state 30
    GE              shift and go to state 31
    LE              shift and go to state 32
    EQ              shift and go to state 33
    NE              shift and go to state 34
    POW             shift and go to state 35


state 89

    (10) line_statement -> statement IF condition_list ELSE statement SPLIT .

    PRINT           reduce using rule 10 (line_statement -> statement IF condition_list ELSE statement SPLIT .)
    SPLIT           reduce using rule 10 (line_statement -> statement IF condition_list ELSE statement SPLIT .)
    FOR             reduce using rule 10 (line_statement -> statement IF condition_list ELSE statement SPLIT .)
    IF              reduce using rule 10 (line_statement -> statement IF condition_list ELSE statement SPLIT .)
    ID              reduce using rule 10 (line_statement -> statement IF condition_list ELSE statement SPLIT .)
    TRUE            reduce using rule 10 (line_statement -> statement IF condition_list ELSE statement SPLIT .)
    FALSE           reduce using rule 10 (line_statement -> statement IF condition_list ELSE statement SPLIT .)
    NUMBER          reduce using rule 10 (line_statement -> statement IF condition_list ELSE statement SPLIT .)
    STRING          reduce using rule 10 (line_statement -> statement IF condition_list ELSE statement SPLIT .)
    LPAREN          reduce using rule 10 (line_statement -> statement IF condition_list ELSE statement SPLIT .)
    $end            reduce using rule 10 (line_statement -> statement IF condition_list ELSE statement SPLIT .)


state 90

    (9) line_statement -> FOR ID IN range COLON statement . SPLIT

    SPLIT           shift and go to state 94


state 91

    (8) range -> RANGE LPAREN expr_list . RPAREN
    (18) expr_list -> expr_list . COMMA expression

    RPAREN          shift and go to state 95
    COMMA           shift and go to state 70


state 92

    (14) line_statement -> IF condition_list COLON SPLIT statement SPLIT .

    PRINT           reduce using rule 14 (line_statement -> IF condition_list COLON SPLIT statement SPLIT .)
    SPLIT           reduce using rule 14 (line_statement -> IF condition_list COLON SPLIT statement SPLIT .)
    FOR             reduce using rule 14 (line_statement -> IF condition_list COLON SPLIT statement SPLIT .)
    IF              reduce using rule 14 (line_statement -> IF condition_list COLON SPLIT statement SPLIT .)
    ID              reduce using rule 14 (line_statement -> IF condition_list COLON SPLIT statement SPLIT .)
    TRUE            reduce using rule 14 (line_statement -> IF condition_list COLON SPLIT statement SPLIT .)
    FALSE           reduce using rule 14 (line_statement -> IF condition_list COLON SPLIT statement SPLIT .)
    NUMBER          reduce using rule 14 (line_statement -> IF condition_list COLON SPLIT statement SPLIT .)
    STRING          reduce using rule 14 (line_statement -> IF condition_list COLON SPLIT statement SPLIT .)
    LPAREN          reduce using rule 14 (line_statement -> IF condition_list COLON SPLIT statement SPLIT .)
    $end            reduce using rule 14 (line_statement -> IF condition_list COLON SPLIT statement SPLIT .)


state 93

    (12) line_statement -> if_assign IF condition_list ELSE expression SPLIT .

    PRINT           reduce using rule 12 (line_statement -> if_assign IF condition_list ELSE expression SPLIT .)
    SPLIT           reduce using rule 12 (line_statement -> if_assign IF condition_list ELSE expression SPLIT .)
    FOR             reduce using rule 12 (line_statement -> if_assign IF condition_list ELSE expression SPLIT .)
    IF              reduce using rule 12 (line_statement -> if_assign IF condition_list ELSE expression SPLIT .)
    ID              reduce using rule 12 (line_statement -> if_assign IF condition_list ELSE expression SPLIT .)
    TRUE            reduce using rule 12 (line_statement -> if_assign IF condition_list ELSE expression SPLIT .)
    FALSE           reduce using rule 12 (line_statement -> if_assign IF condition_list ELSE expression SPLIT .)
    NUMBER          reduce using rule 12 (line_statement -> if_assign IF condition_list ELSE expression SPLIT .)
    STRING          reduce using rule 12 (line_statement -> if_assign IF condition_list ELSE expression SPLIT .)
    LPAREN          reduce using rule 12 (line_statement -> if_assign IF condition_list ELSE expression SPLIT .)
    $end            reduce using rule 12 (line_statement -> if_assign IF condition_list ELSE expression SPLIT .)


state 94

    (9) line_statement -> FOR ID IN range COLON statement SPLIT .

    PRINT           reduce using rule 9 (line_statement -> FOR ID IN range COLON statement SPLIT .)
    SPLIT           reduce using rule 9 (line_statement -> FOR ID IN range COLON statement SPLIT .)
    FOR             reduce using rule 9 (line_statement -> FOR ID IN range COLON statement SPLIT .)
    IF              reduce using rule 9 (line_statement -> FOR ID IN range COLON statement SPLIT .)
    ID              reduce using rule 9 (line_statement -> FOR ID IN range COLON statement SPLIT .)
    TRUE            reduce using rule 9 (line_statement -> FOR ID IN range COLON statement SPLIT .)
    FALSE           reduce using rule 9 (line_statement -> FOR ID IN range COLON statement SPLIT .)
    NUMBER          reduce using rule 9 (line_statement -> FOR ID IN range COLON statement SPLIT .)
    STRING          reduce using rule 9 (line_statement -> FOR ID IN range COLON statement SPLIT .)
    LPAREN          reduce using rule 9 (line_statement -> FOR ID IN range COLON statement SPLIT .)
    $end            reduce using rule 9 (line_statement -> FOR ID IN range COLON statement SPLIT .)


state 95

    (8) range -> RANGE LPAREN expr_list RPAREN .

    COLON           reduce using rule 8 (range -> RANGE LPAREN expr_list RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SPLIT in state 59 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 66 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 75 resolved as shift
