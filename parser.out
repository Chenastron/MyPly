Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> function
Rule 2     function -> function statement SPLIT
Rule 3     function -> function line_statement
Rule 4     function -> empty
Rule 5     line_statement -> SPLIT
Rule 6     line_statement -> expression SPLIT
Rule 7     statement -> PRINT LPAREN expr_list RPAREN
Rule 8     line_statement -> statement IF condition_list ELSE statement SPLIT
Rule 9     if_assign -> ID ASSIGN expression
Rule 10    line_statement -> if_assign IF condition_list ELSE expression SPLIT
Rule 11    line_statement -> IF condition_list COLON statement SPLIT
Rule 12    line_statement -> IF condition_list COLON SPLIT statement SPLIT
Rule 13    line_statement -> ID ASSIGN expression SPLIT
Rule 14    line_statement -> ID ASSIGN condition_list SPLIT
Rule 15    expr_list -> expression
Rule 16    expr_list -> expr_list COMMA expression
Rule 17    condition_list -> expression
Rule 18    condition_list -> condition_list AND expression
Rule 19    condition_list -> condition_list OR expression
Rule 20    condition_list -> LPAREN condition_list RPAREN
Rule 21    expression -> TRUE
Rule 22    expression -> FALSE
Rule 23    expression -> ID
Rule 24    expression -> NUMBER
Rule 25    expression -> STRING
Rule 26    expression -> expression ADD expression
Rule 27    expression -> expression REM expression
Rule 28    expression -> expression MUL expression
Rule 29    expression -> expression DIV expression
Rule 30    expression -> expression MOD expression
Rule 31    expression -> expression GT expression
Rule 32    expression -> expression LT expression
Rule 33    expression -> expression GE expression
Rule 34    expression -> expression LE expression
Rule 35    expression -> expression EQ expression
Rule 36    expression -> expression NE expression
Rule 37    expression -> expression POW expression
Rule 38    expression -> LPAREN expression RPAREN
Rule 39    empty -> <empty>

Terminals, with rules where they appear

ADD                  : 26
AND                  : 18
ASSIGN               : 9 13 14
COLON                : 11 12
COMMA                : 16
DIV                  : 29
ELSE                 : 8 10
EQ                   : 35
FALSE                : 22
GE                   : 33
GT                   : 31
ID                   : 9 13 14 23
IF                   : 8 10 11 12
LE                   : 34
LPAREN               : 7 20 38
LT                   : 32
MOD                  : 30
MUL                  : 28
NE                   : 36
NUMBER               : 24
OR                   : 19
POW                  : 37
PRINT                : 7
REM                  : 27
RPAREN               : 7 20 38
SPLIT                : 2 5 6 8 10 11 12 12 13 14
STRING               : 25
TRUE                 : 21
error                : 

Nonterminals, with rules where they appear

condition_list       : 8 10 11 12 14 18 19 20
empty                : 4
expr_list            : 7 16
expression           : 6 9 10 13 15 16 17 18 19 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38
function             : 1 2 3
if_assign            : 10
line_statement       : 3
start                : 0
statement            : 2 8 8 11 12

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . function
    (2) function -> . function statement SPLIT
    (3) function -> . function line_statement
    (4) function -> . empty
    (39) empty -> .

    PRINT           reduce using rule 39 (empty -> .)
    SPLIT           reduce using rule 39 (empty -> .)
    IF              reduce using rule 39 (empty -> .)
    ID              reduce using rule 39 (empty -> .)
    TRUE            reduce using rule 39 (empty -> .)
    FALSE           reduce using rule 39 (empty -> .)
    NUMBER          reduce using rule 39 (empty -> .)
    STRING          reduce using rule 39 (empty -> .)
    LPAREN          reduce using rule 39 (empty -> .)
    $end            reduce using rule 39 (empty -> .)

    start                          shift and go to state 1
    function                       shift and go to state 2
    empty                          shift and go to state 3

state 1

    (0) S' -> start .



state 2

    (1) start -> function .
    (2) function -> function . statement SPLIT
    (3) function -> function . line_statement
    (7) statement -> . PRINT LPAREN expr_list RPAREN
    (5) line_statement -> . SPLIT
    (6) line_statement -> . expression SPLIT
    (8) line_statement -> . statement IF condition_list ELSE statement SPLIT
    (10) line_statement -> . if_assign IF condition_list ELSE expression SPLIT
    (11) line_statement -> . IF condition_list COLON statement SPLIT
    (12) line_statement -> . IF condition_list COLON SPLIT statement SPLIT
    (13) line_statement -> . ID ASSIGN expression SPLIT
    (14) line_statement -> . ID ASSIGN condition_list SPLIT
    (21) expression -> . TRUE
    (22) expression -> . FALSE
    (23) expression -> . ID
    (24) expression -> . NUMBER
    (25) expression -> . STRING
    (26) expression -> . expression ADD expression
    (27) expression -> . expression REM expression
    (28) expression -> . expression MUL expression
    (29) expression -> . expression DIV expression
    (30) expression -> . expression MOD expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression LE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression POW expression
    (38) expression -> . LPAREN expression RPAREN
    (9) if_assign -> . ID ASSIGN expression

    $end            reduce using rule 1 (start -> function .)
    PRINT           shift and go to state 7
    SPLIT           shift and go to state 5
    IF              shift and go to state 10
    ID              shift and go to state 12
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    NUMBER          shift and go to state 15
    STRING          shift and go to state 16
    LPAREN          shift and go to state 8

    statement                      shift and go to state 4
    line_statement                 shift and go to state 6
    expression                     shift and go to state 9
    if_assign                      shift and go to state 11

state 3

    (4) function -> empty .

    PRINT           reduce using rule 4 (function -> empty .)
    SPLIT           reduce using rule 4 (function -> empty .)
    IF              reduce using rule 4 (function -> empty .)
    ID              reduce using rule 4 (function -> empty .)
    TRUE            reduce using rule 4 (function -> empty .)
    FALSE           reduce using rule 4 (function -> empty .)
    NUMBER          reduce using rule 4 (function -> empty .)
    STRING          reduce using rule 4 (function -> empty .)
    LPAREN          reduce using rule 4 (function -> empty .)
    $end            reduce using rule 4 (function -> empty .)


state 4

    (2) function -> function statement . SPLIT
    (8) line_statement -> statement . IF condition_list ELSE statement SPLIT

    SPLIT           shift and go to state 17
    IF              shift and go to state 18


state 5

    (5) line_statement -> SPLIT .

    PRINT           reduce using rule 5 (line_statement -> SPLIT .)
    SPLIT           reduce using rule 5 (line_statement -> SPLIT .)
    IF              reduce using rule 5 (line_statement -> SPLIT .)
    ID              reduce using rule 5 (line_statement -> SPLIT .)
    TRUE            reduce using rule 5 (line_statement -> SPLIT .)
    FALSE           reduce using rule 5 (line_statement -> SPLIT .)
    NUMBER          reduce using rule 5 (line_statement -> SPLIT .)
    STRING          reduce using rule 5 (line_statement -> SPLIT .)
    LPAREN          reduce using rule 5 (line_statement -> SPLIT .)
    $end            reduce using rule 5 (line_statement -> SPLIT .)


state 6

    (3) function -> function line_statement .

    PRINT           reduce using rule 3 (function -> function line_statement .)
    SPLIT           reduce using rule 3 (function -> function line_statement .)
    IF              reduce using rule 3 (function -> function line_statement .)
    ID              reduce using rule 3 (function -> function line_statement .)
    TRUE            reduce using rule 3 (function -> function line_statement .)
    FALSE           reduce using rule 3 (function -> function line_statement .)
    NUMBER          reduce using rule 3 (function -> function line_statement .)
    STRING          reduce using rule 3 (function -> function line_statement .)
    LPAREN          reduce using rule 3 (function -> function line_statement .)
    $end            reduce using rule 3 (function -> function line_statement .)


state 7

    (7) statement -> PRINT . LPAREN expr_list RPAREN

    LPAREN          shift and go to state 19


state 8

    (38) expression -> LPAREN . expression RPAREN
    (21) expression -> . TRUE
    (22) expression -> . FALSE
    (23) expression -> . ID
    (24) expression -> . NUMBER
    (25) expression -> . STRING
    (26) expression -> . expression ADD expression
    (27) expression -> . expression REM expression
    (28) expression -> . expression MUL expression
    (29) expression -> . expression DIV expression
    (30) expression -> . expression MOD expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression LE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression POW expression
    (38) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    ID              shift and go to state 21
    NUMBER          shift and go to state 15
    STRING          shift and go to state 16
    LPAREN          shift and go to state 8

    expression                     shift and go to state 20

state 9

    (6) line_statement -> expression . SPLIT
    (26) expression -> expression . ADD expression
    (27) expression -> expression . REM expression
    (28) expression -> expression . MUL expression
    (29) expression -> expression . DIV expression
    (30) expression -> expression . MOD expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . LE expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . POW expression

    SPLIT           shift and go to state 22
    ADD             shift and go to state 23
    REM             shift and go to state 24
    MUL             shift and go to state 25
    DIV             shift and go to state 26
    MOD             shift and go to state 27
    GT              shift and go to state 28
    LT              shift and go to state 29
    GE              shift and go to state 30
    LE              shift and go to state 31
    EQ              shift and go to state 32
    NE              shift and go to state 33
    POW             shift and go to state 34


state 10

    (11) line_statement -> IF . condition_list COLON statement SPLIT
    (12) line_statement -> IF . condition_list COLON SPLIT statement SPLIT
    (17) condition_list -> . expression
    (18) condition_list -> . condition_list AND expression
    (19) condition_list -> . condition_list OR expression
    (20) condition_list -> . LPAREN condition_list RPAREN
    (21) expression -> . TRUE
    (22) expression -> . FALSE
    (23) expression -> . ID
    (24) expression -> . NUMBER
    (25) expression -> . STRING
    (26) expression -> . expression ADD expression
    (27) expression -> . expression REM expression
    (28) expression -> . expression MUL expression
    (29) expression -> . expression DIV expression
    (30) expression -> . expression MOD expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression LE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression POW expression
    (38) expression -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 37
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    ID              shift and go to state 21
    NUMBER          shift and go to state 15
    STRING          shift and go to state 16

    condition_list                 shift and go to state 35
    expression                     shift and go to state 36

state 11

    (10) line_statement -> if_assign . IF condition_list ELSE expression SPLIT

    IF              shift and go to state 38


state 12

    (13) line_statement -> ID . ASSIGN expression SPLIT
    (14) line_statement -> ID . ASSIGN condition_list SPLIT
    (23) expression -> ID .
    (9) if_assign -> ID . ASSIGN expression

    ASSIGN          shift and go to state 39
    SPLIT           reduce using rule 23 (expression -> ID .)
    ADD             reduce using rule 23 (expression -> ID .)
    REM             reduce using rule 23 (expression -> ID .)
    MUL             reduce using rule 23 (expression -> ID .)
    DIV             reduce using rule 23 (expression -> ID .)
    MOD             reduce using rule 23 (expression -> ID .)
    GT              reduce using rule 23 (expression -> ID .)
    LT              reduce using rule 23 (expression -> ID .)
    GE              reduce using rule 23 (expression -> ID .)
    LE              reduce using rule 23 (expression -> ID .)
    EQ              reduce using rule 23 (expression -> ID .)
    NE              reduce using rule 23 (expression -> ID .)
    POW             reduce using rule 23 (expression -> ID .)


state 13

    (21) expression -> TRUE .

    SPLIT           reduce using rule 21 (expression -> TRUE .)
    ADD             reduce using rule 21 (expression -> TRUE .)
    REM             reduce using rule 21 (expression -> TRUE .)
    MUL             reduce using rule 21 (expression -> TRUE .)
    DIV             reduce using rule 21 (expression -> TRUE .)
    MOD             reduce using rule 21 (expression -> TRUE .)
    GT              reduce using rule 21 (expression -> TRUE .)
    LT              reduce using rule 21 (expression -> TRUE .)
    GE              reduce using rule 21 (expression -> TRUE .)
    LE              reduce using rule 21 (expression -> TRUE .)
    EQ              reduce using rule 21 (expression -> TRUE .)
    NE              reduce using rule 21 (expression -> TRUE .)
    POW             reduce using rule 21 (expression -> TRUE .)
    RPAREN          reduce using rule 21 (expression -> TRUE .)
    COLON           reduce using rule 21 (expression -> TRUE .)
    AND             reduce using rule 21 (expression -> TRUE .)
    OR              reduce using rule 21 (expression -> TRUE .)
    ELSE            reduce using rule 21 (expression -> TRUE .)
    COMMA           reduce using rule 21 (expression -> TRUE .)
    IF              reduce using rule 21 (expression -> TRUE .)


state 14

    (22) expression -> FALSE .

    SPLIT           reduce using rule 22 (expression -> FALSE .)
    ADD             reduce using rule 22 (expression -> FALSE .)
    REM             reduce using rule 22 (expression -> FALSE .)
    MUL             reduce using rule 22 (expression -> FALSE .)
    DIV             reduce using rule 22 (expression -> FALSE .)
    MOD             reduce using rule 22 (expression -> FALSE .)
    GT              reduce using rule 22 (expression -> FALSE .)
    LT              reduce using rule 22 (expression -> FALSE .)
    GE              reduce using rule 22 (expression -> FALSE .)
    LE              reduce using rule 22 (expression -> FALSE .)
    EQ              reduce using rule 22 (expression -> FALSE .)
    NE              reduce using rule 22 (expression -> FALSE .)
    POW             reduce using rule 22 (expression -> FALSE .)
    RPAREN          reduce using rule 22 (expression -> FALSE .)
    COLON           reduce using rule 22 (expression -> FALSE .)
    AND             reduce using rule 22 (expression -> FALSE .)
    OR              reduce using rule 22 (expression -> FALSE .)
    ELSE            reduce using rule 22 (expression -> FALSE .)
    COMMA           reduce using rule 22 (expression -> FALSE .)
    IF              reduce using rule 22 (expression -> FALSE .)


state 15

    (24) expression -> NUMBER .

    SPLIT           reduce using rule 24 (expression -> NUMBER .)
    ADD             reduce using rule 24 (expression -> NUMBER .)
    REM             reduce using rule 24 (expression -> NUMBER .)
    MUL             reduce using rule 24 (expression -> NUMBER .)
    DIV             reduce using rule 24 (expression -> NUMBER .)
    MOD             reduce using rule 24 (expression -> NUMBER .)
    GT              reduce using rule 24 (expression -> NUMBER .)
    LT              reduce using rule 24 (expression -> NUMBER .)
    GE              reduce using rule 24 (expression -> NUMBER .)
    LE              reduce using rule 24 (expression -> NUMBER .)
    EQ              reduce using rule 24 (expression -> NUMBER .)
    NE              reduce using rule 24 (expression -> NUMBER .)
    POW             reduce using rule 24 (expression -> NUMBER .)
    RPAREN          reduce using rule 24 (expression -> NUMBER .)
    COLON           reduce using rule 24 (expression -> NUMBER .)
    AND             reduce using rule 24 (expression -> NUMBER .)
    OR              reduce using rule 24 (expression -> NUMBER .)
    ELSE            reduce using rule 24 (expression -> NUMBER .)
    COMMA           reduce using rule 24 (expression -> NUMBER .)
    IF              reduce using rule 24 (expression -> NUMBER .)


state 16

    (25) expression -> STRING .

    SPLIT           reduce using rule 25 (expression -> STRING .)
    ADD             reduce using rule 25 (expression -> STRING .)
    REM             reduce using rule 25 (expression -> STRING .)
    MUL             reduce using rule 25 (expression -> STRING .)
    DIV             reduce using rule 25 (expression -> STRING .)
    MOD             reduce using rule 25 (expression -> STRING .)
    GT              reduce using rule 25 (expression -> STRING .)
    LT              reduce using rule 25 (expression -> STRING .)
    GE              reduce using rule 25 (expression -> STRING .)
    LE              reduce using rule 25 (expression -> STRING .)
    EQ              reduce using rule 25 (expression -> STRING .)
    NE              reduce using rule 25 (expression -> STRING .)
    POW             reduce using rule 25 (expression -> STRING .)
    RPAREN          reduce using rule 25 (expression -> STRING .)
    COLON           reduce using rule 25 (expression -> STRING .)
    AND             reduce using rule 25 (expression -> STRING .)
    OR              reduce using rule 25 (expression -> STRING .)
    ELSE            reduce using rule 25 (expression -> STRING .)
    COMMA           reduce using rule 25 (expression -> STRING .)
    IF              reduce using rule 25 (expression -> STRING .)


state 17

    (2) function -> function statement SPLIT .

    PRINT           reduce using rule 2 (function -> function statement SPLIT .)
    SPLIT           reduce using rule 2 (function -> function statement SPLIT .)
    IF              reduce using rule 2 (function -> function statement SPLIT .)
    ID              reduce using rule 2 (function -> function statement SPLIT .)
    TRUE            reduce using rule 2 (function -> function statement SPLIT .)
    FALSE           reduce using rule 2 (function -> function statement SPLIT .)
    NUMBER          reduce using rule 2 (function -> function statement SPLIT .)
    STRING          reduce using rule 2 (function -> function statement SPLIT .)
    LPAREN          reduce using rule 2 (function -> function statement SPLIT .)
    $end            reduce using rule 2 (function -> function statement SPLIT .)


state 18

    (8) line_statement -> statement IF . condition_list ELSE statement SPLIT
    (17) condition_list -> . expression
    (18) condition_list -> . condition_list AND expression
    (19) condition_list -> . condition_list OR expression
    (20) condition_list -> . LPAREN condition_list RPAREN
    (21) expression -> . TRUE
    (22) expression -> . FALSE
    (23) expression -> . ID
    (24) expression -> . NUMBER
    (25) expression -> . STRING
    (26) expression -> . expression ADD expression
    (27) expression -> . expression REM expression
    (28) expression -> . expression MUL expression
    (29) expression -> . expression DIV expression
    (30) expression -> . expression MOD expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression LE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression POW expression
    (38) expression -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 37
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    ID              shift and go to state 21
    NUMBER          shift and go to state 15
    STRING          shift and go to state 16

    condition_list                 shift and go to state 40
    expression                     shift and go to state 36

state 19

    (7) statement -> PRINT LPAREN . expr_list RPAREN
    (15) expr_list -> . expression
    (16) expr_list -> . expr_list COMMA expression
    (21) expression -> . TRUE
    (22) expression -> . FALSE
    (23) expression -> . ID
    (24) expression -> . NUMBER
    (25) expression -> . STRING
    (26) expression -> . expression ADD expression
    (27) expression -> . expression REM expression
    (28) expression -> . expression MUL expression
    (29) expression -> . expression DIV expression
    (30) expression -> . expression MOD expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression LE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression POW expression
    (38) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    ID              shift and go to state 21
    NUMBER          shift and go to state 15
    STRING          shift and go to state 16
    LPAREN          shift and go to state 8

    expr_list                      shift and go to state 41
    expression                     shift and go to state 42

state 20

    (38) expression -> LPAREN expression . RPAREN
    (26) expression -> expression . ADD expression
    (27) expression -> expression . REM expression
    (28) expression -> expression . MUL expression
    (29) expression -> expression . DIV expression
    (30) expression -> expression . MOD expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . LE expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . POW expression

    RPAREN          shift and go to state 43
    ADD             shift and go to state 23
    REM             shift and go to state 24
    MUL             shift and go to state 25
    DIV             shift and go to state 26
    MOD             shift and go to state 27
    GT              shift and go to state 28
    LT              shift and go to state 29
    GE              shift and go to state 30
    LE              shift and go to state 31
    EQ              shift and go to state 32
    NE              shift and go to state 33
    POW             shift and go to state 34


state 21

    (23) expression -> ID .

    RPAREN          reduce using rule 23 (expression -> ID .)
    ADD             reduce using rule 23 (expression -> ID .)
    REM             reduce using rule 23 (expression -> ID .)
    MUL             reduce using rule 23 (expression -> ID .)
    DIV             reduce using rule 23 (expression -> ID .)
    MOD             reduce using rule 23 (expression -> ID .)
    GT              reduce using rule 23 (expression -> ID .)
    LT              reduce using rule 23 (expression -> ID .)
    GE              reduce using rule 23 (expression -> ID .)
    LE              reduce using rule 23 (expression -> ID .)
    EQ              reduce using rule 23 (expression -> ID .)
    NE              reduce using rule 23 (expression -> ID .)
    POW             reduce using rule 23 (expression -> ID .)
    COLON           reduce using rule 23 (expression -> ID .)
    AND             reduce using rule 23 (expression -> ID .)
    OR              reduce using rule 23 (expression -> ID .)
    ELSE            reduce using rule 23 (expression -> ID .)
    COMMA           reduce using rule 23 (expression -> ID .)
    SPLIT           reduce using rule 23 (expression -> ID .)
    IF              reduce using rule 23 (expression -> ID .)


state 22

    (6) line_statement -> expression SPLIT .

    PRINT           reduce using rule 6 (line_statement -> expression SPLIT .)
    SPLIT           reduce using rule 6 (line_statement -> expression SPLIT .)
    IF              reduce using rule 6 (line_statement -> expression SPLIT .)
    ID              reduce using rule 6 (line_statement -> expression SPLIT .)
    TRUE            reduce using rule 6 (line_statement -> expression SPLIT .)
    FALSE           reduce using rule 6 (line_statement -> expression SPLIT .)
    NUMBER          reduce using rule 6 (line_statement -> expression SPLIT .)
    STRING          reduce using rule 6 (line_statement -> expression SPLIT .)
    LPAREN          reduce using rule 6 (line_statement -> expression SPLIT .)
    $end            reduce using rule 6 (line_statement -> expression SPLIT .)


state 23

    (26) expression -> expression ADD . expression
    (21) expression -> . TRUE
    (22) expression -> . FALSE
    (23) expression -> . ID
    (24) expression -> . NUMBER
    (25) expression -> . STRING
    (26) expression -> . expression ADD expression
    (27) expression -> . expression REM expression
    (28) expression -> . expression MUL expression
    (29) expression -> . expression DIV expression
    (30) expression -> . expression MOD expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression LE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression POW expression
    (38) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    ID              shift and go to state 21
    NUMBER          shift and go to state 15
    STRING          shift and go to state 16
    LPAREN          shift and go to state 8

    expression                     shift and go to state 44

state 24

    (27) expression -> expression REM . expression
    (21) expression -> . TRUE
    (22) expression -> . FALSE
    (23) expression -> . ID
    (24) expression -> . NUMBER
    (25) expression -> . STRING
    (26) expression -> . expression ADD expression
    (27) expression -> . expression REM expression
    (28) expression -> . expression MUL expression
    (29) expression -> . expression DIV expression
    (30) expression -> . expression MOD expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression LE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression POW expression
    (38) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    ID              shift and go to state 21
    NUMBER          shift and go to state 15
    STRING          shift and go to state 16
    LPAREN          shift and go to state 8

    expression                     shift and go to state 45

state 25

    (28) expression -> expression MUL . expression
    (21) expression -> . TRUE
    (22) expression -> . FALSE
    (23) expression -> . ID
    (24) expression -> . NUMBER
    (25) expression -> . STRING
    (26) expression -> . expression ADD expression
    (27) expression -> . expression REM expression
    (28) expression -> . expression MUL expression
    (29) expression -> . expression DIV expression
    (30) expression -> . expression MOD expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression LE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression POW expression
    (38) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    ID              shift and go to state 21
    NUMBER          shift and go to state 15
    STRING          shift and go to state 16
    LPAREN          shift and go to state 8

    expression                     shift and go to state 46

state 26

    (29) expression -> expression DIV . expression
    (21) expression -> . TRUE
    (22) expression -> . FALSE
    (23) expression -> . ID
    (24) expression -> . NUMBER
    (25) expression -> . STRING
    (26) expression -> . expression ADD expression
    (27) expression -> . expression REM expression
    (28) expression -> . expression MUL expression
    (29) expression -> . expression DIV expression
    (30) expression -> . expression MOD expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression LE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression POW expression
    (38) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    ID              shift and go to state 21
    NUMBER          shift and go to state 15
    STRING          shift and go to state 16
    LPAREN          shift and go to state 8

    expression                     shift and go to state 47

state 27

    (30) expression -> expression MOD . expression
    (21) expression -> . TRUE
    (22) expression -> . FALSE
    (23) expression -> . ID
    (24) expression -> . NUMBER
    (25) expression -> . STRING
    (26) expression -> . expression ADD expression
    (27) expression -> . expression REM expression
    (28) expression -> . expression MUL expression
    (29) expression -> . expression DIV expression
    (30) expression -> . expression MOD expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression LE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression POW expression
    (38) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    ID              shift and go to state 21
    NUMBER          shift and go to state 15
    STRING          shift and go to state 16
    LPAREN          shift and go to state 8

    expression                     shift and go to state 48

state 28

    (31) expression -> expression GT . expression
    (21) expression -> . TRUE
    (22) expression -> . FALSE
    (23) expression -> . ID
    (24) expression -> . NUMBER
    (25) expression -> . STRING
    (26) expression -> . expression ADD expression
    (27) expression -> . expression REM expression
    (28) expression -> . expression MUL expression
    (29) expression -> . expression DIV expression
    (30) expression -> . expression MOD expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression LE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression POW expression
    (38) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    ID              shift and go to state 21
    NUMBER          shift and go to state 15
    STRING          shift and go to state 16
    LPAREN          shift and go to state 8

    expression                     shift and go to state 49

state 29

    (32) expression -> expression LT . expression
    (21) expression -> . TRUE
    (22) expression -> . FALSE
    (23) expression -> . ID
    (24) expression -> . NUMBER
    (25) expression -> . STRING
    (26) expression -> . expression ADD expression
    (27) expression -> . expression REM expression
    (28) expression -> . expression MUL expression
    (29) expression -> . expression DIV expression
    (30) expression -> . expression MOD expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression LE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression POW expression
    (38) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    ID              shift and go to state 21
    NUMBER          shift and go to state 15
    STRING          shift and go to state 16
    LPAREN          shift and go to state 8

    expression                     shift and go to state 50

state 30

    (33) expression -> expression GE . expression
    (21) expression -> . TRUE
    (22) expression -> . FALSE
    (23) expression -> . ID
    (24) expression -> . NUMBER
    (25) expression -> . STRING
    (26) expression -> . expression ADD expression
    (27) expression -> . expression REM expression
    (28) expression -> . expression MUL expression
    (29) expression -> . expression DIV expression
    (30) expression -> . expression MOD expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression LE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression POW expression
    (38) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    ID              shift and go to state 21
    NUMBER          shift and go to state 15
    STRING          shift and go to state 16
    LPAREN          shift and go to state 8

    expression                     shift and go to state 51

state 31

    (34) expression -> expression LE . expression
    (21) expression -> . TRUE
    (22) expression -> . FALSE
    (23) expression -> . ID
    (24) expression -> . NUMBER
    (25) expression -> . STRING
    (26) expression -> . expression ADD expression
    (27) expression -> . expression REM expression
    (28) expression -> . expression MUL expression
    (29) expression -> . expression DIV expression
    (30) expression -> . expression MOD expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression LE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression POW expression
    (38) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    ID              shift and go to state 21
    NUMBER          shift and go to state 15
    STRING          shift and go to state 16
    LPAREN          shift and go to state 8

    expression                     shift and go to state 52

state 32

    (35) expression -> expression EQ . expression
    (21) expression -> . TRUE
    (22) expression -> . FALSE
    (23) expression -> . ID
    (24) expression -> . NUMBER
    (25) expression -> . STRING
    (26) expression -> . expression ADD expression
    (27) expression -> . expression REM expression
    (28) expression -> . expression MUL expression
    (29) expression -> . expression DIV expression
    (30) expression -> . expression MOD expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression LE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression POW expression
    (38) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    ID              shift and go to state 21
    NUMBER          shift and go to state 15
    STRING          shift and go to state 16
    LPAREN          shift and go to state 8

    expression                     shift and go to state 53

state 33

    (36) expression -> expression NE . expression
    (21) expression -> . TRUE
    (22) expression -> . FALSE
    (23) expression -> . ID
    (24) expression -> . NUMBER
    (25) expression -> . STRING
    (26) expression -> . expression ADD expression
    (27) expression -> . expression REM expression
    (28) expression -> . expression MUL expression
    (29) expression -> . expression DIV expression
    (30) expression -> . expression MOD expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression LE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression POW expression
    (38) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    ID              shift and go to state 21
    NUMBER          shift and go to state 15
    STRING          shift and go to state 16
    LPAREN          shift and go to state 8

    expression                     shift and go to state 54

state 34

    (37) expression -> expression POW . expression
    (21) expression -> . TRUE
    (22) expression -> . FALSE
    (23) expression -> . ID
    (24) expression -> . NUMBER
    (25) expression -> . STRING
    (26) expression -> . expression ADD expression
    (27) expression -> . expression REM expression
    (28) expression -> . expression MUL expression
    (29) expression -> . expression DIV expression
    (30) expression -> . expression MOD expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression LE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression POW expression
    (38) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    ID              shift and go to state 21
    NUMBER          shift and go to state 15
    STRING          shift and go to state 16
    LPAREN          shift and go to state 8

    expression                     shift and go to state 55

state 35

    (11) line_statement -> IF condition_list . COLON statement SPLIT
    (12) line_statement -> IF condition_list . COLON SPLIT statement SPLIT
    (18) condition_list -> condition_list . AND expression
    (19) condition_list -> condition_list . OR expression

    COLON           shift and go to state 56
    AND             shift and go to state 57
    OR              shift and go to state 58


state 36

    (17) condition_list -> expression .
    (26) expression -> expression . ADD expression
    (27) expression -> expression . REM expression
    (28) expression -> expression . MUL expression
    (29) expression -> expression . DIV expression
    (30) expression -> expression . MOD expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . LE expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . POW expression

    COLON           reduce using rule 17 (condition_list -> expression .)
    AND             reduce using rule 17 (condition_list -> expression .)
    OR              reduce using rule 17 (condition_list -> expression .)
    ELSE            reduce using rule 17 (condition_list -> expression .)
    ADD             shift and go to state 23
    REM             shift and go to state 24
    MUL             shift and go to state 25
    DIV             shift and go to state 26
    MOD             shift and go to state 27
    GT              shift and go to state 28
    LT              shift and go to state 29
    GE              shift and go to state 30
    LE              shift and go to state 31
    EQ              shift and go to state 32
    NE              shift and go to state 33
    POW             shift and go to state 34


state 37

    (20) condition_list -> LPAREN . condition_list RPAREN
    (38) expression -> LPAREN . expression RPAREN
    (17) condition_list -> . expression
    (18) condition_list -> . condition_list AND expression
    (19) condition_list -> . condition_list OR expression
    (20) condition_list -> . LPAREN condition_list RPAREN
    (21) expression -> . TRUE
    (22) expression -> . FALSE
    (23) expression -> . ID
    (24) expression -> . NUMBER
    (25) expression -> . STRING
    (26) expression -> . expression ADD expression
    (27) expression -> . expression REM expression
    (28) expression -> . expression MUL expression
    (29) expression -> . expression DIV expression
    (30) expression -> . expression MOD expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression LE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression POW expression
    (38) expression -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 37
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    ID              shift and go to state 21
    NUMBER          shift and go to state 15
    STRING          shift and go to state 16

    condition_list                 shift and go to state 59
    expression                     shift and go to state 60

state 38

    (10) line_statement -> if_assign IF . condition_list ELSE expression SPLIT
    (17) condition_list -> . expression
    (18) condition_list -> . condition_list AND expression
    (19) condition_list -> . condition_list OR expression
    (20) condition_list -> . LPAREN condition_list RPAREN
    (21) expression -> . TRUE
    (22) expression -> . FALSE
    (23) expression -> . ID
    (24) expression -> . NUMBER
    (25) expression -> . STRING
    (26) expression -> . expression ADD expression
    (27) expression -> . expression REM expression
    (28) expression -> . expression MUL expression
    (29) expression -> . expression DIV expression
    (30) expression -> . expression MOD expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression LE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression POW expression
    (38) expression -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 37
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    ID              shift and go to state 21
    NUMBER          shift and go to state 15
    STRING          shift and go to state 16

    condition_list                 shift and go to state 61
    expression                     shift and go to state 36

state 39

    (13) line_statement -> ID ASSIGN . expression SPLIT
    (14) line_statement -> ID ASSIGN . condition_list SPLIT
    (9) if_assign -> ID ASSIGN . expression
    (21) expression -> . TRUE
    (22) expression -> . FALSE
    (23) expression -> . ID
    (24) expression -> . NUMBER
    (25) expression -> . STRING
    (26) expression -> . expression ADD expression
    (27) expression -> . expression REM expression
    (28) expression -> . expression MUL expression
    (29) expression -> . expression DIV expression
    (30) expression -> . expression MOD expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression LE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression POW expression
    (38) expression -> . LPAREN expression RPAREN
    (17) condition_list -> . expression
    (18) condition_list -> . condition_list AND expression
    (19) condition_list -> . condition_list OR expression
    (20) condition_list -> . LPAREN condition_list RPAREN

    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    ID              shift and go to state 21
    NUMBER          shift and go to state 15
    STRING          shift and go to state 16
    LPAREN          shift and go to state 64

    expression                     shift and go to state 62
    condition_list                 shift and go to state 63

state 40

    (8) line_statement -> statement IF condition_list . ELSE statement SPLIT
    (18) condition_list -> condition_list . AND expression
    (19) condition_list -> condition_list . OR expression

    ELSE            shift and go to state 65
    AND             shift and go to state 57
    OR              shift and go to state 58


state 41

    (7) statement -> PRINT LPAREN expr_list . RPAREN
    (16) expr_list -> expr_list . COMMA expression

    RPAREN          shift and go to state 66
    COMMA           shift and go to state 67


state 42

    (15) expr_list -> expression .
    (26) expression -> expression . ADD expression
    (27) expression -> expression . REM expression
    (28) expression -> expression . MUL expression
    (29) expression -> expression . DIV expression
    (30) expression -> expression . MOD expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . LE expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . POW expression

    RPAREN          reduce using rule 15 (expr_list -> expression .)
    COMMA           reduce using rule 15 (expr_list -> expression .)
    ADD             shift and go to state 23
    REM             shift and go to state 24
    MUL             shift and go to state 25
    DIV             shift and go to state 26
    MOD             shift and go to state 27
    GT              shift and go to state 28
    LT              shift and go to state 29
    GE              shift and go to state 30
    LE              shift and go to state 31
    EQ              shift and go to state 32
    NE              shift and go to state 33
    POW             shift and go to state 34


state 43

    (38) expression -> LPAREN expression RPAREN .

    SPLIT           reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    ADD             reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    REM             reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    MUL             reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    DIV             reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    NE              reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    POW             reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    COLON           reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    IF              reduce using rule 38 (expression -> LPAREN expression RPAREN .)


state 44

    (26) expression -> expression ADD expression .
    (26) expression -> expression . ADD expression
    (27) expression -> expression . REM expression
    (28) expression -> expression . MUL expression
    (29) expression -> expression . DIV expression
    (30) expression -> expression . MOD expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . LE expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . POW expression

    SPLIT           reduce using rule 26 (expression -> expression ADD expression .)
    ADD             reduce using rule 26 (expression -> expression ADD expression .)
    REM             reduce using rule 26 (expression -> expression ADD expression .)
    GT              reduce using rule 26 (expression -> expression ADD expression .)
    LT              reduce using rule 26 (expression -> expression ADD expression .)
    GE              reduce using rule 26 (expression -> expression ADD expression .)
    LE              reduce using rule 26 (expression -> expression ADD expression .)
    EQ              reduce using rule 26 (expression -> expression ADD expression .)
    NE              reduce using rule 26 (expression -> expression ADD expression .)
    RPAREN          reduce using rule 26 (expression -> expression ADD expression .)
    COLON           reduce using rule 26 (expression -> expression ADD expression .)
    AND             reduce using rule 26 (expression -> expression ADD expression .)
    OR              reduce using rule 26 (expression -> expression ADD expression .)
    ELSE            reduce using rule 26 (expression -> expression ADD expression .)
    COMMA           reduce using rule 26 (expression -> expression ADD expression .)
    IF              reduce using rule 26 (expression -> expression ADD expression .)
    MUL             shift and go to state 25
    DIV             shift and go to state 26
    MOD             shift and go to state 27
    POW             shift and go to state 34

  ! MUL             [ reduce using rule 26 (expression -> expression ADD expression .) ]
  ! DIV             [ reduce using rule 26 (expression -> expression ADD expression .) ]
  ! MOD             [ reduce using rule 26 (expression -> expression ADD expression .) ]
  ! POW             [ reduce using rule 26 (expression -> expression ADD expression .) ]
  ! ADD             [ shift and go to state 23 ]
  ! REM             [ shift and go to state 24 ]
  ! GT              [ shift and go to state 28 ]
  ! LT              [ shift and go to state 29 ]
  ! GE              [ shift and go to state 30 ]
  ! LE              [ shift and go to state 31 ]
  ! EQ              [ shift and go to state 32 ]
  ! NE              [ shift and go to state 33 ]


state 45

    (27) expression -> expression REM expression .
    (26) expression -> expression . ADD expression
    (27) expression -> expression . REM expression
    (28) expression -> expression . MUL expression
    (29) expression -> expression . DIV expression
    (30) expression -> expression . MOD expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . LE expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . POW expression

    SPLIT           reduce using rule 27 (expression -> expression REM expression .)
    ADD             reduce using rule 27 (expression -> expression REM expression .)
    REM             reduce using rule 27 (expression -> expression REM expression .)
    GT              reduce using rule 27 (expression -> expression REM expression .)
    LT              reduce using rule 27 (expression -> expression REM expression .)
    GE              reduce using rule 27 (expression -> expression REM expression .)
    LE              reduce using rule 27 (expression -> expression REM expression .)
    EQ              reduce using rule 27 (expression -> expression REM expression .)
    NE              reduce using rule 27 (expression -> expression REM expression .)
    RPAREN          reduce using rule 27 (expression -> expression REM expression .)
    COLON           reduce using rule 27 (expression -> expression REM expression .)
    AND             reduce using rule 27 (expression -> expression REM expression .)
    OR              reduce using rule 27 (expression -> expression REM expression .)
    ELSE            reduce using rule 27 (expression -> expression REM expression .)
    COMMA           reduce using rule 27 (expression -> expression REM expression .)
    IF              reduce using rule 27 (expression -> expression REM expression .)
    MUL             shift and go to state 25
    DIV             shift and go to state 26
    MOD             shift and go to state 27
    POW             shift and go to state 34

  ! MUL             [ reduce using rule 27 (expression -> expression REM expression .) ]
  ! DIV             [ reduce using rule 27 (expression -> expression REM expression .) ]
  ! MOD             [ reduce using rule 27 (expression -> expression REM expression .) ]
  ! POW             [ reduce using rule 27 (expression -> expression REM expression .) ]
  ! ADD             [ shift and go to state 23 ]
  ! REM             [ shift and go to state 24 ]
  ! GT              [ shift and go to state 28 ]
  ! LT              [ shift and go to state 29 ]
  ! GE              [ shift and go to state 30 ]
  ! LE              [ shift and go to state 31 ]
  ! EQ              [ shift and go to state 32 ]
  ! NE              [ shift and go to state 33 ]


state 46

    (28) expression -> expression MUL expression .
    (26) expression -> expression . ADD expression
    (27) expression -> expression . REM expression
    (28) expression -> expression . MUL expression
    (29) expression -> expression . DIV expression
    (30) expression -> expression . MOD expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . LE expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . POW expression

    SPLIT           reduce using rule 28 (expression -> expression MUL expression .)
    ADD             reduce using rule 28 (expression -> expression MUL expression .)
    REM             reduce using rule 28 (expression -> expression MUL expression .)
    MUL             reduce using rule 28 (expression -> expression MUL expression .)
    DIV             reduce using rule 28 (expression -> expression MUL expression .)
    MOD             reduce using rule 28 (expression -> expression MUL expression .)
    GT              reduce using rule 28 (expression -> expression MUL expression .)
    LT              reduce using rule 28 (expression -> expression MUL expression .)
    GE              reduce using rule 28 (expression -> expression MUL expression .)
    LE              reduce using rule 28 (expression -> expression MUL expression .)
    EQ              reduce using rule 28 (expression -> expression MUL expression .)
    NE              reduce using rule 28 (expression -> expression MUL expression .)
    RPAREN          reduce using rule 28 (expression -> expression MUL expression .)
    COLON           reduce using rule 28 (expression -> expression MUL expression .)
    AND             reduce using rule 28 (expression -> expression MUL expression .)
    OR              reduce using rule 28 (expression -> expression MUL expression .)
    ELSE            reduce using rule 28 (expression -> expression MUL expression .)
    COMMA           reduce using rule 28 (expression -> expression MUL expression .)
    IF              reduce using rule 28 (expression -> expression MUL expression .)
    POW             shift and go to state 34

  ! POW             [ reduce using rule 28 (expression -> expression MUL expression .) ]
  ! ADD             [ shift and go to state 23 ]
  ! REM             [ shift and go to state 24 ]
  ! MUL             [ shift and go to state 25 ]
  ! DIV             [ shift and go to state 26 ]
  ! MOD             [ shift and go to state 27 ]
  ! GT              [ shift and go to state 28 ]
  ! LT              [ shift and go to state 29 ]
  ! GE              [ shift and go to state 30 ]
  ! LE              [ shift and go to state 31 ]
  ! EQ              [ shift and go to state 32 ]
  ! NE              [ shift and go to state 33 ]


state 47

    (29) expression -> expression DIV expression .
    (26) expression -> expression . ADD expression
    (27) expression -> expression . REM expression
    (28) expression -> expression . MUL expression
    (29) expression -> expression . DIV expression
    (30) expression -> expression . MOD expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . LE expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . POW expression

    SPLIT           reduce using rule 29 (expression -> expression DIV expression .)
    ADD             reduce using rule 29 (expression -> expression DIV expression .)
    REM             reduce using rule 29 (expression -> expression DIV expression .)
    MUL             reduce using rule 29 (expression -> expression DIV expression .)
    DIV             reduce using rule 29 (expression -> expression DIV expression .)
    MOD             reduce using rule 29 (expression -> expression DIV expression .)
    GT              reduce using rule 29 (expression -> expression DIV expression .)
    LT              reduce using rule 29 (expression -> expression DIV expression .)
    GE              reduce using rule 29 (expression -> expression DIV expression .)
    LE              reduce using rule 29 (expression -> expression DIV expression .)
    EQ              reduce using rule 29 (expression -> expression DIV expression .)
    NE              reduce using rule 29 (expression -> expression DIV expression .)
    RPAREN          reduce using rule 29 (expression -> expression DIV expression .)
    COLON           reduce using rule 29 (expression -> expression DIV expression .)
    AND             reduce using rule 29 (expression -> expression DIV expression .)
    OR              reduce using rule 29 (expression -> expression DIV expression .)
    ELSE            reduce using rule 29 (expression -> expression DIV expression .)
    COMMA           reduce using rule 29 (expression -> expression DIV expression .)
    IF              reduce using rule 29 (expression -> expression DIV expression .)
    POW             shift and go to state 34

  ! POW             [ reduce using rule 29 (expression -> expression DIV expression .) ]
  ! ADD             [ shift and go to state 23 ]
  ! REM             [ shift and go to state 24 ]
  ! MUL             [ shift and go to state 25 ]
  ! DIV             [ shift and go to state 26 ]
  ! MOD             [ shift and go to state 27 ]
  ! GT              [ shift and go to state 28 ]
  ! LT              [ shift and go to state 29 ]
  ! GE              [ shift and go to state 30 ]
  ! LE              [ shift and go to state 31 ]
  ! EQ              [ shift and go to state 32 ]
  ! NE              [ shift and go to state 33 ]


state 48

    (30) expression -> expression MOD expression .
    (26) expression -> expression . ADD expression
    (27) expression -> expression . REM expression
    (28) expression -> expression . MUL expression
    (29) expression -> expression . DIV expression
    (30) expression -> expression . MOD expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . LE expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . POW expression

    SPLIT           reduce using rule 30 (expression -> expression MOD expression .)
    ADD             reduce using rule 30 (expression -> expression MOD expression .)
    REM             reduce using rule 30 (expression -> expression MOD expression .)
    MUL             reduce using rule 30 (expression -> expression MOD expression .)
    DIV             reduce using rule 30 (expression -> expression MOD expression .)
    MOD             reduce using rule 30 (expression -> expression MOD expression .)
    GT              reduce using rule 30 (expression -> expression MOD expression .)
    LT              reduce using rule 30 (expression -> expression MOD expression .)
    GE              reduce using rule 30 (expression -> expression MOD expression .)
    LE              reduce using rule 30 (expression -> expression MOD expression .)
    EQ              reduce using rule 30 (expression -> expression MOD expression .)
    NE              reduce using rule 30 (expression -> expression MOD expression .)
    RPAREN          reduce using rule 30 (expression -> expression MOD expression .)
    COLON           reduce using rule 30 (expression -> expression MOD expression .)
    AND             reduce using rule 30 (expression -> expression MOD expression .)
    OR              reduce using rule 30 (expression -> expression MOD expression .)
    ELSE            reduce using rule 30 (expression -> expression MOD expression .)
    COMMA           reduce using rule 30 (expression -> expression MOD expression .)
    IF              reduce using rule 30 (expression -> expression MOD expression .)
    POW             shift and go to state 34

  ! POW             [ reduce using rule 30 (expression -> expression MOD expression .) ]
  ! ADD             [ shift and go to state 23 ]
  ! REM             [ shift and go to state 24 ]
  ! MUL             [ shift and go to state 25 ]
  ! DIV             [ shift and go to state 26 ]
  ! MOD             [ shift and go to state 27 ]
  ! GT              [ shift and go to state 28 ]
  ! LT              [ shift and go to state 29 ]
  ! GE              [ shift and go to state 30 ]
  ! LE              [ shift and go to state 31 ]
  ! EQ              [ shift and go to state 32 ]
  ! NE              [ shift and go to state 33 ]


state 49

    (31) expression -> expression GT expression .
    (26) expression -> expression . ADD expression
    (27) expression -> expression . REM expression
    (28) expression -> expression . MUL expression
    (29) expression -> expression . DIV expression
    (30) expression -> expression . MOD expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . LE expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . POW expression

    SPLIT           reduce using rule 31 (expression -> expression GT expression .)
    GT              reduce using rule 31 (expression -> expression GT expression .)
    LT              reduce using rule 31 (expression -> expression GT expression .)
    GE              reduce using rule 31 (expression -> expression GT expression .)
    LE              reduce using rule 31 (expression -> expression GT expression .)
    EQ              reduce using rule 31 (expression -> expression GT expression .)
    NE              reduce using rule 31 (expression -> expression GT expression .)
    RPAREN          reduce using rule 31 (expression -> expression GT expression .)
    COLON           reduce using rule 31 (expression -> expression GT expression .)
    AND             reduce using rule 31 (expression -> expression GT expression .)
    OR              reduce using rule 31 (expression -> expression GT expression .)
    ELSE            reduce using rule 31 (expression -> expression GT expression .)
    COMMA           reduce using rule 31 (expression -> expression GT expression .)
    IF              reduce using rule 31 (expression -> expression GT expression .)
    ADD             shift and go to state 23
    REM             shift and go to state 24
    MUL             shift and go to state 25
    DIV             shift and go to state 26
    MOD             shift and go to state 27
    POW             shift and go to state 34

  ! ADD             [ reduce using rule 31 (expression -> expression GT expression .) ]
  ! REM             [ reduce using rule 31 (expression -> expression GT expression .) ]
  ! MUL             [ reduce using rule 31 (expression -> expression GT expression .) ]
  ! DIV             [ reduce using rule 31 (expression -> expression GT expression .) ]
  ! MOD             [ reduce using rule 31 (expression -> expression GT expression .) ]
  ! POW             [ reduce using rule 31 (expression -> expression GT expression .) ]
  ! GT              [ shift and go to state 28 ]
  ! LT              [ shift and go to state 29 ]
  ! GE              [ shift and go to state 30 ]
  ! LE              [ shift and go to state 31 ]
  ! EQ              [ shift and go to state 32 ]
  ! NE              [ shift and go to state 33 ]


state 50

    (32) expression -> expression LT expression .
    (26) expression -> expression . ADD expression
    (27) expression -> expression . REM expression
    (28) expression -> expression . MUL expression
    (29) expression -> expression . DIV expression
    (30) expression -> expression . MOD expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . LE expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . POW expression

    SPLIT           reduce using rule 32 (expression -> expression LT expression .)
    GT              reduce using rule 32 (expression -> expression LT expression .)
    LT              reduce using rule 32 (expression -> expression LT expression .)
    GE              reduce using rule 32 (expression -> expression LT expression .)
    LE              reduce using rule 32 (expression -> expression LT expression .)
    EQ              reduce using rule 32 (expression -> expression LT expression .)
    NE              reduce using rule 32 (expression -> expression LT expression .)
    RPAREN          reduce using rule 32 (expression -> expression LT expression .)
    COLON           reduce using rule 32 (expression -> expression LT expression .)
    AND             reduce using rule 32 (expression -> expression LT expression .)
    OR              reduce using rule 32 (expression -> expression LT expression .)
    ELSE            reduce using rule 32 (expression -> expression LT expression .)
    COMMA           reduce using rule 32 (expression -> expression LT expression .)
    IF              reduce using rule 32 (expression -> expression LT expression .)
    ADD             shift and go to state 23
    REM             shift and go to state 24
    MUL             shift and go to state 25
    DIV             shift and go to state 26
    MOD             shift and go to state 27
    POW             shift and go to state 34

  ! ADD             [ reduce using rule 32 (expression -> expression LT expression .) ]
  ! REM             [ reduce using rule 32 (expression -> expression LT expression .) ]
  ! MUL             [ reduce using rule 32 (expression -> expression LT expression .) ]
  ! DIV             [ reduce using rule 32 (expression -> expression LT expression .) ]
  ! MOD             [ reduce using rule 32 (expression -> expression LT expression .) ]
  ! POW             [ reduce using rule 32 (expression -> expression LT expression .) ]
  ! GT              [ shift and go to state 28 ]
  ! LT              [ shift and go to state 29 ]
  ! GE              [ shift and go to state 30 ]
  ! LE              [ shift and go to state 31 ]
  ! EQ              [ shift and go to state 32 ]
  ! NE              [ shift and go to state 33 ]


state 51

    (33) expression -> expression GE expression .
    (26) expression -> expression . ADD expression
    (27) expression -> expression . REM expression
    (28) expression -> expression . MUL expression
    (29) expression -> expression . DIV expression
    (30) expression -> expression . MOD expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . LE expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . POW expression

    SPLIT           reduce using rule 33 (expression -> expression GE expression .)
    GT              reduce using rule 33 (expression -> expression GE expression .)
    LT              reduce using rule 33 (expression -> expression GE expression .)
    GE              reduce using rule 33 (expression -> expression GE expression .)
    LE              reduce using rule 33 (expression -> expression GE expression .)
    EQ              reduce using rule 33 (expression -> expression GE expression .)
    NE              reduce using rule 33 (expression -> expression GE expression .)
    RPAREN          reduce using rule 33 (expression -> expression GE expression .)
    COLON           reduce using rule 33 (expression -> expression GE expression .)
    AND             reduce using rule 33 (expression -> expression GE expression .)
    OR              reduce using rule 33 (expression -> expression GE expression .)
    ELSE            reduce using rule 33 (expression -> expression GE expression .)
    COMMA           reduce using rule 33 (expression -> expression GE expression .)
    IF              reduce using rule 33 (expression -> expression GE expression .)
    ADD             shift and go to state 23
    REM             shift and go to state 24
    MUL             shift and go to state 25
    DIV             shift and go to state 26
    MOD             shift and go to state 27
    POW             shift and go to state 34

  ! ADD             [ reduce using rule 33 (expression -> expression GE expression .) ]
  ! REM             [ reduce using rule 33 (expression -> expression GE expression .) ]
  ! MUL             [ reduce using rule 33 (expression -> expression GE expression .) ]
  ! DIV             [ reduce using rule 33 (expression -> expression GE expression .) ]
  ! MOD             [ reduce using rule 33 (expression -> expression GE expression .) ]
  ! POW             [ reduce using rule 33 (expression -> expression GE expression .) ]
  ! GT              [ shift and go to state 28 ]
  ! LT              [ shift and go to state 29 ]
  ! GE              [ shift and go to state 30 ]
  ! LE              [ shift and go to state 31 ]
  ! EQ              [ shift and go to state 32 ]
  ! NE              [ shift and go to state 33 ]


state 52

    (34) expression -> expression LE expression .
    (26) expression -> expression . ADD expression
    (27) expression -> expression . REM expression
    (28) expression -> expression . MUL expression
    (29) expression -> expression . DIV expression
    (30) expression -> expression . MOD expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . LE expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . POW expression

    SPLIT           reduce using rule 34 (expression -> expression LE expression .)
    GT              reduce using rule 34 (expression -> expression LE expression .)
    LT              reduce using rule 34 (expression -> expression LE expression .)
    GE              reduce using rule 34 (expression -> expression LE expression .)
    LE              reduce using rule 34 (expression -> expression LE expression .)
    EQ              reduce using rule 34 (expression -> expression LE expression .)
    NE              reduce using rule 34 (expression -> expression LE expression .)
    RPAREN          reduce using rule 34 (expression -> expression LE expression .)
    COLON           reduce using rule 34 (expression -> expression LE expression .)
    AND             reduce using rule 34 (expression -> expression LE expression .)
    OR              reduce using rule 34 (expression -> expression LE expression .)
    ELSE            reduce using rule 34 (expression -> expression LE expression .)
    COMMA           reduce using rule 34 (expression -> expression LE expression .)
    IF              reduce using rule 34 (expression -> expression LE expression .)
    ADD             shift and go to state 23
    REM             shift and go to state 24
    MUL             shift and go to state 25
    DIV             shift and go to state 26
    MOD             shift and go to state 27
    POW             shift and go to state 34

  ! ADD             [ reduce using rule 34 (expression -> expression LE expression .) ]
  ! REM             [ reduce using rule 34 (expression -> expression LE expression .) ]
  ! MUL             [ reduce using rule 34 (expression -> expression LE expression .) ]
  ! DIV             [ reduce using rule 34 (expression -> expression LE expression .) ]
  ! MOD             [ reduce using rule 34 (expression -> expression LE expression .) ]
  ! POW             [ reduce using rule 34 (expression -> expression LE expression .) ]
  ! GT              [ shift and go to state 28 ]
  ! LT              [ shift and go to state 29 ]
  ! GE              [ shift and go to state 30 ]
  ! LE              [ shift and go to state 31 ]
  ! EQ              [ shift and go to state 32 ]
  ! NE              [ shift and go to state 33 ]


state 53

    (35) expression -> expression EQ expression .
    (26) expression -> expression . ADD expression
    (27) expression -> expression . REM expression
    (28) expression -> expression . MUL expression
    (29) expression -> expression . DIV expression
    (30) expression -> expression . MOD expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . LE expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . POW expression

    SPLIT           reduce using rule 35 (expression -> expression EQ expression .)
    GT              reduce using rule 35 (expression -> expression EQ expression .)
    LT              reduce using rule 35 (expression -> expression EQ expression .)
    GE              reduce using rule 35 (expression -> expression EQ expression .)
    LE              reduce using rule 35 (expression -> expression EQ expression .)
    EQ              reduce using rule 35 (expression -> expression EQ expression .)
    NE              reduce using rule 35 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 35 (expression -> expression EQ expression .)
    COLON           reduce using rule 35 (expression -> expression EQ expression .)
    AND             reduce using rule 35 (expression -> expression EQ expression .)
    OR              reduce using rule 35 (expression -> expression EQ expression .)
    ELSE            reduce using rule 35 (expression -> expression EQ expression .)
    COMMA           reduce using rule 35 (expression -> expression EQ expression .)
    IF              reduce using rule 35 (expression -> expression EQ expression .)
    ADD             shift and go to state 23
    REM             shift and go to state 24
    MUL             shift and go to state 25
    DIV             shift and go to state 26
    MOD             shift and go to state 27
    POW             shift and go to state 34

  ! ADD             [ reduce using rule 35 (expression -> expression EQ expression .) ]
  ! REM             [ reduce using rule 35 (expression -> expression EQ expression .) ]
  ! MUL             [ reduce using rule 35 (expression -> expression EQ expression .) ]
  ! DIV             [ reduce using rule 35 (expression -> expression EQ expression .) ]
  ! MOD             [ reduce using rule 35 (expression -> expression EQ expression .) ]
  ! POW             [ reduce using rule 35 (expression -> expression EQ expression .) ]
  ! GT              [ shift and go to state 28 ]
  ! LT              [ shift and go to state 29 ]
  ! GE              [ shift and go to state 30 ]
  ! LE              [ shift and go to state 31 ]
  ! EQ              [ shift and go to state 32 ]
  ! NE              [ shift and go to state 33 ]


state 54

    (36) expression -> expression NE expression .
    (26) expression -> expression . ADD expression
    (27) expression -> expression . REM expression
    (28) expression -> expression . MUL expression
    (29) expression -> expression . DIV expression
    (30) expression -> expression . MOD expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . LE expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . POW expression

    SPLIT           reduce using rule 36 (expression -> expression NE expression .)
    GT              reduce using rule 36 (expression -> expression NE expression .)
    LT              reduce using rule 36 (expression -> expression NE expression .)
    GE              reduce using rule 36 (expression -> expression NE expression .)
    LE              reduce using rule 36 (expression -> expression NE expression .)
    EQ              reduce using rule 36 (expression -> expression NE expression .)
    NE              reduce using rule 36 (expression -> expression NE expression .)
    RPAREN          reduce using rule 36 (expression -> expression NE expression .)
    COLON           reduce using rule 36 (expression -> expression NE expression .)
    AND             reduce using rule 36 (expression -> expression NE expression .)
    OR              reduce using rule 36 (expression -> expression NE expression .)
    ELSE            reduce using rule 36 (expression -> expression NE expression .)
    COMMA           reduce using rule 36 (expression -> expression NE expression .)
    IF              reduce using rule 36 (expression -> expression NE expression .)
    ADD             shift and go to state 23
    REM             shift and go to state 24
    MUL             shift and go to state 25
    DIV             shift and go to state 26
    MOD             shift and go to state 27
    POW             shift and go to state 34

  ! ADD             [ reduce using rule 36 (expression -> expression NE expression .) ]
  ! REM             [ reduce using rule 36 (expression -> expression NE expression .) ]
  ! MUL             [ reduce using rule 36 (expression -> expression NE expression .) ]
  ! DIV             [ reduce using rule 36 (expression -> expression NE expression .) ]
  ! MOD             [ reduce using rule 36 (expression -> expression NE expression .) ]
  ! POW             [ reduce using rule 36 (expression -> expression NE expression .) ]
  ! GT              [ shift and go to state 28 ]
  ! LT              [ shift and go to state 29 ]
  ! GE              [ shift and go to state 30 ]
  ! LE              [ shift and go to state 31 ]
  ! EQ              [ shift and go to state 32 ]
  ! NE              [ shift and go to state 33 ]


state 55

    (37) expression -> expression POW expression .
    (26) expression -> expression . ADD expression
    (27) expression -> expression . REM expression
    (28) expression -> expression . MUL expression
    (29) expression -> expression . DIV expression
    (30) expression -> expression . MOD expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . LE expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . POW expression

    SPLIT           reduce using rule 37 (expression -> expression POW expression .)
    ADD             reduce using rule 37 (expression -> expression POW expression .)
    REM             reduce using rule 37 (expression -> expression POW expression .)
    MUL             reduce using rule 37 (expression -> expression POW expression .)
    DIV             reduce using rule 37 (expression -> expression POW expression .)
    MOD             reduce using rule 37 (expression -> expression POW expression .)
    GT              reduce using rule 37 (expression -> expression POW expression .)
    LT              reduce using rule 37 (expression -> expression POW expression .)
    GE              reduce using rule 37 (expression -> expression POW expression .)
    LE              reduce using rule 37 (expression -> expression POW expression .)
    EQ              reduce using rule 37 (expression -> expression POW expression .)
    NE              reduce using rule 37 (expression -> expression POW expression .)
    POW             reduce using rule 37 (expression -> expression POW expression .)
    RPAREN          reduce using rule 37 (expression -> expression POW expression .)
    COLON           reduce using rule 37 (expression -> expression POW expression .)
    AND             reduce using rule 37 (expression -> expression POW expression .)
    OR              reduce using rule 37 (expression -> expression POW expression .)
    ELSE            reduce using rule 37 (expression -> expression POW expression .)
    COMMA           reduce using rule 37 (expression -> expression POW expression .)
    IF              reduce using rule 37 (expression -> expression POW expression .)

  ! ADD             [ shift and go to state 23 ]
  ! REM             [ shift and go to state 24 ]
  ! MUL             [ shift and go to state 25 ]
  ! DIV             [ shift and go to state 26 ]
  ! MOD             [ shift and go to state 27 ]
  ! GT              [ shift and go to state 28 ]
  ! LT              [ shift and go to state 29 ]
  ! GE              [ shift and go to state 30 ]
  ! LE              [ shift and go to state 31 ]
  ! EQ              [ shift and go to state 32 ]
  ! NE              [ shift and go to state 33 ]
  ! POW             [ shift and go to state 34 ]


state 56

    (11) line_statement -> IF condition_list COLON . statement SPLIT
    (12) line_statement -> IF condition_list COLON . SPLIT statement SPLIT
    (7) statement -> . PRINT LPAREN expr_list RPAREN

    SPLIT           shift and go to state 69
    PRINT           shift and go to state 7

    statement                      shift and go to state 68

state 57

    (18) condition_list -> condition_list AND . expression
    (21) expression -> . TRUE
    (22) expression -> . FALSE
    (23) expression -> . ID
    (24) expression -> . NUMBER
    (25) expression -> . STRING
    (26) expression -> . expression ADD expression
    (27) expression -> . expression REM expression
    (28) expression -> . expression MUL expression
    (29) expression -> . expression DIV expression
    (30) expression -> . expression MOD expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression LE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression POW expression
    (38) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    ID              shift and go to state 21
    NUMBER          shift and go to state 15
    STRING          shift and go to state 16
    LPAREN          shift and go to state 8

    expression                     shift and go to state 70

state 58

    (19) condition_list -> condition_list OR . expression
    (21) expression -> . TRUE
    (22) expression -> . FALSE
    (23) expression -> . ID
    (24) expression -> . NUMBER
    (25) expression -> . STRING
    (26) expression -> . expression ADD expression
    (27) expression -> . expression REM expression
    (28) expression -> . expression MUL expression
    (29) expression -> . expression DIV expression
    (30) expression -> . expression MOD expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression LE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression POW expression
    (38) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    ID              shift and go to state 21
    NUMBER          shift and go to state 15
    STRING          shift and go to state 16
    LPAREN          shift and go to state 8

    expression                     shift and go to state 71

state 59

    (20) condition_list -> LPAREN condition_list . RPAREN
    (18) condition_list -> condition_list . AND expression
    (19) condition_list -> condition_list . OR expression

    RPAREN          shift and go to state 72
    AND             shift and go to state 57
    OR              shift and go to state 58


state 60

    (38) expression -> LPAREN expression . RPAREN
    (17) condition_list -> expression .
    (26) expression -> expression . ADD expression
    (27) expression -> expression . REM expression
    (28) expression -> expression . MUL expression
    (29) expression -> expression . DIV expression
    (30) expression -> expression . MOD expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . LE expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . POW expression

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 43
    AND             reduce using rule 17 (condition_list -> expression .)
    OR              reduce using rule 17 (condition_list -> expression .)
    ADD             shift and go to state 23
    REM             shift and go to state 24
    MUL             shift and go to state 25
    DIV             shift and go to state 26
    MOD             shift and go to state 27
    GT              shift and go to state 28
    LT              shift and go to state 29
    GE              shift and go to state 30
    LE              shift and go to state 31
    EQ              shift and go to state 32
    NE              shift and go to state 33
    POW             shift and go to state 34

  ! RPAREN          [ reduce using rule 17 (condition_list -> expression .) ]


state 61

    (10) line_statement -> if_assign IF condition_list . ELSE expression SPLIT
    (18) condition_list -> condition_list . AND expression
    (19) condition_list -> condition_list . OR expression

    ELSE            shift and go to state 73
    AND             shift and go to state 57
    OR              shift and go to state 58


state 62

    (13) line_statement -> ID ASSIGN expression . SPLIT
    (9) if_assign -> ID ASSIGN expression .
    (26) expression -> expression . ADD expression
    (27) expression -> expression . REM expression
    (28) expression -> expression . MUL expression
    (29) expression -> expression . DIV expression
    (30) expression -> expression . MOD expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . LE expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . POW expression
    (17) condition_list -> expression .

  ! shift/reduce conflict for SPLIT resolved as shift
    SPLIT           shift and go to state 74
    IF              reduce using rule 9 (if_assign -> ID ASSIGN expression .)
    ADD             shift and go to state 23
    REM             shift and go to state 24
    MUL             shift and go to state 25
    DIV             shift and go to state 26
    MOD             shift and go to state 27
    GT              shift and go to state 28
    LT              shift and go to state 29
    GE              shift and go to state 30
    LE              shift and go to state 31
    EQ              shift and go to state 32
    NE              shift and go to state 33
    POW             shift and go to state 34
    AND             reduce using rule 17 (condition_list -> expression .)
    OR              reduce using rule 17 (condition_list -> expression .)

  ! SPLIT           [ reduce using rule 17 (condition_list -> expression .) ]


state 63

    (14) line_statement -> ID ASSIGN condition_list . SPLIT
    (18) condition_list -> condition_list . AND expression
    (19) condition_list -> condition_list . OR expression

    SPLIT           shift and go to state 75
    AND             shift and go to state 57
    OR              shift and go to state 58


state 64

    (38) expression -> LPAREN . expression RPAREN
    (20) condition_list -> LPAREN . condition_list RPAREN
    (21) expression -> . TRUE
    (22) expression -> . FALSE
    (23) expression -> . ID
    (24) expression -> . NUMBER
    (25) expression -> . STRING
    (26) expression -> . expression ADD expression
    (27) expression -> . expression REM expression
    (28) expression -> . expression MUL expression
    (29) expression -> . expression DIV expression
    (30) expression -> . expression MOD expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression LE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression POW expression
    (38) expression -> . LPAREN expression RPAREN
    (17) condition_list -> . expression
    (18) condition_list -> . condition_list AND expression
    (19) condition_list -> . condition_list OR expression
    (20) condition_list -> . LPAREN condition_list RPAREN

    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    ID              shift and go to state 21
    NUMBER          shift and go to state 15
    STRING          shift and go to state 16
    LPAREN          shift and go to state 64

    expression                     shift and go to state 76
    condition_list                 shift and go to state 59

state 65

    (8) line_statement -> statement IF condition_list ELSE . statement SPLIT
    (7) statement -> . PRINT LPAREN expr_list RPAREN

    PRINT           shift and go to state 7

    statement                      shift and go to state 77

state 66

    (7) statement -> PRINT LPAREN expr_list RPAREN .

    SPLIT           reduce using rule 7 (statement -> PRINT LPAREN expr_list RPAREN .)
    IF              reduce using rule 7 (statement -> PRINT LPAREN expr_list RPAREN .)


state 67

    (16) expr_list -> expr_list COMMA . expression
    (21) expression -> . TRUE
    (22) expression -> . FALSE
    (23) expression -> . ID
    (24) expression -> . NUMBER
    (25) expression -> . STRING
    (26) expression -> . expression ADD expression
    (27) expression -> . expression REM expression
    (28) expression -> . expression MUL expression
    (29) expression -> . expression DIV expression
    (30) expression -> . expression MOD expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression LE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression POW expression
    (38) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    ID              shift and go to state 21
    NUMBER          shift and go to state 15
    STRING          shift and go to state 16
    LPAREN          shift and go to state 8

    expression                     shift and go to state 78

state 68

    (11) line_statement -> IF condition_list COLON statement . SPLIT

    SPLIT           shift and go to state 79


state 69

    (12) line_statement -> IF condition_list COLON SPLIT . statement SPLIT
    (7) statement -> . PRINT LPAREN expr_list RPAREN

    PRINT           shift and go to state 7

    statement                      shift and go to state 80

state 70

    (18) condition_list -> condition_list AND expression .
    (26) expression -> expression . ADD expression
    (27) expression -> expression . REM expression
    (28) expression -> expression . MUL expression
    (29) expression -> expression . DIV expression
    (30) expression -> expression . MOD expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . LE expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . POW expression

    COLON           reduce using rule 18 (condition_list -> condition_list AND expression .)
    AND             reduce using rule 18 (condition_list -> condition_list AND expression .)
    OR              reduce using rule 18 (condition_list -> condition_list AND expression .)
    ELSE            reduce using rule 18 (condition_list -> condition_list AND expression .)
    RPAREN          reduce using rule 18 (condition_list -> condition_list AND expression .)
    SPLIT           reduce using rule 18 (condition_list -> condition_list AND expression .)
    ADD             shift and go to state 23
    REM             shift and go to state 24
    MUL             shift and go to state 25
    DIV             shift and go to state 26
    MOD             shift and go to state 27
    GT              shift and go to state 28
    LT              shift and go to state 29
    GE              shift and go to state 30
    LE              shift and go to state 31
    EQ              shift and go to state 32
    NE              shift and go to state 33
    POW             shift and go to state 34


state 71

    (19) condition_list -> condition_list OR expression .
    (26) expression -> expression . ADD expression
    (27) expression -> expression . REM expression
    (28) expression -> expression . MUL expression
    (29) expression -> expression . DIV expression
    (30) expression -> expression . MOD expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . LE expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . POW expression

    COLON           reduce using rule 19 (condition_list -> condition_list OR expression .)
    AND             reduce using rule 19 (condition_list -> condition_list OR expression .)
    OR              reduce using rule 19 (condition_list -> condition_list OR expression .)
    ELSE            reduce using rule 19 (condition_list -> condition_list OR expression .)
    RPAREN          reduce using rule 19 (condition_list -> condition_list OR expression .)
    SPLIT           reduce using rule 19 (condition_list -> condition_list OR expression .)
    ADD             shift and go to state 23
    REM             shift and go to state 24
    MUL             shift and go to state 25
    DIV             shift and go to state 26
    MOD             shift and go to state 27
    GT              shift and go to state 28
    LT              shift and go to state 29
    GE              shift and go to state 30
    LE              shift and go to state 31
    EQ              shift and go to state 32
    NE              shift and go to state 33
    POW             shift and go to state 34


state 72

    (20) condition_list -> LPAREN condition_list RPAREN .

    COLON           reduce using rule 20 (condition_list -> LPAREN condition_list RPAREN .)
    AND             reduce using rule 20 (condition_list -> LPAREN condition_list RPAREN .)
    OR              reduce using rule 20 (condition_list -> LPAREN condition_list RPAREN .)
    ELSE            reduce using rule 20 (condition_list -> LPAREN condition_list RPAREN .)
    RPAREN          reduce using rule 20 (condition_list -> LPAREN condition_list RPAREN .)
    SPLIT           reduce using rule 20 (condition_list -> LPAREN condition_list RPAREN .)


state 73

    (10) line_statement -> if_assign IF condition_list ELSE . expression SPLIT
    (21) expression -> . TRUE
    (22) expression -> . FALSE
    (23) expression -> . ID
    (24) expression -> . NUMBER
    (25) expression -> . STRING
    (26) expression -> . expression ADD expression
    (27) expression -> . expression REM expression
    (28) expression -> . expression MUL expression
    (29) expression -> . expression DIV expression
    (30) expression -> . expression MOD expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GE expression
    (34) expression -> . expression LE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression POW expression
    (38) expression -> . LPAREN expression RPAREN

    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    ID              shift and go to state 21
    NUMBER          shift and go to state 15
    STRING          shift and go to state 16
    LPAREN          shift and go to state 8

    expression                     shift and go to state 81

state 74

    (13) line_statement -> ID ASSIGN expression SPLIT .

    PRINT           reduce using rule 13 (line_statement -> ID ASSIGN expression SPLIT .)
    SPLIT           reduce using rule 13 (line_statement -> ID ASSIGN expression SPLIT .)
    IF              reduce using rule 13 (line_statement -> ID ASSIGN expression SPLIT .)
    ID              reduce using rule 13 (line_statement -> ID ASSIGN expression SPLIT .)
    TRUE            reduce using rule 13 (line_statement -> ID ASSIGN expression SPLIT .)
    FALSE           reduce using rule 13 (line_statement -> ID ASSIGN expression SPLIT .)
    NUMBER          reduce using rule 13 (line_statement -> ID ASSIGN expression SPLIT .)
    STRING          reduce using rule 13 (line_statement -> ID ASSIGN expression SPLIT .)
    LPAREN          reduce using rule 13 (line_statement -> ID ASSIGN expression SPLIT .)
    $end            reduce using rule 13 (line_statement -> ID ASSIGN expression SPLIT .)


state 75

    (14) line_statement -> ID ASSIGN condition_list SPLIT .

    PRINT           reduce using rule 14 (line_statement -> ID ASSIGN condition_list SPLIT .)
    SPLIT           reduce using rule 14 (line_statement -> ID ASSIGN condition_list SPLIT .)
    IF              reduce using rule 14 (line_statement -> ID ASSIGN condition_list SPLIT .)
    ID              reduce using rule 14 (line_statement -> ID ASSIGN condition_list SPLIT .)
    TRUE            reduce using rule 14 (line_statement -> ID ASSIGN condition_list SPLIT .)
    FALSE           reduce using rule 14 (line_statement -> ID ASSIGN condition_list SPLIT .)
    NUMBER          reduce using rule 14 (line_statement -> ID ASSIGN condition_list SPLIT .)
    STRING          reduce using rule 14 (line_statement -> ID ASSIGN condition_list SPLIT .)
    LPAREN          reduce using rule 14 (line_statement -> ID ASSIGN condition_list SPLIT .)
    $end            reduce using rule 14 (line_statement -> ID ASSIGN condition_list SPLIT .)


state 76

    (38) expression -> LPAREN expression . RPAREN
    (26) expression -> expression . ADD expression
    (27) expression -> expression . REM expression
    (28) expression -> expression . MUL expression
    (29) expression -> expression . DIV expression
    (30) expression -> expression . MOD expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . LE expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . POW expression
    (17) condition_list -> expression .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 43
    ADD             shift and go to state 23
    REM             shift and go to state 24
    MUL             shift and go to state 25
    DIV             shift and go to state 26
    MOD             shift and go to state 27
    GT              shift and go to state 28
    LT              shift and go to state 29
    GE              shift and go to state 30
    LE              shift and go to state 31
    EQ              shift and go to state 32
    NE              shift and go to state 33
    POW             shift and go to state 34
    AND             reduce using rule 17 (condition_list -> expression .)
    OR              reduce using rule 17 (condition_list -> expression .)

  ! RPAREN          [ reduce using rule 17 (condition_list -> expression .) ]


state 77

    (8) line_statement -> statement IF condition_list ELSE statement . SPLIT

    SPLIT           shift and go to state 82


state 78

    (16) expr_list -> expr_list COMMA expression .
    (26) expression -> expression . ADD expression
    (27) expression -> expression . REM expression
    (28) expression -> expression . MUL expression
    (29) expression -> expression . DIV expression
    (30) expression -> expression . MOD expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . LE expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . POW expression

    RPAREN          reduce using rule 16 (expr_list -> expr_list COMMA expression .)
    COMMA           reduce using rule 16 (expr_list -> expr_list COMMA expression .)
    ADD             shift and go to state 23
    REM             shift and go to state 24
    MUL             shift and go to state 25
    DIV             shift and go to state 26
    MOD             shift and go to state 27
    GT              shift and go to state 28
    LT              shift and go to state 29
    GE              shift and go to state 30
    LE              shift and go to state 31
    EQ              shift and go to state 32
    NE              shift and go to state 33
    POW             shift and go to state 34


state 79

    (11) line_statement -> IF condition_list COLON statement SPLIT .

    PRINT           reduce using rule 11 (line_statement -> IF condition_list COLON statement SPLIT .)
    SPLIT           reduce using rule 11 (line_statement -> IF condition_list COLON statement SPLIT .)
    IF              reduce using rule 11 (line_statement -> IF condition_list COLON statement SPLIT .)
    ID              reduce using rule 11 (line_statement -> IF condition_list COLON statement SPLIT .)
    TRUE            reduce using rule 11 (line_statement -> IF condition_list COLON statement SPLIT .)
    FALSE           reduce using rule 11 (line_statement -> IF condition_list COLON statement SPLIT .)
    NUMBER          reduce using rule 11 (line_statement -> IF condition_list COLON statement SPLIT .)
    STRING          reduce using rule 11 (line_statement -> IF condition_list COLON statement SPLIT .)
    LPAREN          reduce using rule 11 (line_statement -> IF condition_list COLON statement SPLIT .)
    $end            reduce using rule 11 (line_statement -> IF condition_list COLON statement SPLIT .)


state 80

    (12) line_statement -> IF condition_list COLON SPLIT statement . SPLIT

    SPLIT           shift and go to state 83


state 81

    (10) line_statement -> if_assign IF condition_list ELSE expression . SPLIT
    (26) expression -> expression . ADD expression
    (27) expression -> expression . REM expression
    (28) expression -> expression . MUL expression
    (29) expression -> expression . DIV expression
    (30) expression -> expression . MOD expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . GE expression
    (34) expression -> expression . LE expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . POW expression

    SPLIT           shift and go to state 84
    ADD             shift and go to state 23
    REM             shift and go to state 24
    MUL             shift and go to state 25
    DIV             shift and go to state 26
    MOD             shift and go to state 27
    GT              shift and go to state 28
    LT              shift and go to state 29
    GE              shift and go to state 30
    LE              shift and go to state 31
    EQ              shift and go to state 32
    NE              shift and go to state 33
    POW             shift and go to state 34


state 82

    (8) line_statement -> statement IF condition_list ELSE statement SPLIT .

    PRINT           reduce using rule 8 (line_statement -> statement IF condition_list ELSE statement SPLIT .)
    SPLIT           reduce using rule 8 (line_statement -> statement IF condition_list ELSE statement SPLIT .)
    IF              reduce using rule 8 (line_statement -> statement IF condition_list ELSE statement SPLIT .)
    ID              reduce using rule 8 (line_statement -> statement IF condition_list ELSE statement SPLIT .)
    TRUE            reduce using rule 8 (line_statement -> statement IF condition_list ELSE statement SPLIT .)
    FALSE           reduce using rule 8 (line_statement -> statement IF condition_list ELSE statement SPLIT .)
    NUMBER          reduce using rule 8 (line_statement -> statement IF condition_list ELSE statement SPLIT .)
    STRING          reduce using rule 8 (line_statement -> statement IF condition_list ELSE statement SPLIT .)
    LPAREN          reduce using rule 8 (line_statement -> statement IF condition_list ELSE statement SPLIT .)
    $end            reduce using rule 8 (line_statement -> statement IF condition_list ELSE statement SPLIT .)


state 83

    (12) line_statement -> IF condition_list COLON SPLIT statement SPLIT .

    PRINT           reduce using rule 12 (line_statement -> IF condition_list COLON SPLIT statement SPLIT .)
    SPLIT           reduce using rule 12 (line_statement -> IF condition_list COLON SPLIT statement SPLIT .)
    IF              reduce using rule 12 (line_statement -> IF condition_list COLON SPLIT statement SPLIT .)
    ID              reduce using rule 12 (line_statement -> IF condition_list COLON SPLIT statement SPLIT .)
    TRUE            reduce using rule 12 (line_statement -> IF condition_list COLON SPLIT statement SPLIT .)
    FALSE           reduce using rule 12 (line_statement -> IF condition_list COLON SPLIT statement SPLIT .)
    NUMBER          reduce using rule 12 (line_statement -> IF condition_list COLON SPLIT statement SPLIT .)
    STRING          reduce using rule 12 (line_statement -> IF condition_list COLON SPLIT statement SPLIT .)
    LPAREN          reduce using rule 12 (line_statement -> IF condition_list COLON SPLIT statement SPLIT .)
    $end            reduce using rule 12 (line_statement -> IF condition_list COLON SPLIT statement SPLIT .)


state 84

    (10) line_statement -> if_assign IF condition_list ELSE expression SPLIT .

    PRINT           reduce using rule 10 (line_statement -> if_assign IF condition_list ELSE expression SPLIT .)
    SPLIT           reduce using rule 10 (line_statement -> if_assign IF condition_list ELSE expression SPLIT .)
    IF              reduce using rule 10 (line_statement -> if_assign IF condition_list ELSE expression SPLIT .)
    ID              reduce using rule 10 (line_statement -> if_assign IF condition_list ELSE expression SPLIT .)
    TRUE            reduce using rule 10 (line_statement -> if_assign IF condition_list ELSE expression SPLIT .)
    FALSE           reduce using rule 10 (line_statement -> if_assign IF condition_list ELSE expression SPLIT .)
    NUMBER          reduce using rule 10 (line_statement -> if_assign IF condition_list ELSE expression SPLIT .)
    STRING          reduce using rule 10 (line_statement -> if_assign IF condition_list ELSE expression SPLIT .)
    LPAREN          reduce using rule 10 (line_statement -> if_assign IF condition_list ELSE expression SPLIT .)
    $end            reduce using rule 10 (line_statement -> if_assign IF condition_list ELSE expression SPLIT .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RPAREN in state 60 resolved as shift
WARNING: shift/reduce conflict for SPLIT in state 62 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 76 resolved as shift
